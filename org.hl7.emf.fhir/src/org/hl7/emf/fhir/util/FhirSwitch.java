/**
 */
package org.hl7.emf.fhir.util;

import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.util.Switch;
import org.hl7.emf.fhir.*;

/**
 * <!-- begin-user-doc -->
 * The <b>Switch</b> for the model's inheritance hierarchy.
 * It supports the call {@link #doSwitch(EObject) doSwitch(object)}
 * to invoke the <code>caseXXX</code> method for each class of the model,
 * starting with the actual class of the object
 * and proceeding up the inheritance hierarchy
 * until a non-null result is returned,
 * which is the result of the switch.
 * <!-- end-user-doc -->
 * @see org.hl7.emf.fhir.FhirPackage
 * @generated
 */
public class FhirSwitch<T> extends Switch<T> {
	/**
	 * The cached model package
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected static FhirPackage modelPackage;

	/**
	 * Creates an instance of the switch.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public FhirSwitch() {
		if (modelPackage == null) {
			modelPackage = FhirPackage.eINSTANCE;
		}
	}

	/**
	 * Checks whether this is a switch for the given package.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @param ePackage the package in question.
	 * @return whether this is a switch for the given package.
	 * @generated
	 */
	@Override
	protected boolean isSwitchFor(EPackage ePackage) {
		return ePackage == modelPackage;
	}

	/**
	 * Calls <code>caseXXX</code> for each class of the model until one returns a
	 * non null result; it yields that result. <!-- begin-user-doc --> <!--
	 * end-user-doc -->
	 *
	 * @return the first non-null result returned by a <code>caseXXX</code> call.
	 * @generated NOT
	 */
	@Override
	protected T doSwitch(final int classifierID, final EObject theEObject) {
		switch (classifierID) {
		case FhirPackage.ACCOUNT: {
			final Account account = (Account)theEObject;
			T result = caseAccount(account);
			if (result == null) result = caseDomainResource(account);
			if (result == null) result = caseResource(account);
			if (result == null) result = caseBase(account);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.ACCOUNT_BALANCE: {
			final AccountBalance accountBalance = (AccountBalance)theEObject;
			T result = caseAccountBalance(accountBalance);
			if (result == null) result = caseBackboneElement(accountBalance);
			if (result == null) result = caseElement(accountBalance);
			if (result == null) result = caseBase(accountBalance);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.ACCOUNT_COVERAGE: {
			final AccountCoverage accountCoverage = (AccountCoverage)theEObject;
			T result = caseAccountCoverage(accountCoverage);
			if (result == null) result = caseBackboneElement(accountCoverage);
			if (result == null) result = caseElement(accountCoverage);
			if (result == null) result = caseBase(accountCoverage);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.ACCOUNT_DIAGNOSIS: {
			final AccountDiagnosis accountDiagnosis = (AccountDiagnosis)theEObject;
			T result = caseAccountDiagnosis(accountDiagnosis);
			if (result == null) result = caseBackboneElement(accountDiagnosis);
			if (result == null) result = caseElement(accountDiagnosis);
			if (result == null) result = caseBase(accountDiagnosis);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.ACCOUNT_GUARANTOR: {
			final AccountGuarantor accountGuarantor = (AccountGuarantor)theEObject;
			T result = caseAccountGuarantor(accountGuarantor);
			if (result == null) result = caseBackboneElement(accountGuarantor);
			if (result == null) result = caseElement(accountGuarantor);
			if (result == null) result = caseBase(accountGuarantor);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.ACCOUNT_PROCEDURE: {
			final AccountProcedure accountProcedure = (AccountProcedure)theEObject;
			T result = caseAccountProcedure(accountProcedure);
			if (result == null) result = caseBackboneElement(accountProcedure);
			if (result == null) result = caseElement(accountProcedure);
			if (result == null) result = caseBase(accountProcedure);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.ACCOUNT_RELATED_ACCOUNT: {
			final AccountRelatedAccount accountRelatedAccount = (AccountRelatedAccount)theEObject;
			T result = caseAccountRelatedAccount(accountRelatedAccount);
			if (result == null) result = caseBackboneElement(accountRelatedAccount);
			if (result == null) result = caseElement(accountRelatedAccount);
			if (result == null) result = caseBase(accountRelatedAccount);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.ACCOUNT_STATUS: {
			final AccountStatus accountStatus = (AccountStatus)theEObject;
			T result = caseAccountStatus(accountStatus);
			if (result == null) result = caseElement(accountStatus);
			if (result == null) result = caseBase(accountStatus);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.ACTION_CARDINALITY_BEHAVIOR: {
			final ActionCardinalityBehavior actionCardinalityBehavior = (ActionCardinalityBehavior)theEObject;
			T result = caseActionCardinalityBehavior(actionCardinalityBehavior);
			if (result == null) result = caseElement(actionCardinalityBehavior);
			if (result == null) result = caseBase(actionCardinalityBehavior);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.ACTION_CONDITION_KIND: {
			final ActionConditionKind actionConditionKind = (ActionConditionKind)theEObject;
			T result = caseActionConditionKind(actionConditionKind);
			if (result == null) result = caseElement(actionConditionKind);
			if (result == null) result = caseBase(actionConditionKind);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.ACTION_GROUPING_BEHAVIOR: {
			final ActionGroupingBehavior actionGroupingBehavior = (ActionGroupingBehavior)theEObject;
			T result = caseActionGroupingBehavior(actionGroupingBehavior);
			if (result == null) result = caseElement(actionGroupingBehavior);
			if (result == null) result = caseBase(actionGroupingBehavior);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.ACTION_PARTICIPANT_TYPE: {
			final ActionParticipantType actionParticipantType = (ActionParticipantType)theEObject;
			T result = caseActionParticipantType(actionParticipantType);
			if (result == null) result = caseElement(actionParticipantType);
			if (result == null) result = caseBase(actionParticipantType);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.ACTION_PRECHECK_BEHAVIOR: {
			final ActionPrecheckBehavior actionPrecheckBehavior = (ActionPrecheckBehavior)theEObject;
			T result = caseActionPrecheckBehavior(actionPrecheckBehavior);
			if (result == null) result = caseElement(actionPrecheckBehavior);
			if (result == null) result = caseBase(actionPrecheckBehavior);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.ACTION_RELATIONSHIP_TYPE: {
			final ActionRelationshipType actionRelationshipType = (ActionRelationshipType)theEObject;
			T result = caseActionRelationshipType(actionRelationshipType);
			if (result == null) result = caseElement(actionRelationshipType);
			if (result == null) result = caseBase(actionRelationshipType);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.ACTION_REQUIRED_BEHAVIOR: {
			final ActionRequiredBehavior actionRequiredBehavior = (ActionRequiredBehavior)theEObject;
			T result = caseActionRequiredBehavior(actionRequiredBehavior);
			if (result == null) result = caseElement(actionRequiredBehavior);
			if (result == null) result = caseBase(actionRequiredBehavior);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.ACTION_SELECTION_BEHAVIOR: {
			final ActionSelectionBehavior actionSelectionBehavior = (ActionSelectionBehavior)theEObject;
			T result = caseActionSelectionBehavior(actionSelectionBehavior);
			if (result == null) result = caseElement(actionSelectionBehavior);
			if (result == null) result = caseBase(actionSelectionBehavior);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.ACTIVITY_DEFINITION: {
			final ActivityDefinition activityDefinition = (ActivityDefinition)theEObject;
			T result = caseActivityDefinition(activityDefinition);
			if (result == null) result = caseMetadataResource(activityDefinition);
			if (result == null) result = caseCanonicalResource(activityDefinition);
			if (result == null) result = caseDomainResource(activityDefinition);
			if (result == null) result = caseResource(activityDefinition);
			if (result == null) result = caseBase(activityDefinition);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.ACTIVITY_DEFINITION_DYNAMIC_VALUE: {
			final ActivityDefinitionDynamicValue activityDefinitionDynamicValue = (ActivityDefinitionDynamicValue)theEObject;
			T result = caseActivityDefinitionDynamicValue(activityDefinitionDynamicValue);
			if (result == null) result = caseBackboneElement(activityDefinitionDynamicValue);
			if (result == null) result = caseElement(activityDefinitionDynamicValue);
			if (result == null) result = caseBase(activityDefinitionDynamicValue);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.ACTIVITY_DEFINITION_PARTICIPANT: {
			final ActivityDefinitionParticipant activityDefinitionParticipant = (ActivityDefinitionParticipant)theEObject;
			T result = caseActivityDefinitionParticipant(activityDefinitionParticipant);
			if (result == null) result = caseBackboneElement(activityDefinitionParticipant);
			if (result == null) result = caseElement(activityDefinitionParticipant);
			if (result == null) result = caseBase(activityDefinitionParticipant);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.ACTOR_DEFINITION: {
			final ActorDefinition actorDefinition = (ActorDefinition)theEObject;
			T result = caseActorDefinition(actorDefinition);
			if (result == null) result = caseCanonicalResource(actorDefinition);
			if (result == null) result = caseDomainResource(actorDefinition);
			if (result == null) result = caseResource(actorDefinition);
			if (result == null) result = caseBase(actorDefinition);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.ADDRESS: {
			final Address address = (Address)theEObject;
			T result = caseAddress(address);
			if (result == null) result = caseDataType(address);
			if (result == null) result = caseElement(address);
			if (result == null) result = caseBase(address);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.ADDRESS_TYPE: {
			final AddressType addressType = (AddressType)theEObject;
			T result = caseAddressType(addressType);
			if (result == null) result = caseElement(addressType);
			if (result == null) result = caseBase(addressType);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.ADDRESS_USE: {
			final AddressUse addressUse = (AddressUse)theEObject;
			T result = caseAddressUse(addressUse);
			if (result == null) result = caseElement(addressUse);
			if (result == null) result = caseBase(addressUse);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.ADMINISTRABLE_PRODUCT_DEFINITION: {
			final AdministrableProductDefinition administrableProductDefinition = (AdministrableProductDefinition)theEObject;
			T result = caseAdministrableProductDefinition(administrableProductDefinition);
			if (result == null) result = caseDomainResource(administrableProductDefinition);
			if (result == null) result = caseResource(administrableProductDefinition);
			if (result == null) result = caseBase(administrableProductDefinition);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.ADMINISTRABLE_PRODUCT_DEFINITION_PROPERTY: {
			final AdministrableProductDefinitionProperty administrableProductDefinitionProperty = (AdministrableProductDefinitionProperty)theEObject;
			T result = caseAdministrableProductDefinitionProperty(administrableProductDefinitionProperty);
			if (result == null) result = caseBackboneElement(administrableProductDefinitionProperty);
			if (result == null) result = caseElement(administrableProductDefinitionProperty);
			if (result == null) result = caseBase(administrableProductDefinitionProperty);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.ADMINISTRABLE_PRODUCT_DEFINITION_ROUTE_OF_ADMINISTRATION: {
			final AdministrableProductDefinitionRouteOfAdministration administrableProductDefinitionRouteOfAdministration = (AdministrableProductDefinitionRouteOfAdministration)theEObject;
			T result = caseAdministrableProductDefinitionRouteOfAdministration(administrableProductDefinitionRouteOfAdministration);
			if (result == null) result = caseBackboneElement(administrableProductDefinitionRouteOfAdministration);
			if (result == null) result = caseElement(administrableProductDefinitionRouteOfAdministration);
			if (result == null) result = caseBase(administrableProductDefinitionRouteOfAdministration);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.ADMINISTRABLE_PRODUCT_DEFINITION_TARGET_SPECIES: {
			final AdministrableProductDefinitionTargetSpecies administrableProductDefinitionTargetSpecies = (AdministrableProductDefinitionTargetSpecies)theEObject;
			T result = caseAdministrableProductDefinitionTargetSpecies(administrableProductDefinitionTargetSpecies);
			if (result == null) result = caseBackboneElement(administrableProductDefinitionTargetSpecies);
			if (result == null) result = caseElement(administrableProductDefinitionTargetSpecies);
			if (result == null) result = caseBase(administrableProductDefinitionTargetSpecies);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.ADMINISTRABLE_PRODUCT_DEFINITION_WITHDRAWAL_PERIOD: {
			final AdministrableProductDefinitionWithdrawalPeriod administrableProductDefinitionWithdrawalPeriod = (AdministrableProductDefinitionWithdrawalPeriod)theEObject;
			T result = caseAdministrableProductDefinitionWithdrawalPeriod(administrableProductDefinitionWithdrawalPeriod);
			if (result == null) result = caseBackboneElement(administrableProductDefinitionWithdrawalPeriod);
			if (result == null) result = caseElement(administrableProductDefinitionWithdrawalPeriod);
			if (result == null) result = caseBase(administrableProductDefinitionWithdrawalPeriod);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.ADMINISTRATIVE_GENDER: {
			final AdministrativeGender administrativeGender = (AdministrativeGender)theEObject;
			T result = caseAdministrativeGender(administrativeGender);
			if (result == null) result = caseElement(administrativeGender);
			if (result == null) result = caseBase(administrativeGender);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.ADVERSE_EVENT: {
			final AdverseEvent adverseEvent = (AdverseEvent)theEObject;
			T result = caseAdverseEvent(adverseEvent);
			if (result == null) result = caseDomainResource(adverseEvent);
			if (result == null) result = caseResource(adverseEvent);
			if (result == null) result = caseBase(adverseEvent);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.ADVERSE_EVENT_ACTUALITY: {
			final AdverseEventActuality adverseEventActuality = (AdverseEventActuality)theEObject;
			T result = caseAdverseEventActuality(adverseEventActuality);
			if (result == null) result = caseElement(adverseEventActuality);
			if (result == null) result = caseBase(adverseEventActuality);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.ADVERSE_EVENT_CAUSALITY: {
			final AdverseEventCausality adverseEventCausality = (AdverseEventCausality)theEObject;
			T result = caseAdverseEventCausality(adverseEventCausality);
			if (result == null) result = caseBackboneElement(adverseEventCausality);
			if (result == null) result = caseElement(adverseEventCausality);
			if (result == null) result = caseBase(adverseEventCausality);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.ADVERSE_EVENT_CONTRIBUTING_FACTOR: {
			final AdverseEventContributingFactor adverseEventContributingFactor = (AdverseEventContributingFactor)theEObject;
			T result = caseAdverseEventContributingFactor(adverseEventContributingFactor);
			if (result == null) result = caseBackboneElement(adverseEventContributingFactor);
			if (result == null) result = caseElement(adverseEventContributingFactor);
			if (result == null) result = caseBase(adverseEventContributingFactor);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.ADVERSE_EVENT_MITIGATING_ACTION: {
			final AdverseEventMitigatingAction adverseEventMitigatingAction = (AdverseEventMitigatingAction)theEObject;
			T result = caseAdverseEventMitigatingAction(adverseEventMitigatingAction);
			if (result == null) result = caseBackboneElement(adverseEventMitigatingAction);
			if (result == null) result = caseElement(adverseEventMitigatingAction);
			if (result == null) result = caseBase(adverseEventMitigatingAction);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.ADVERSE_EVENT_PARTICIPANT: {
			final AdverseEventParticipant adverseEventParticipant = (AdverseEventParticipant)theEObject;
			T result = caseAdverseEventParticipant(adverseEventParticipant);
			if (result == null) result = caseBackboneElement(adverseEventParticipant);
			if (result == null) result = caseElement(adverseEventParticipant);
			if (result == null) result = caseBase(adverseEventParticipant);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.ADVERSE_EVENT_PREVENTIVE_ACTION: {
			final AdverseEventPreventiveAction adverseEventPreventiveAction = (AdverseEventPreventiveAction)theEObject;
			T result = caseAdverseEventPreventiveAction(adverseEventPreventiveAction);
			if (result == null) result = caseBackboneElement(adverseEventPreventiveAction);
			if (result == null) result = caseElement(adverseEventPreventiveAction);
			if (result == null) result = caseBase(adverseEventPreventiveAction);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.ADVERSE_EVENT_STATUS: {
			final AdverseEventStatus adverseEventStatus = (AdverseEventStatus)theEObject;
			T result = caseAdverseEventStatus(adverseEventStatus);
			if (result == null) result = caseElement(adverseEventStatus);
			if (result == null) result = caseBase(adverseEventStatus);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.ADVERSE_EVENT_SUPPORTING_INFO: {
			final AdverseEventSupportingInfo adverseEventSupportingInfo = (AdverseEventSupportingInfo)theEObject;
			T result = caseAdverseEventSupportingInfo(adverseEventSupportingInfo);
			if (result == null) result = caseBackboneElement(adverseEventSupportingInfo);
			if (result == null) result = caseElement(adverseEventSupportingInfo);
			if (result == null) result = caseBase(adverseEventSupportingInfo);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.ADVERSE_EVENT_SUSPECT_ENTITY: {
			final AdverseEventSuspectEntity adverseEventSuspectEntity = (AdverseEventSuspectEntity)theEObject;
			T result = caseAdverseEventSuspectEntity(adverseEventSuspectEntity);
			if (result == null) result = caseBackboneElement(adverseEventSuspectEntity);
			if (result == null) result = caseElement(adverseEventSuspectEntity);
			if (result == null) result = caseBase(adverseEventSuspectEntity);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.AGE: {
			final Age age = (Age)theEObject;
			T result = caseAge(age);
			if (result == null) result = caseQuantity(age);
			if (result == null) result = caseDataType(age);
			if (result == null) result = caseElement(age);
			if (result == null) result = caseBase(age);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.AGE_UNITS: {
			final AgeUnits ageUnits = (AgeUnits)theEObject;
			T result = caseAgeUnits(ageUnits);
			if (result == null) result = caseElement(ageUnits);
			if (result == null) result = caseBase(ageUnits);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.AGGREGATION_MODE: {
			final AggregationMode aggregationMode = (AggregationMode)theEObject;
			T result = caseAggregationMode(aggregationMode);
			if (result == null) result = caseElement(aggregationMode);
			if (result == null) result = caseBase(aggregationMode);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.ALLERGY_INTOLERANCE: {
			final AllergyIntolerance allergyIntolerance = (AllergyIntolerance)theEObject;
			T result = caseAllergyIntolerance(allergyIntolerance);
			if (result == null) result = caseDomainResource(allergyIntolerance);
			if (result == null) result = caseResource(allergyIntolerance);
			if (result == null) result = caseBase(allergyIntolerance);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.ALLERGY_INTOLERANCE_CATEGORY: {
			final AllergyIntoleranceCategory allergyIntoleranceCategory = (AllergyIntoleranceCategory)theEObject;
			T result = caseAllergyIntoleranceCategory(allergyIntoleranceCategory);
			if (result == null) result = caseElement(allergyIntoleranceCategory);
			if (result == null) result = caseBase(allergyIntoleranceCategory);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.ALLERGY_INTOLERANCE_CRITICALITY: {
			final AllergyIntoleranceCriticality allergyIntoleranceCriticality = (AllergyIntoleranceCriticality)theEObject;
			T result = caseAllergyIntoleranceCriticality(allergyIntoleranceCriticality);
			if (result == null) result = caseElement(allergyIntoleranceCriticality);
			if (result == null) result = caseBase(allergyIntoleranceCriticality);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.ALLERGY_INTOLERANCE_PARTICIPANT: {
			final AllergyIntoleranceParticipant allergyIntoleranceParticipant = (AllergyIntoleranceParticipant)theEObject;
			T result = caseAllergyIntoleranceParticipant(allergyIntoleranceParticipant);
			if (result == null) result = caseBackboneElement(allergyIntoleranceParticipant);
			if (result == null) result = caseElement(allergyIntoleranceParticipant);
			if (result == null) result = caseBase(allergyIntoleranceParticipant);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.ALLERGY_INTOLERANCE_REACTION: {
			final AllergyIntoleranceReaction allergyIntoleranceReaction = (AllergyIntoleranceReaction)theEObject;
			T result = caseAllergyIntoleranceReaction(allergyIntoleranceReaction);
			if (result == null) result = caseBackboneElement(allergyIntoleranceReaction);
			if (result == null) result = caseElement(allergyIntoleranceReaction);
			if (result == null) result = caseBase(allergyIntoleranceReaction);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.ALLERGY_INTOLERANCE_SEVERITY: {
			final AllergyIntoleranceSeverity allergyIntoleranceSeverity = (AllergyIntoleranceSeverity)theEObject;
			T result = caseAllergyIntoleranceSeverity(allergyIntoleranceSeverity);
			if (result == null) result = caseElement(allergyIntoleranceSeverity);
			if (result == null) result = caseBase(allergyIntoleranceSeverity);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.ALL_RESOURCE_TYPES: {
			final AllResourceTypes allResourceTypes = (AllResourceTypes)theEObject;
			T result = caseAllResourceTypes(allResourceTypes);
			if (result == null) result = caseElement(allResourceTypes);
			if (result == null) result = caseBase(allResourceTypes);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.ANNOTATION: {
			final Annotation annotation = (Annotation)theEObject;
			T result = caseAnnotation(annotation);
			if (result == null) result = caseDataType(annotation);
			if (result == null) result = caseElement(annotation);
			if (result == null) result = caseBase(annotation);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.APPOINTMENT: {
			final Appointment appointment = (Appointment)theEObject;
			T result = caseAppointment(appointment);
			if (result == null) result = caseDomainResource(appointment);
			if (result == null) result = caseResource(appointment);
			if (result == null) result = caseBase(appointment);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.APPOINTMENT_MONTHLY_TEMPLATE: {
			final AppointmentMonthlyTemplate appointmentMonthlyTemplate = (AppointmentMonthlyTemplate)theEObject;
			T result = caseAppointmentMonthlyTemplate(appointmentMonthlyTemplate);
			if (result == null) result = caseBackboneElement(appointmentMonthlyTemplate);
			if (result == null) result = caseElement(appointmentMonthlyTemplate);
			if (result == null) result = caseBase(appointmentMonthlyTemplate);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.APPOINTMENT_PARTICIPANT: {
			final AppointmentParticipant appointmentParticipant = (AppointmentParticipant)theEObject;
			T result = caseAppointmentParticipant(appointmentParticipant);
			if (result == null) result = caseBackboneElement(appointmentParticipant);
			if (result == null) result = caseElement(appointmentParticipant);
			if (result == null) result = caseBase(appointmentParticipant);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.APPOINTMENT_RECURRENCE_TEMPLATE: {
			final AppointmentRecurrenceTemplate appointmentRecurrenceTemplate = (AppointmentRecurrenceTemplate)theEObject;
			T result = caseAppointmentRecurrenceTemplate(appointmentRecurrenceTemplate);
			if (result == null) result = caseBackboneElement(appointmentRecurrenceTemplate);
			if (result == null) result = caseElement(appointmentRecurrenceTemplate);
			if (result == null) result = caseBase(appointmentRecurrenceTemplate);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.APPOINTMENT_RESPONSE: {
			final AppointmentResponse appointmentResponse = (AppointmentResponse)theEObject;
			T result = caseAppointmentResponse(appointmentResponse);
			if (result == null) result = caseDomainResource(appointmentResponse);
			if (result == null) result = caseResource(appointmentResponse);
			if (result == null) result = caseBase(appointmentResponse);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.APPOINTMENT_RESPONSE_STATUS: {
			final AppointmentResponseStatus appointmentResponseStatus = (AppointmentResponseStatus)theEObject;
			T result = caseAppointmentResponseStatus(appointmentResponseStatus);
			if (result == null) result = caseElement(appointmentResponseStatus);
			if (result == null) result = caseBase(appointmentResponseStatus);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.APPOINTMENT_STATUS: {
			final AppointmentStatus appointmentStatus = (AppointmentStatus)theEObject;
			T result = caseAppointmentStatus(appointmentStatus);
			if (result == null) result = caseElement(appointmentStatus);
			if (result == null) result = caseBase(appointmentStatus);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.APPOINTMENT_WEEKLY_TEMPLATE: {
			final AppointmentWeeklyTemplate appointmentWeeklyTemplate = (AppointmentWeeklyTemplate)theEObject;
			T result = caseAppointmentWeeklyTemplate(appointmentWeeklyTemplate);
			if (result == null) result = caseBackboneElement(appointmentWeeklyTemplate);
			if (result == null) result = caseElement(appointmentWeeklyTemplate);
			if (result == null) result = caseBase(appointmentWeeklyTemplate);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.APPOINTMENT_YEARLY_TEMPLATE: {
			final AppointmentYearlyTemplate appointmentYearlyTemplate = (AppointmentYearlyTemplate)theEObject;
			T result = caseAppointmentYearlyTemplate(appointmentYearlyTemplate);
			if (result == null) result = caseBackboneElement(appointmentYearlyTemplate);
			if (result == null) result = caseElement(appointmentYearlyTemplate);
			if (result == null) result = caseBase(appointmentYearlyTemplate);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.ARTIFACT_ASSESSMENT: {
			final ArtifactAssessment artifactAssessment = (ArtifactAssessment)theEObject;
			T result = caseArtifactAssessment(artifactAssessment);
			if (result == null) result = caseDomainResource(artifactAssessment);
			if (result == null) result = caseResource(artifactAssessment);
			if (result == null) result = caseBase(artifactAssessment);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.ARTIFACT_ASSESSMENT_CONTENT: {
			final ArtifactAssessmentContent artifactAssessmentContent = (ArtifactAssessmentContent)theEObject;
			T result = caseArtifactAssessmentContent(artifactAssessmentContent);
			if (result == null) result = caseBackboneElement(artifactAssessmentContent);
			if (result == null) result = caseElement(artifactAssessmentContent);
			if (result == null) result = caseBase(artifactAssessmentContent);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.ARTIFACT_ASSESSMENT_DISPOSITION: {
			final ArtifactAssessmentDisposition artifactAssessmentDisposition = (ArtifactAssessmentDisposition)theEObject;
			T result = caseArtifactAssessmentDisposition(artifactAssessmentDisposition);
			if (result == null) result = caseElement(artifactAssessmentDisposition);
			if (result == null) result = caseBase(artifactAssessmentDisposition);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.ARTIFACT_ASSESSMENT_INFORMATION_TYPE: {
			final ArtifactAssessmentInformationType artifactAssessmentInformationType = (ArtifactAssessmentInformationType)theEObject;
			T result = caseArtifactAssessmentInformationType(artifactAssessmentInformationType);
			if (result == null) result = caseElement(artifactAssessmentInformationType);
			if (result == null) result = caseBase(artifactAssessmentInformationType);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.ARTIFACT_ASSESSMENT_WORKFLOW_STATUS: {
			final ArtifactAssessmentWorkflowStatus artifactAssessmentWorkflowStatus = (ArtifactAssessmentWorkflowStatus)theEObject;
			T result = caseArtifactAssessmentWorkflowStatus(artifactAssessmentWorkflowStatus);
			if (result == null) result = caseElement(artifactAssessmentWorkflowStatus);
			if (result == null) result = caseBase(artifactAssessmentWorkflowStatus);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.ASSERTION_DIRECTION_TYPE: {
			final AssertionDirectionType assertionDirectionType = (AssertionDirectionType)theEObject;
			T result = caseAssertionDirectionType(assertionDirectionType);
			if (result == null) result = caseElement(assertionDirectionType);
			if (result == null) result = caseBase(assertionDirectionType);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.ASSERTION_MANUAL_COMPLETION_TYPE: {
			final AssertionManualCompletionType assertionManualCompletionType = (AssertionManualCompletionType)theEObject;
			T result = caseAssertionManualCompletionType(assertionManualCompletionType);
			if (result == null) result = caseElement(assertionManualCompletionType);
			if (result == null) result = caseBase(assertionManualCompletionType);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.ASSERTION_OPERATOR_TYPE: {
			final AssertionOperatorType assertionOperatorType = (AssertionOperatorType)theEObject;
			T result = caseAssertionOperatorType(assertionOperatorType);
			if (result == null) result = caseElement(assertionOperatorType);
			if (result == null) result = caseBase(assertionOperatorType);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.ASSERTION_RESPONSE_TYPES: {
			final AssertionResponseTypes assertionResponseTypes = (AssertionResponseTypes)theEObject;
			T result = caseAssertionResponseTypes(assertionResponseTypes);
			if (result == null) result = caseElement(assertionResponseTypes);
			if (result == null) result = caseBase(assertionResponseTypes);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.ATTACHMENT: {
			final Attachment attachment = (Attachment)theEObject;
			T result = caseAttachment(attachment);
			if (result == null) result = caseDataType(attachment);
			if (result == null) result = caseElement(attachment);
			if (result == null) result = caseBase(attachment);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.AUDIT_EVENT: {
			final AuditEvent auditEvent = (AuditEvent)theEObject;
			T result = caseAuditEvent(auditEvent);
			if (result == null) result = caseDomainResource(auditEvent);
			if (result == null) result = caseResource(auditEvent);
			if (result == null) result = caseBase(auditEvent);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.AUDIT_EVENT_ACTION: {
			final AuditEventAction auditEventAction = (AuditEventAction)theEObject;
			T result = caseAuditEventAction(auditEventAction);
			if (result == null) result = caseElement(auditEventAction);
			if (result == null) result = caseBase(auditEventAction);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.AUDIT_EVENT_AGENT: {
			final AuditEventAgent auditEventAgent = (AuditEventAgent)theEObject;
			T result = caseAuditEventAgent(auditEventAgent);
			if (result == null) result = caseBackboneElement(auditEventAgent);
			if (result == null) result = caseElement(auditEventAgent);
			if (result == null) result = caseBase(auditEventAgent);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.AUDIT_EVENT_DETAIL: {
			final AuditEventDetail auditEventDetail = (AuditEventDetail)theEObject;
			T result = caseAuditEventDetail(auditEventDetail);
			if (result == null) result = caseBackboneElement(auditEventDetail);
			if (result == null) result = caseElement(auditEventDetail);
			if (result == null) result = caseBase(auditEventDetail);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.AUDIT_EVENT_ENTITY: {
			final AuditEventEntity auditEventEntity = (AuditEventEntity)theEObject;
			T result = caseAuditEventEntity(auditEventEntity);
			if (result == null) result = caseBackboneElement(auditEventEntity);
			if (result == null) result = caseElement(auditEventEntity);
			if (result == null) result = caseBase(auditEventEntity);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.AUDIT_EVENT_OUTCOME: {
			final AuditEventOutcome auditEventOutcome = (AuditEventOutcome)theEObject;
			T result = caseAuditEventOutcome(auditEventOutcome);
			if (result == null) result = caseBackboneElement(auditEventOutcome);
			if (result == null) result = caseElement(auditEventOutcome);
			if (result == null) result = caseBase(auditEventOutcome);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.AUDIT_EVENT_SEVERITY: {
			final AuditEventSeverity auditEventSeverity = (AuditEventSeverity)theEObject;
			T result = caseAuditEventSeverity(auditEventSeverity);
			if (result == null) result = caseElement(auditEventSeverity);
			if (result == null) result = caseBase(auditEventSeverity);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.AUDIT_EVENT_SOURCE: {
			final AuditEventSource auditEventSource = (AuditEventSource)theEObject;
			T result = caseAuditEventSource(auditEventSource);
			if (result == null) result = caseBackboneElement(auditEventSource);
			if (result == null) result = caseElement(auditEventSource);
			if (result == null) result = caseBase(auditEventSource);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.AVAILABILITY: {
			final Availability availability = (Availability)theEObject;
			T result = caseAvailability(availability);
			if (result == null) result = caseDataType(availability);
			if (result == null) result = caseElement(availability);
			if (result == null) result = caseBase(availability);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.AVAILABILITY_AVAILABLE_TIME: {
			final AvailabilityAvailableTime availabilityAvailableTime = (AvailabilityAvailableTime)theEObject;
			T result = caseAvailabilityAvailableTime(availabilityAvailableTime);
			if (result == null) result = caseDataType(availabilityAvailableTime);
			if (result == null) result = caseElement(availabilityAvailableTime);
			if (result == null) result = caseBase(availabilityAvailableTime);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.AVAILABILITY_NOT_AVAILABLE_TIME: {
			final AvailabilityNotAvailableTime availabilityNotAvailableTime = (AvailabilityNotAvailableTime)theEObject;
			T result = caseAvailabilityNotAvailableTime(availabilityNotAvailableTime);
			if (result == null) result = caseDataType(availabilityNotAvailableTime);
			if (result == null) result = caseElement(availabilityNotAvailableTime);
			if (result == null) result = caseBase(availabilityNotAvailableTime);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.BACKBONE_ELEMENT: {
			final BackboneElement backboneElement = (BackboneElement)theEObject;
			T result = caseBackboneElement(backboneElement);
			if (result == null) result = caseElement(backboneElement);
			if (result == null) result = caseBase(backboneElement);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.BACKBONE_TYPE: {
			final BackboneType backboneType = (BackboneType)theEObject;
			T result = caseBackboneType(backboneType);
			if (result == null) result = caseDataType(backboneType);
			if (result == null) result = caseElement(backboneType);
			if (result == null) result = caseBase(backboneType);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.BASE: {
			final Base base = (Base)theEObject;
			T result = caseBase(base);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.BASE64_BINARY: {
			final Base64Binary base64Binary = (Base64Binary)theEObject;
			T result = caseBase64Binary(base64Binary);
			if (result == null) result = caseElement(base64Binary);
			if (result == null) result = caseBase(base64Binary);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.BASIC: {
			final Basic basic = (Basic)theEObject;
			T result = caseBasic(basic);
			if (result == null) result = caseDomainResource(basic);
			if (result == null) result = caseResource(basic);
			if (result == null) result = caseBase(basic);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.BINARY: {
			final Binary binary = (Binary)theEObject;
			T result = caseBinary(binary);
			if (result == null) result = caseResource(binary);
			if (result == null) result = caseBase(binary);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.BINDING_STRENGTH: {
			final BindingStrength bindingStrength = (BindingStrength)theEObject;
			T result = caseBindingStrength(bindingStrength);
			if (result == null) result = caseElement(bindingStrength);
			if (result == null) result = caseBase(bindingStrength);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.BIOLOGICALLY_DERIVED_PRODUCT: {
			final BiologicallyDerivedProduct biologicallyDerivedProduct = (BiologicallyDerivedProduct)theEObject;
			T result = caseBiologicallyDerivedProduct(biologicallyDerivedProduct);
			if (result == null) result = caseDomainResource(biologicallyDerivedProduct);
			if (result == null) result = caseResource(biologicallyDerivedProduct);
			if (result == null) result = caseBase(biologicallyDerivedProduct);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.BIOLOGICALLY_DERIVED_PRODUCT_COLLECTION: {
			final BiologicallyDerivedProductCollection biologicallyDerivedProductCollection = (BiologicallyDerivedProductCollection)theEObject;
			T result = caseBiologicallyDerivedProductCollection(biologicallyDerivedProductCollection);
			if (result == null) result = caseBackboneElement(biologicallyDerivedProductCollection);
			if (result == null) result = caseElement(biologicallyDerivedProductCollection);
			if (result == null) result = caseBase(biologicallyDerivedProductCollection);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.BIOLOGICALLY_DERIVED_PRODUCT_DISPENSE: {
			final BiologicallyDerivedProductDispense biologicallyDerivedProductDispense = (BiologicallyDerivedProductDispense)theEObject;
			T result = caseBiologicallyDerivedProductDispense(biologicallyDerivedProductDispense);
			if (result == null) result = caseDomainResource(biologicallyDerivedProductDispense);
			if (result == null) result = caseResource(biologicallyDerivedProductDispense);
			if (result == null) result = caseBase(biologicallyDerivedProductDispense);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.BIOLOGICALLY_DERIVED_PRODUCT_DISPENSE_CODES: {
			final BiologicallyDerivedProductDispenseCodes biologicallyDerivedProductDispenseCodes = (BiologicallyDerivedProductDispenseCodes)theEObject;
			T result = caseBiologicallyDerivedProductDispenseCodes(biologicallyDerivedProductDispenseCodes);
			if (result == null) result = caseElement(biologicallyDerivedProductDispenseCodes);
			if (result == null) result = caseBase(biologicallyDerivedProductDispenseCodes);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.BIOLOGICALLY_DERIVED_PRODUCT_DISPENSE_PERFORMER: {
			final BiologicallyDerivedProductDispensePerformer biologicallyDerivedProductDispensePerformer = (BiologicallyDerivedProductDispensePerformer)theEObject;
			T result = caseBiologicallyDerivedProductDispensePerformer(biologicallyDerivedProductDispensePerformer);
			if (result == null) result = caseBackboneElement(biologicallyDerivedProductDispensePerformer);
			if (result == null) result = caseElement(biologicallyDerivedProductDispensePerformer);
			if (result == null) result = caseBase(biologicallyDerivedProductDispensePerformer);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.BIOLOGICALLY_DERIVED_PRODUCT_PROPERTY: {
			final BiologicallyDerivedProductProperty biologicallyDerivedProductProperty = (BiologicallyDerivedProductProperty)theEObject;
			T result = caseBiologicallyDerivedProductProperty(biologicallyDerivedProductProperty);
			if (result == null) result = caseBackboneElement(biologicallyDerivedProductProperty);
			if (result == null) result = caseElement(biologicallyDerivedProductProperty);
			if (result == null) result = caseBase(biologicallyDerivedProductProperty);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.BODY_STRUCTURE: {
			final BodyStructure bodyStructure = (BodyStructure)theEObject;
			T result = caseBodyStructure(bodyStructure);
			if (result == null) result = caseDomainResource(bodyStructure);
			if (result == null) result = caseResource(bodyStructure);
			if (result == null) result = caseBase(bodyStructure);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.BODY_STRUCTURE_BODY_LANDMARK_ORIENTATION: {
			final BodyStructureBodyLandmarkOrientation bodyStructureBodyLandmarkOrientation = (BodyStructureBodyLandmarkOrientation)theEObject;
			T result = caseBodyStructureBodyLandmarkOrientation(bodyStructureBodyLandmarkOrientation);
			if (result == null) result = caseBackboneElement(bodyStructureBodyLandmarkOrientation);
			if (result == null) result = caseElement(bodyStructureBodyLandmarkOrientation);
			if (result == null) result = caseBase(bodyStructureBodyLandmarkOrientation);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.BODY_STRUCTURE_DISTANCE_FROM_LANDMARK: {
			final BodyStructureDistanceFromLandmark bodyStructureDistanceFromLandmark = (BodyStructureDistanceFromLandmark)theEObject;
			T result = caseBodyStructureDistanceFromLandmark(bodyStructureDistanceFromLandmark);
			if (result == null) result = caseBackboneElement(bodyStructureDistanceFromLandmark);
			if (result == null) result = caseElement(bodyStructureDistanceFromLandmark);
			if (result == null) result = caseBase(bodyStructureDistanceFromLandmark);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.BODY_STRUCTURE_INCLUDED_STRUCTURE: {
			final BodyStructureIncludedStructure bodyStructureIncludedStructure = (BodyStructureIncludedStructure)theEObject;
			T result = caseBodyStructureIncludedStructure(bodyStructureIncludedStructure);
			if (result == null) result = caseBackboneElement(bodyStructureIncludedStructure);
			if (result == null) result = caseElement(bodyStructureIncludedStructure);
			if (result == null) result = caseBase(bodyStructureIncludedStructure);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.BOOLEAN: {
			final org.hl7.emf.fhir.Boolean boolean_ = (org.hl7.emf.fhir.Boolean)theEObject;
			T result = caseBoolean(boolean_);
			if (result == null) result = caseElement(boolean_);
			if (result == null) result = caseBase(boolean_);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.BUNDLE: {
			final Bundle bundle = (Bundle)theEObject;
			T result = caseBundle(bundle);
			if (result == null) result = caseResource(bundle);
			if (result == null) result = caseBase(bundle);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.BUNDLE_ENTRY: {
			final BundleEntry bundleEntry = (BundleEntry)theEObject;
			T result = caseBundleEntry(bundleEntry);
			if (result == null) result = caseBackboneElement(bundleEntry);
			if (result == null) result = caseElement(bundleEntry);
			if (result == null) result = caseBase(bundleEntry);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.BUNDLE_LINK: {
			final BundleLink bundleLink = (BundleLink)theEObject;
			T result = caseBundleLink(bundleLink);
			if (result == null) result = caseBackboneElement(bundleLink);
			if (result == null) result = caseElement(bundleLink);
			if (result == null) result = caseBase(bundleLink);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.BUNDLE_REQUEST: {
			final BundleRequest bundleRequest = (BundleRequest)theEObject;
			T result = caseBundleRequest(bundleRequest);
			if (result == null) result = caseBackboneElement(bundleRequest);
			if (result == null) result = caseElement(bundleRequest);
			if (result == null) result = caseBase(bundleRequest);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.BUNDLE_RESPONSE: {
			final BundleResponse bundleResponse = (BundleResponse)theEObject;
			T result = caseBundleResponse(bundleResponse);
			if (result == null) result = caseBackboneElement(bundleResponse);
			if (result == null) result = caseElement(bundleResponse);
			if (result == null) result = caseBase(bundleResponse);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.BUNDLE_SEARCH: {
			final BundleSearch bundleSearch = (BundleSearch)theEObject;
			T result = caseBundleSearch(bundleSearch);
			if (result == null) result = caseBackboneElement(bundleSearch);
			if (result == null) result = caseElement(bundleSearch);
			if (result == null) result = caseBase(bundleSearch);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.BUNDLE_TYPE: {
			final BundleType bundleType = (BundleType)theEObject;
			T result = caseBundleType(bundleType);
			if (result == null) result = caseElement(bundleType);
			if (result == null) result = caseBase(bundleType);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.CANONICAL: {
			final Canonical canonical = (Canonical)theEObject;
			T result = caseCanonical(canonical);
			if (result == null) result = caseElement(canonical);
			if (result == null) result = caseBase(canonical);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.CANONICAL_RESOURCE: {
			final CanonicalResource canonicalResource = (CanonicalResource)theEObject;
			T result = caseCanonicalResource(canonicalResource);
			if (result == null) result = caseDomainResource(canonicalResource);
			if (result == null) result = caseResource(canonicalResource);
			if (result == null) result = caseBase(canonicalResource);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.CAPABILITY_STATEMENT: {
			final CapabilityStatement capabilityStatement = (CapabilityStatement)theEObject;
			T result = caseCapabilityStatement(capabilityStatement);
			if (result == null) result = caseCanonicalResource(capabilityStatement);
			if (result == null) result = caseDomainResource(capabilityStatement);
			if (result == null) result = caseResource(capabilityStatement);
			if (result == null) result = caseBase(capabilityStatement);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.CAPABILITY_STATEMENT_DOCUMENT: {
			final CapabilityStatementDocument capabilityStatementDocument = (CapabilityStatementDocument)theEObject;
			T result = caseCapabilityStatementDocument(capabilityStatementDocument);
			if (result == null) result = caseBackboneElement(capabilityStatementDocument);
			if (result == null) result = caseElement(capabilityStatementDocument);
			if (result == null) result = caseBase(capabilityStatementDocument);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.CAPABILITY_STATEMENT_ENDPOINT: {
			final CapabilityStatementEndpoint capabilityStatementEndpoint = (CapabilityStatementEndpoint)theEObject;
			T result = caseCapabilityStatementEndpoint(capabilityStatementEndpoint);
			if (result == null) result = caseBackboneElement(capabilityStatementEndpoint);
			if (result == null) result = caseElement(capabilityStatementEndpoint);
			if (result == null) result = caseBase(capabilityStatementEndpoint);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.CAPABILITY_STATEMENT_IMPLEMENTATION: {
			final CapabilityStatementImplementation capabilityStatementImplementation = (CapabilityStatementImplementation)theEObject;
			T result = caseCapabilityStatementImplementation(capabilityStatementImplementation);
			if (result == null) result = caseBackboneElement(capabilityStatementImplementation);
			if (result == null) result = caseElement(capabilityStatementImplementation);
			if (result == null) result = caseBase(capabilityStatementImplementation);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.CAPABILITY_STATEMENT_INTERACTION: {
			final CapabilityStatementInteraction capabilityStatementInteraction = (CapabilityStatementInteraction)theEObject;
			T result = caseCapabilityStatementInteraction(capabilityStatementInteraction);
			if (result == null) result = caseBackboneElement(capabilityStatementInteraction);
			if (result == null) result = caseElement(capabilityStatementInteraction);
			if (result == null) result = caseBase(capabilityStatementInteraction);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.CAPABILITY_STATEMENT_INTERACTION1: {
			final CapabilityStatementInteraction1 capabilityStatementInteraction1 = (CapabilityStatementInteraction1)theEObject;
			T result = caseCapabilityStatementInteraction1(capabilityStatementInteraction1);
			if (result == null) result = caseBackboneElement(capabilityStatementInteraction1);
			if (result == null) result = caseElement(capabilityStatementInteraction1);
			if (result == null) result = caseBase(capabilityStatementInteraction1);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.CAPABILITY_STATEMENT_KIND: {
			final CapabilityStatementKind capabilityStatementKind = (CapabilityStatementKind)theEObject;
			T result = caseCapabilityStatementKind(capabilityStatementKind);
			if (result == null) result = caseElement(capabilityStatementKind);
			if (result == null) result = caseBase(capabilityStatementKind);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.CAPABILITY_STATEMENT_MESSAGING: {
			final CapabilityStatementMessaging capabilityStatementMessaging = (CapabilityStatementMessaging)theEObject;
			T result = caseCapabilityStatementMessaging(capabilityStatementMessaging);
			if (result == null) result = caseBackboneElement(capabilityStatementMessaging);
			if (result == null) result = caseElement(capabilityStatementMessaging);
			if (result == null) result = caseBase(capabilityStatementMessaging);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.CAPABILITY_STATEMENT_OPERATION: {
			final CapabilityStatementOperation capabilityStatementOperation = (CapabilityStatementOperation)theEObject;
			T result = caseCapabilityStatementOperation(capabilityStatementOperation);
			if (result == null) result = caseBackboneElement(capabilityStatementOperation);
			if (result == null) result = caseElement(capabilityStatementOperation);
			if (result == null) result = caseBase(capabilityStatementOperation);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.CAPABILITY_STATEMENT_RESOURCE: {
			final CapabilityStatementResource capabilityStatementResource = (CapabilityStatementResource)theEObject;
			T result = caseCapabilityStatementResource(capabilityStatementResource);
			if (result == null) result = caseBackboneElement(capabilityStatementResource);
			if (result == null) result = caseElement(capabilityStatementResource);
			if (result == null) result = caseBase(capabilityStatementResource);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.CAPABILITY_STATEMENT_REST: {
			final CapabilityStatementRest capabilityStatementRest = (CapabilityStatementRest)theEObject;
			T result = caseCapabilityStatementRest(capabilityStatementRest);
			if (result == null) result = caseBackboneElement(capabilityStatementRest);
			if (result == null) result = caseElement(capabilityStatementRest);
			if (result == null) result = caseBase(capabilityStatementRest);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.CAPABILITY_STATEMENT_SEARCH_PARAM: {
			final CapabilityStatementSearchParam capabilityStatementSearchParam = (CapabilityStatementSearchParam)theEObject;
			T result = caseCapabilityStatementSearchParam(capabilityStatementSearchParam);
			if (result == null) result = caseBackboneElement(capabilityStatementSearchParam);
			if (result == null) result = caseElement(capabilityStatementSearchParam);
			if (result == null) result = caseBase(capabilityStatementSearchParam);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.CAPABILITY_STATEMENT_SECURITY: {
			final CapabilityStatementSecurity capabilityStatementSecurity = (CapabilityStatementSecurity)theEObject;
			T result = caseCapabilityStatementSecurity(capabilityStatementSecurity);
			if (result == null) result = caseBackboneElement(capabilityStatementSecurity);
			if (result == null) result = caseElement(capabilityStatementSecurity);
			if (result == null) result = caseBase(capabilityStatementSecurity);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.CAPABILITY_STATEMENT_SOFTWARE: {
			final CapabilityStatementSoftware capabilityStatementSoftware = (CapabilityStatementSoftware)theEObject;
			T result = caseCapabilityStatementSoftware(capabilityStatementSoftware);
			if (result == null) result = caseBackboneElement(capabilityStatementSoftware);
			if (result == null) result = caseElement(capabilityStatementSoftware);
			if (result == null) result = caseBase(capabilityStatementSoftware);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.CAPABILITY_STATEMENT_SUPPORTED_MESSAGE: {
			final CapabilityStatementSupportedMessage capabilityStatementSupportedMessage = (CapabilityStatementSupportedMessage)theEObject;
			T result = caseCapabilityStatementSupportedMessage(capabilityStatementSupportedMessage);
			if (result == null) result = caseBackboneElement(capabilityStatementSupportedMessage);
			if (result == null) result = caseElement(capabilityStatementSupportedMessage);
			if (result == null) result = caseBase(capabilityStatementSupportedMessage);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.CARE_PLAN: {
			final CarePlan carePlan = (CarePlan)theEObject;
			T result = caseCarePlan(carePlan);
			if (result == null) result = caseDomainResource(carePlan);
			if (result == null) result = caseResource(carePlan);
			if (result == null) result = caseBase(carePlan);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.CARE_PLAN_ACTIVITY: {
			final CarePlanActivity carePlanActivity = (CarePlanActivity)theEObject;
			T result = caseCarePlanActivity(carePlanActivity);
			if (result == null) result = caseBackboneElement(carePlanActivity);
			if (result == null) result = caseElement(carePlanActivity);
			if (result == null) result = caseBase(carePlanActivity);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.CARE_PLAN_INTENT: {
			final CarePlanIntent carePlanIntent = (CarePlanIntent)theEObject;
			T result = caseCarePlanIntent(carePlanIntent);
			if (result == null) result = caseElement(carePlanIntent);
			if (result == null) result = caseBase(carePlanIntent);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.CARE_TEAM: {
			final CareTeam careTeam = (CareTeam)theEObject;
			T result = caseCareTeam(careTeam);
			if (result == null) result = caseDomainResource(careTeam);
			if (result == null) result = caseResource(careTeam);
			if (result == null) result = caseBase(careTeam);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.CARE_TEAM_PARTICIPANT: {
			final CareTeamParticipant careTeamParticipant = (CareTeamParticipant)theEObject;
			T result = caseCareTeamParticipant(careTeamParticipant);
			if (result == null) result = caseBackboneElement(careTeamParticipant);
			if (result == null) result = caseElement(careTeamParticipant);
			if (result == null) result = caseBase(careTeamParticipant);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.CARE_TEAM_STATUS: {
			final CareTeamStatus careTeamStatus = (CareTeamStatus)theEObject;
			T result = caseCareTeamStatus(careTeamStatus);
			if (result == null) result = caseElement(careTeamStatus);
			if (result == null) result = caseBase(careTeamStatus);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.CHARACTERISTIC_COMBINATION: {
			final CharacteristicCombination characteristicCombination = (CharacteristicCombination)theEObject;
			T result = caseCharacteristicCombination(characteristicCombination);
			if (result == null) result = caseElement(characteristicCombination);
			if (result == null) result = caseBase(characteristicCombination);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.CHARGE_ITEM: {
			final ChargeItem chargeItem = (ChargeItem)theEObject;
			T result = caseChargeItem(chargeItem);
			if (result == null) result = caseDomainResource(chargeItem);
			if (result == null) result = caseResource(chargeItem);
			if (result == null) result = caseBase(chargeItem);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.CHARGE_ITEM_DEFINITION: {
			final ChargeItemDefinition chargeItemDefinition = (ChargeItemDefinition)theEObject;
			T result = caseChargeItemDefinition(chargeItemDefinition);
			if (result == null) result = caseMetadataResource(chargeItemDefinition);
			if (result == null) result = caseCanonicalResource(chargeItemDefinition);
			if (result == null) result = caseDomainResource(chargeItemDefinition);
			if (result == null) result = caseResource(chargeItemDefinition);
			if (result == null) result = caseBase(chargeItemDefinition);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.CHARGE_ITEM_DEFINITION_APPLICABILITY: {
			final ChargeItemDefinitionApplicability chargeItemDefinitionApplicability = (ChargeItemDefinitionApplicability)theEObject;
			T result = caseChargeItemDefinitionApplicability(chargeItemDefinitionApplicability);
			if (result == null) result = caseBackboneElement(chargeItemDefinitionApplicability);
			if (result == null) result = caseElement(chargeItemDefinitionApplicability);
			if (result == null) result = caseBase(chargeItemDefinitionApplicability);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.CHARGE_ITEM_DEFINITION_PROPERTY_GROUP: {
			final ChargeItemDefinitionPropertyGroup chargeItemDefinitionPropertyGroup = (ChargeItemDefinitionPropertyGroup)theEObject;
			T result = caseChargeItemDefinitionPropertyGroup(chargeItemDefinitionPropertyGroup);
			if (result == null) result = caseBackboneElement(chargeItemDefinitionPropertyGroup);
			if (result == null) result = caseElement(chargeItemDefinitionPropertyGroup);
			if (result == null) result = caseBase(chargeItemDefinitionPropertyGroup);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.CHARGE_ITEM_PERFORMER: {
			final ChargeItemPerformer chargeItemPerformer = (ChargeItemPerformer)theEObject;
			T result = caseChargeItemPerformer(chargeItemPerformer);
			if (result == null) result = caseBackboneElement(chargeItemPerformer);
			if (result == null) result = caseElement(chargeItemPerformer);
			if (result == null) result = caseBase(chargeItemPerformer);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.CHARGE_ITEM_STATUS: {
			final ChargeItemStatus chargeItemStatus = (ChargeItemStatus)theEObject;
			T result = caseChargeItemStatus(chargeItemStatus);
			if (result == null) result = caseElement(chargeItemStatus);
			if (result == null) result = caseBase(chargeItemStatus);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.CITATION: {
			final Citation citation = (Citation)theEObject;
			T result = caseCitation(citation);
			if (result == null) result = caseMetadataResource(citation);
			if (result == null) result = caseCanonicalResource(citation);
			if (result == null) result = caseDomainResource(citation);
			if (result == null) result = caseResource(citation);
			if (result == null) result = caseBase(citation);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.CITATION_ABSTRACT: {
			final CitationAbstract citationAbstract = (CitationAbstract)theEObject;
			T result = caseCitationAbstract(citationAbstract);
			if (result == null) result = caseBackboneElement(citationAbstract);
			if (result == null) result = caseElement(citationAbstract);
			if (result == null) result = caseBase(citationAbstract);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.CITATION_CITED_ARTIFACT: {
			final CitationCitedArtifact citationCitedArtifact = (CitationCitedArtifact)theEObject;
			T result = caseCitationCitedArtifact(citationCitedArtifact);
			if (result == null) result = caseBackboneElement(citationCitedArtifact);
			if (result == null) result = caseElement(citationCitedArtifact);
			if (result == null) result = caseBase(citationCitedArtifact);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.CITATION_CLASSIFICATION: {
			final CitationClassification citationClassification = (CitationClassification)theEObject;
			T result = caseCitationClassification(citationClassification);
			if (result == null) result = caseBackboneElement(citationClassification);
			if (result == null) result = caseElement(citationClassification);
			if (result == null) result = caseBase(citationClassification);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.CITATION_CLASSIFICATION1: {
			final CitationClassification1 citationClassification1 = (CitationClassification1)theEObject;
			T result = caseCitationClassification1(citationClassification1);
			if (result == null) result = caseBackboneElement(citationClassification1);
			if (result == null) result = caseElement(citationClassification1);
			if (result == null) result = caseBase(citationClassification1);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.CITATION_CONTRIBUTION_INSTANCE: {
			final CitationContributionInstance citationContributionInstance = (CitationContributionInstance)theEObject;
			T result = caseCitationContributionInstance(citationContributionInstance);
			if (result == null) result = caseBackboneElement(citationContributionInstance);
			if (result == null) result = caseElement(citationContributionInstance);
			if (result == null) result = caseBase(citationContributionInstance);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.CITATION_CONTRIBUTORSHIP: {
			final CitationContributorship citationContributorship = (CitationContributorship)theEObject;
			T result = caseCitationContributorship(citationContributorship);
			if (result == null) result = caseBackboneElement(citationContributorship);
			if (result == null) result = caseElement(citationContributorship);
			if (result == null) result = caseBase(citationContributorship);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.CITATION_ENTRY: {
			final CitationEntry citationEntry = (CitationEntry)theEObject;
			T result = caseCitationEntry(citationEntry);
			if (result == null) result = caseBackboneElement(citationEntry);
			if (result == null) result = caseElement(citationEntry);
			if (result == null) result = caseBase(citationEntry);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.CITATION_PART: {
			final CitationPart citationPart = (CitationPart)theEObject;
			T result = caseCitationPart(citationPart);
			if (result == null) result = caseBackboneElement(citationPart);
			if (result == null) result = caseElement(citationPart);
			if (result == null) result = caseBase(citationPart);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.CITATION_PUBLICATION_FORM: {
			final CitationPublicationForm citationPublicationForm = (CitationPublicationForm)theEObject;
			T result = caseCitationPublicationForm(citationPublicationForm);
			if (result == null) result = caseBackboneElement(citationPublicationForm);
			if (result == null) result = caseElement(citationPublicationForm);
			if (result == null) result = caseBase(citationPublicationForm);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.CITATION_PUBLISHED_IN: {
			final CitationPublishedIn citationPublishedIn = (CitationPublishedIn)theEObject;
			T result = caseCitationPublishedIn(citationPublishedIn);
			if (result == null) result = caseBackboneElement(citationPublishedIn);
			if (result == null) result = caseElement(citationPublishedIn);
			if (result == null) result = caseBase(citationPublishedIn);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.CITATION_RELATES_TO: {
			final CitationRelatesTo citationRelatesTo = (CitationRelatesTo)theEObject;
			T result = caseCitationRelatesTo(citationRelatesTo);
			if (result == null) result = caseBackboneElement(citationRelatesTo);
			if (result == null) result = caseElement(citationRelatesTo);
			if (result == null) result = caseBase(citationRelatesTo);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.CITATION_STATUS_DATE: {
			final CitationStatusDate citationStatusDate = (CitationStatusDate)theEObject;
			T result = caseCitationStatusDate(citationStatusDate);
			if (result == null) result = caseBackboneElement(citationStatusDate);
			if (result == null) result = caseElement(citationStatusDate);
			if (result == null) result = caseBase(citationStatusDate);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.CITATION_STATUS_DATE1: {
			final CitationStatusDate1 citationStatusDate1 = (CitationStatusDate1)theEObject;
			T result = caseCitationStatusDate1(citationStatusDate1);
			if (result == null) result = caseBackboneElement(citationStatusDate1);
			if (result == null) result = caseElement(citationStatusDate1);
			if (result == null) result = caseBase(citationStatusDate1);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.CITATION_SUMMARY: {
			final CitationSummary citationSummary = (CitationSummary)theEObject;
			T result = caseCitationSummary(citationSummary);
			if (result == null) result = caseBackboneElement(citationSummary);
			if (result == null) result = caseElement(citationSummary);
			if (result == null) result = caseBase(citationSummary);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.CITATION_SUMMARY1: {
			final CitationSummary1 citationSummary1 = (CitationSummary1)theEObject;
			T result = caseCitationSummary1(citationSummary1);
			if (result == null) result = caseBackboneElement(citationSummary1);
			if (result == null) result = caseElement(citationSummary1);
			if (result == null) result = caseBase(citationSummary1);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.CITATION_TITLE: {
			final CitationTitle citationTitle = (CitationTitle)theEObject;
			T result = caseCitationTitle(citationTitle);
			if (result == null) result = caseBackboneElement(citationTitle);
			if (result == null) result = caseElement(citationTitle);
			if (result == null) result = caseBase(citationTitle);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.CITATION_VERSION: {
			final CitationVersion citationVersion = (CitationVersion)theEObject;
			T result = caseCitationVersion(citationVersion);
			if (result == null) result = caseBackboneElement(citationVersion);
			if (result == null) result = caseElement(citationVersion);
			if (result == null) result = caseBase(citationVersion);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.CITATION_WEB_LOCATION: {
			final CitationWebLocation citationWebLocation = (CitationWebLocation)theEObject;
			T result = caseCitationWebLocation(citationWebLocation);
			if (result == null) result = caseBackboneElement(citationWebLocation);
			if (result == null) result = caseElement(citationWebLocation);
			if (result == null) result = caseBase(citationWebLocation);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.CLAIM: {
			final Claim claim = (Claim)theEObject;
			T result = caseClaim(claim);
			if (result == null) result = caseDomainResource(claim);
			if (result == null) result = caseResource(claim);
			if (result == null) result = caseBase(claim);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.CLAIM_ACCIDENT: {
			final ClaimAccident claimAccident = (ClaimAccident)theEObject;
			T result = caseClaimAccident(claimAccident);
			if (result == null) result = caseBackboneElement(claimAccident);
			if (result == null) result = caseElement(claimAccident);
			if (result == null) result = caseBase(claimAccident);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.CLAIM_BODY_SITE: {
			final ClaimBodySite claimBodySite = (ClaimBodySite)theEObject;
			T result = caseClaimBodySite(claimBodySite);
			if (result == null) result = caseBackboneElement(claimBodySite);
			if (result == null) result = caseElement(claimBodySite);
			if (result == null) result = caseBase(claimBodySite);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.CLAIM_CARE_TEAM: {
			final ClaimCareTeam claimCareTeam = (ClaimCareTeam)theEObject;
			T result = caseClaimCareTeam(claimCareTeam);
			if (result == null) result = caseBackboneElement(claimCareTeam);
			if (result == null) result = caseElement(claimCareTeam);
			if (result == null) result = caseBase(claimCareTeam);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.CLAIM_DETAIL: {
			final ClaimDetail claimDetail = (ClaimDetail)theEObject;
			T result = caseClaimDetail(claimDetail);
			if (result == null) result = caseBackboneElement(claimDetail);
			if (result == null) result = caseElement(claimDetail);
			if (result == null) result = caseBase(claimDetail);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.CLAIM_DIAGNOSIS: {
			final ClaimDiagnosis claimDiagnosis = (ClaimDiagnosis)theEObject;
			T result = caseClaimDiagnosis(claimDiagnosis);
			if (result == null) result = caseBackboneElement(claimDiagnosis);
			if (result == null) result = caseElement(claimDiagnosis);
			if (result == null) result = caseBase(claimDiagnosis);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.CLAIM_EVENT: {
			final ClaimEvent claimEvent = (ClaimEvent)theEObject;
			T result = caseClaimEvent(claimEvent);
			if (result == null) result = caseBackboneElement(claimEvent);
			if (result == null) result = caseElement(claimEvent);
			if (result == null) result = caseBase(claimEvent);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.CLAIM_INSURANCE: {
			final ClaimInsurance claimInsurance = (ClaimInsurance)theEObject;
			T result = caseClaimInsurance(claimInsurance);
			if (result == null) result = caseBackboneElement(claimInsurance);
			if (result == null) result = caseElement(claimInsurance);
			if (result == null) result = caseBase(claimInsurance);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.CLAIM_ITEM: {
			final ClaimItem claimItem = (ClaimItem)theEObject;
			T result = caseClaimItem(claimItem);
			if (result == null) result = caseBackboneElement(claimItem);
			if (result == null) result = caseElement(claimItem);
			if (result == null) result = caseBase(claimItem);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.CLAIM_PAYEE: {
			final ClaimPayee claimPayee = (ClaimPayee)theEObject;
			T result = caseClaimPayee(claimPayee);
			if (result == null) result = caseBackboneElement(claimPayee);
			if (result == null) result = caseElement(claimPayee);
			if (result == null) result = caseBase(claimPayee);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.CLAIM_PROCEDURE: {
			final ClaimProcedure claimProcedure = (ClaimProcedure)theEObject;
			T result = caseClaimProcedure(claimProcedure);
			if (result == null) result = caseBackboneElement(claimProcedure);
			if (result == null) result = caseElement(claimProcedure);
			if (result == null) result = caseBase(claimProcedure);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.CLAIM_PROCESSING_CODES: {
			final ClaimProcessingCodes claimProcessingCodes = (ClaimProcessingCodes)theEObject;
			T result = caseClaimProcessingCodes(claimProcessingCodes);
			if (result == null) result = caseElement(claimProcessingCodes);
			if (result == null) result = caseBase(claimProcessingCodes);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.CLAIM_RELATED: {
			final ClaimRelated claimRelated = (ClaimRelated)theEObject;
			T result = caseClaimRelated(claimRelated);
			if (result == null) result = caseBackboneElement(claimRelated);
			if (result == null) result = caseElement(claimRelated);
			if (result == null) result = caseBase(claimRelated);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.CLAIM_RESPONSE: {
			final ClaimResponse claimResponse = (ClaimResponse)theEObject;
			T result = caseClaimResponse(claimResponse);
			if (result == null) result = caseDomainResource(claimResponse);
			if (result == null) result = caseResource(claimResponse);
			if (result == null) result = caseBase(claimResponse);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.CLAIM_RESPONSE_ADD_ITEM: {
			final ClaimResponseAddItem claimResponseAddItem = (ClaimResponseAddItem)theEObject;
			T result = caseClaimResponseAddItem(claimResponseAddItem);
			if (result == null) result = caseBackboneElement(claimResponseAddItem);
			if (result == null) result = caseElement(claimResponseAddItem);
			if (result == null) result = caseBase(claimResponseAddItem);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.CLAIM_RESPONSE_ADJUDICATION: {
			final ClaimResponseAdjudication claimResponseAdjudication = (ClaimResponseAdjudication)theEObject;
			T result = caseClaimResponseAdjudication(claimResponseAdjudication);
			if (result == null) result = caseBackboneElement(claimResponseAdjudication);
			if (result == null) result = caseElement(claimResponseAdjudication);
			if (result == null) result = caseBase(claimResponseAdjudication);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.CLAIM_RESPONSE_BODY_SITE: {
			final ClaimResponseBodySite claimResponseBodySite = (ClaimResponseBodySite)theEObject;
			T result = caseClaimResponseBodySite(claimResponseBodySite);
			if (result == null) result = caseBackboneElement(claimResponseBodySite);
			if (result == null) result = caseElement(claimResponseBodySite);
			if (result == null) result = caseBase(claimResponseBodySite);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.CLAIM_RESPONSE_DETAIL: {
			final ClaimResponseDetail claimResponseDetail = (ClaimResponseDetail)theEObject;
			T result = caseClaimResponseDetail(claimResponseDetail);
			if (result == null) result = caseBackboneElement(claimResponseDetail);
			if (result == null) result = caseElement(claimResponseDetail);
			if (result == null) result = caseBase(claimResponseDetail);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.CLAIM_RESPONSE_DETAIL1: {
			final ClaimResponseDetail1 claimResponseDetail1 = (ClaimResponseDetail1)theEObject;
			T result = caseClaimResponseDetail1(claimResponseDetail1);
			if (result == null) result = caseBackboneElement(claimResponseDetail1);
			if (result == null) result = caseElement(claimResponseDetail1);
			if (result == null) result = caseBase(claimResponseDetail1);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.CLAIM_RESPONSE_ERROR: {
			final ClaimResponseError claimResponseError = (ClaimResponseError)theEObject;
			T result = caseClaimResponseError(claimResponseError);
			if (result == null) result = caseBackboneElement(claimResponseError);
			if (result == null) result = caseElement(claimResponseError);
			if (result == null) result = caseBase(claimResponseError);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.CLAIM_RESPONSE_EVENT: {
			final ClaimResponseEvent claimResponseEvent = (ClaimResponseEvent)theEObject;
			T result = caseClaimResponseEvent(claimResponseEvent);
			if (result == null) result = caseBackboneElement(claimResponseEvent);
			if (result == null) result = caseElement(claimResponseEvent);
			if (result == null) result = caseBase(claimResponseEvent);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.CLAIM_RESPONSE_INSURANCE: {
			final ClaimResponseInsurance claimResponseInsurance = (ClaimResponseInsurance)theEObject;
			T result = caseClaimResponseInsurance(claimResponseInsurance);
			if (result == null) result = caseBackboneElement(claimResponseInsurance);
			if (result == null) result = caseElement(claimResponseInsurance);
			if (result == null) result = caseBase(claimResponseInsurance);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.CLAIM_RESPONSE_ITEM: {
			final ClaimResponseItem claimResponseItem = (ClaimResponseItem)theEObject;
			T result = caseClaimResponseItem(claimResponseItem);
			if (result == null) result = caseBackboneElement(claimResponseItem);
			if (result == null) result = caseElement(claimResponseItem);
			if (result == null) result = caseBase(claimResponseItem);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.CLAIM_RESPONSE_PAYMENT: {
			final ClaimResponsePayment claimResponsePayment = (ClaimResponsePayment)theEObject;
			T result = caseClaimResponsePayment(claimResponsePayment);
			if (result == null) result = caseBackboneElement(claimResponsePayment);
			if (result == null) result = caseElement(claimResponsePayment);
			if (result == null) result = caseBase(claimResponsePayment);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.CLAIM_RESPONSE_PROCESS_NOTE: {
			final ClaimResponseProcessNote claimResponseProcessNote = (ClaimResponseProcessNote)theEObject;
			T result = caseClaimResponseProcessNote(claimResponseProcessNote);
			if (result == null) result = caseBackboneElement(claimResponseProcessNote);
			if (result == null) result = caseElement(claimResponseProcessNote);
			if (result == null) result = caseBase(claimResponseProcessNote);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.CLAIM_RESPONSE_REVIEW_OUTCOME: {
			final ClaimResponseReviewOutcome claimResponseReviewOutcome = (ClaimResponseReviewOutcome)theEObject;
			T result = caseClaimResponseReviewOutcome(claimResponseReviewOutcome);
			if (result == null) result = caseBackboneElement(claimResponseReviewOutcome);
			if (result == null) result = caseElement(claimResponseReviewOutcome);
			if (result == null) result = caseBase(claimResponseReviewOutcome);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.CLAIM_RESPONSE_SUB_DETAIL: {
			final ClaimResponseSubDetail claimResponseSubDetail = (ClaimResponseSubDetail)theEObject;
			T result = caseClaimResponseSubDetail(claimResponseSubDetail);
			if (result == null) result = caseBackboneElement(claimResponseSubDetail);
			if (result == null) result = caseElement(claimResponseSubDetail);
			if (result == null) result = caseBase(claimResponseSubDetail);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.CLAIM_RESPONSE_SUB_DETAIL1: {
			final ClaimResponseSubDetail1 claimResponseSubDetail1 = (ClaimResponseSubDetail1)theEObject;
			T result = caseClaimResponseSubDetail1(claimResponseSubDetail1);
			if (result == null) result = caseBackboneElement(claimResponseSubDetail1);
			if (result == null) result = caseElement(claimResponseSubDetail1);
			if (result == null) result = caseBase(claimResponseSubDetail1);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.CLAIM_RESPONSE_TOTAL: {
			final ClaimResponseTotal claimResponseTotal = (ClaimResponseTotal)theEObject;
			T result = caseClaimResponseTotal(claimResponseTotal);
			if (result == null) result = caseBackboneElement(claimResponseTotal);
			if (result == null) result = caseElement(claimResponseTotal);
			if (result == null) result = caseBase(claimResponseTotal);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.CLAIM_SUB_DETAIL: {
			final ClaimSubDetail claimSubDetail = (ClaimSubDetail)theEObject;
			T result = caseClaimSubDetail(claimSubDetail);
			if (result == null) result = caseBackboneElement(claimSubDetail);
			if (result == null) result = caseElement(claimSubDetail);
			if (result == null) result = caseBase(claimSubDetail);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.CLAIM_SUPPORTING_INFO: {
			final ClaimSupportingInfo claimSupportingInfo = (ClaimSupportingInfo)theEObject;
			T result = caseClaimSupportingInfo(claimSupportingInfo);
			if (result == null) result = caseBackboneElement(claimSupportingInfo);
			if (result == null) result = caseElement(claimSupportingInfo);
			if (result == null) result = caseBase(claimSupportingInfo);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.CLINICAL_IMPRESSION: {
			final ClinicalImpression clinicalImpression = (ClinicalImpression)theEObject;
			T result = caseClinicalImpression(clinicalImpression);
			if (result == null) result = caseDomainResource(clinicalImpression);
			if (result == null) result = caseResource(clinicalImpression);
			if (result == null) result = caseBase(clinicalImpression);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.CLINICAL_IMPRESSION_FINDING: {
			final ClinicalImpressionFinding clinicalImpressionFinding = (ClinicalImpressionFinding)theEObject;
			T result = caseClinicalImpressionFinding(clinicalImpressionFinding);
			if (result == null) result = caseBackboneElement(clinicalImpressionFinding);
			if (result == null) result = caseElement(clinicalImpressionFinding);
			if (result == null) result = caseBase(clinicalImpressionFinding);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.CLINICAL_USE_DEFINITION: {
			final ClinicalUseDefinition clinicalUseDefinition = (ClinicalUseDefinition)theEObject;
			T result = caseClinicalUseDefinition(clinicalUseDefinition);
			if (result == null) result = caseDomainResource(clinicalUseDefinition);
			if (result == null) result = caseResource(clinicalUseDefinition);
			if (result == null) result = caseBase(clinicalUseDefinition);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.CLINICAL_USE_DEFINITION_CONTRAINDICATION: {
			final ClinicalUseDefinitionContraindication clinicalUseDefinitionContraindication = (ClinicalUseDefinitionContraindication)theEObject;
			T result = caseClinicalUseDefinitionContraindication(clinicalUseDefinitionContraindication);
			if (result == null) result = caseBackboneElement(clinicalUseDefinitionContraindication);
			if (result == null) result = caseElement(clinicalUseDefinitionContraindication);
			if (result == null) result = caseBase(clinicalUseDefinitionContraindication);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.CLINICAL_USE_DEFINITION_INDICATION: {
			final ClinicalUseDefinitionIndication clinicalUseDefinitionIndication = (ClinicalUseDefinitionIndication)theEObject;
			T result = caseClinicalUseDefinitionIndication(clinicalUseDefinitionIndication);
			if (result == null) result = caseBackboneElement(clinicalUseDefinitionIndication);
			if (result == null) result = caseElement(clinicalUseDefinitionIndication);
			if (result == null) result = caseBase(clinicalUseDefinitionIndication);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.CLINICAL_USE_DEFINITION_INTERACTANT: {
			final ClinicalUseDefinitionInteractant clinicalUseDefinitionInteractant = (ClinicalUseDefinitionInteractant)theEObject;
			T result = caseClinicalUseDefinitionInteractant(clinicalUseDefinitionInteractant);
			if (result == null) result = caseBackboneElement(clinicalUseDefinitionInteractant);
			if (result == null) result = caseElement(clinicalUseDefinitionInteractant);
			if (result == null) result = caseBase(clinicalUseDefinitionInteractant);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.CLINICAL_USE_DEFINITION_INTERACTION: {
			final ClinicalUseDefinitionInteraction clinicalUseDefinitionInteraction = (ClinicalUseDefinitionInteraction)theEObject;
			T result = caseClinicalUseDefinitionInteraction(clinicalUseDefinitionInteraction);
			if (result == null) result = caseBackboneElement(clinicalUseDefinitionInteraction);
			if (result == null) result = caseElement(clinicalUseDefinitionInteraction);
			if (result == null) result = caseBase(clinicalUseDefinitionInteraction);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.CLINICAL_USE_DEFINITION_OTHER_THERAPY: {
			final ClinicalUseDefinitionOtherTherapy clinicalUseDefinitionOtherTherapy = (ClinicalUseDefinitionOtherTherapy)theEObject;
			T result = caseClinicalUseDefinitionOtherTherapy(clinicalUseDefinitionOtherTherapy);
			if (result == null) result = caseBackboneElement(clinicalUseDefinitionOtherTherapy);
			if (result == null) result = caseElement(clinicalUseDefinitionOtherTherapy);
			if (result == null) result = caseBase(clinicalUseDefinitionOtherTherapy);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.CLINICAL_USE_DEFINITION_TYPE: {
			final ClinicalUseDefinitionType clinicalUseDefinitionType = (ClinicalUseDefinitionType)theEObject;
			T result = caseClinicalUseDefinitionType(clinicalUseDefinitionType);
			if (result == null) result = caseElement(clinicalUseDefinitionType);
			if (result == null) result = caseBase(clinicalUseDefinitionType);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.CLINICAL_USE_DEFINITION_UNDESIRABLE_EFFECT: {
			final ClinicalUseDefinitionUndesirableEffect clinicalUseDefinitionUndesirableEffect = (ClinicalUseDefinitionUndesirableEffect)theEObject;
			T result = caseClinicalUseDefinitionUndesirableEffect(clinicalUseDefinitionUndesirableEffect);
			if (result == null) result = caseBackboneElement(clinicalUseDefinitionUndesirableEffect);
			if (result == null) result = caseElement(clinicalUseDefinitionUndesirableEffect);
			if (result == null) result = caseBase(clinicalUseDefinitionUndesirableEffect);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.CLINICAL_USE_DEFINITION_WARNING: {
			final ClinicalUseDefinitionWarning clinicalUseDefinitionWarning = (ClinicalUseDefinitionWarning)theEObject;
			T result = caseClinicalUseDefinitionWarning(clinicalUseDefinitionWarning);
			if (result == null) result = caseBackboneElement(clinicalUseDefinitionWarning);
			if (result == null) result = caseElement(clinicalUseDefinitionWarning);
			if (result == null) result = caseBase(clinicalUseDefinitionWarning);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.CODE: {
			final Code code = (Code)theEObject;
			T result = caseCode(code);
			if (result == null) result = caseElement(code);
			if (result == null) result = caseBase(code);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.CODEABLE_CONCEPT: {
			final CodeableConcept codeableConcept = (CodeableConcept)theEObject;
			T result = caseCodeableConcept(codeableConcept);
			if (result == null) result = caseDataType(codeableConcept);
			if (result == null) result = caseElement(codeableConcept);
			if (result == null) result = caseBase(codeableConcept);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.CODEABLE_REFERENCE: {
			final CodeableReference codeableReference = (CodeableReference)theEObject;
			T result = caseCodeableReference(codeableReference);
			if (result == null) result = caseDataType(codeableReference);
			if (result == null) result = caseElement(codeableReference);
			if (result == null) result = caseBase(codeableReference);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.CODE_SEARCH_SUPPORT: {
			final CodeSearchSupport codeSearchSupport = (CodeSearchSupport)theEObject;
			T result = caseCodeSearchSupport(codeSearchSupport);
			if (result == null) result = caseElement(codeSearchSupport);
			if (result == null) result = caseBase(codeSearchSupport);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.CODE_SYSTEM: {
			final CodeSystem codeSystem = (CodeSystem)theEObject;
			T result = caseCodeSystem(codeSystem);
			if (result == null) result = caseMetadataResource(codeSystem);
			if (result == null) result = caseCanonicalResource(codeSystem);
			if (result == null) result = caseDomainResource(codeSystem);
			if (result == null) result = caseResource(codeSystem);
			if (result == null) result = caseBase(codeSystem);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.CODE_SYSTEM_CONCEPT: {
			final CodeSystemConcept codeSystemConcept = (CodeSystemConcept)theEObject;
			T result = caseCodeSystemConcept(codeSystemConcept);
			if (result == null) result = caseBackboneElement(codeSystemConcept);
			if (result == null) result = caseElement(codeSystemConcept);
			if (result == null) result = caseBase(codeSystemConcept);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.CODE_SYSTEM_CONTENT_MODE: {
			final CodeSystemContentMode codeSystemContentMode = (CodeSystemContentMode)theEObject;
			T result = caseCodeSystemContentMode(codeSystemContentMode);
			if (result == null) result = caseElement(codeSystemContentMode);
			if (result == null) result = caseBase(codeSystemContentMode);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.CODE_SYSTEM_DESIGNATION: {
			final CodeSystemDesignation codeSystemDesignation = (CodeSystemDesignation)theEObject;
			T result = caseCodeSystemDesignation(codeSystemDesignation);
			if (result == null) result = caseBackboneElement(codeSystemDesignation);
			if (result == null) result = caseElement(codeSystemDesignation);
			if (result == null) result = caseBase(codeSystemDesignation);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.CODE_SYSTEM_FILTER: {
			final CodeSystemFilter codeSystemFilter = (CodeSystemFilter)theEObject;
			T result = caseCodeSystemFilter(codeSystemFilter);
			if (result == null) result = caseBackboneElement(codeSystemFilter);
			if (result == null) result = caseElement(codeSystemFilter);
			if (result == null) result = caseBase(codeSystemFilter);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.CODE_SYSTEM_HIERARCHY_MEANING: {
			final CodeSystemHierarchyMeaning codeSystemHierarchyMeaning = (CodeSystemHierarchyMeaning)theEObject;
			T result = caseCodeSystemHierarchyMeaning(codeSystemHierarchyMeaning);
			if (result == null) result = caseElement(codeSystemHierarchyMeaning);
			if (result == null) result = caseBase(codeSystemHierarchyMeaning);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.CODE_SYSTEM_PROPERTY: {
			final CodeSystemProperty codeSystemProperty = (CodeSystemProperty)theEObject;
			T result = caseCodeSystemProperty(codeSystemProperty);
			if (result == null) result = caseBackboneElement(codeSystemProperty);
			if (result == null) result = caseElement(codeSystemProperty);
			if (result == null) result = caseBase(codeSystemProperty);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.CODE_SYSTEM_PROPERTY1: {
			final CodeSystemProperty1 codeSystemProperty1 = (CodeSystemProperty1)theEObject;
			T result = caseCodeSystemProperty1(codeSystemProperty1);
			if (result == null) result = caseBackboneElement(codeSystemProperty1);
			if (result == null) result = caseElement(codeSystemProperty1);
			if (result == null) result = caseBase(codeSystemProperty1);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.CODING: {
			final Coding coding = (Coding)theEObject;
			T result = caseCoding(coding);
			if (result == null) result = caseDataType(coding);
			if (result == null) result = caseElement(coding);
			if (result == null) result = caseBase(coding);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.COLOR_CODES_OR_RGB: {
			final ColorCodesOrRGB colorCodesOrRGB = (ColorCodesOrRGB)theEObject;
			T result = caseColorCodesOrRGB(colorCodesOrRGB);
			if (result == null) result = caseElement(colorCodesOrRGB);
			if (result == null) result = caseBase(colorCodesOrRGB);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.COMMON_LANGUAGES: {
			final CommonLanguages commonLanguages = (CommonLanguages)theEObject;
			T result = caseCommonLanguages(commonLanguages);
			if (result == null) result = caseElement(commonLanguages);
			if (result == null) result = caseBase(commonLanguages);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.COMMUNICATION: {
			final Communication communication = (Communication)theEObject;
			T result = caseCommunication(communication);
			if (result == null) result = caseDomainResource(communication);
			if (result == null) result = caseResource(communication);
			if (result == null) result = caseBase(communication);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.COMMUNICATION_PAYLOAD: {
			final CommunicationPayload communicationPayload = (CommunicationPayload)theEObject;
			T result = caseCommunicationPayload(communicationPayload);
			if (result == null) result = caseBackboneElement(communicationPayload);
			if (result == null) result = caseElement(communicationPayload);
			if (result == null) result = caseBase(communicationPayload);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.COMMUNICATION_REQUEST: {
			final CommunicationRequest communicationRequest = (CommunicationRequest)theEObject;
			T result = caseCommunicationRequest(communicationRequest);
			if (result == null) result = caseDomainResource(communicationRequest);
			if (result == null) result = caseResource(communicationRequest);
			if (result == null) result = caseBase(communicationRequest);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.COMMUNICATION_REQUEST_PAYLOAD: {
			final CommunicationRequestPayload communicationRequestPayload = (CommunicationRequestPayload)theEObject;
			T result = caseCommunicationRequestPayload(communicationRequestPayload);
			if (result == null) result = caseBackboneElement(communicationRequestPayload);
			if (result == null) result = caseElement(communicationRequestPayload);
			if (result == null) result = caseBase(communicationRequestPayload);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.COMPARTMENT_DEFINITION: {
			final CompartmentDefinition compartmentDefinition = (CompartmentDefinition)theEObject;
			T result = caseCompartmentDefinition(compartmentDefinition);
			if (result == null) result = caseCanonicalResource(compartmentDefinition);
			if (result == null) result = caseDomainResource(compartmentDefinition);
			if (result == null) result = caseResource(compartmentDefinition);
			if (result == null) result = caseBase(compartmentDefinition);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.COMPARTMENT_DEFINITION_RESOURCE: {
			final CompartmentDefinitionResource compartmentDefinitionResource = (CompartmentDefinitionResource)theEObject;
			T result = caseCompartmentDefinitionResource(compartmentDefinitionResource);
			if (result == null) result = caseBackboneElement(compartmentDefinitionResource);
			if (result == null) result = caseElement(compartmentDefinitionResource);
			if (result == null) result = caseBase(compartmentDefinitionResource);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.COMPARTMENT_TYPE: {
			final CompartmentType compartmentType = (CompartmentType)theEObject;
			T result = caseCompartmentType(compartmentType);
			if (result == null) result = caseElement(compartmentType);
			if (result == null) result = caseBase(compartmentType);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.COMPOSITION: {
			final Composition composition = (Composition)theEObject;
			T result = caseComposition(composition);
			if (result == null) result = caseDomainResource(composition);
			if (result == null) result = caseResource(composition);
			if (result == null) result = caseBase(composition);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.COMPOSITION_ATTESTER: {
			final CompositionAttester compositionAttester = (CompositionAttester)theEObject;
			T result = caseCompositionAttester(compositionAttester);
			if (result == null) result = caseBackboneElement(compositionAttester);
			if (result == null) result = caseElement(compositionAttester);
			if (result == null) result = caseBase(compositionAttester);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.COMPOSITION_EVENT: {
			final CompositionEvent compositionEvent = (CompositionEvent)theEObject;
			T result = caseCompositionEvent(compositionEvent);
			if (result == null) result = caseBackboneElement(compositionEvent);
			if (result == null) result = caseElement(compositionEvent);
			if (result == null) result = caseBase(compositionEvent);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.COMPOSITION_SECTION: {
			final CompositionSection compositionSection = (CompositionSection)theEObject;
			T result = caseCompositionSection(compositionSection);
			if (result == null) result = caseBackboneElement(compositionSection);
			if (result == null) result = caseElement(compositionSection);
			if (result == null) result = caseBase(compositionSection);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.COMPOSITION_STATUS: {
			final CompositionStatus compositionStatus = (CompositionStatus)theEObject;
			T result = caseCompositionStatus(compositionStatus);
			if (result == null) result = caseElement(compositionStatus);
			if (result == null) result = caseBase(compositionStatus);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.CONCEPT_MAP: {
			final ConceptMap conceptMap = (ConceptMap)theEObject;
			T result = caseConceptMap(conceptMap);
			if (result == null) result = caseMetadataResource(conceptMap);
			if (result == null) result = caseCanonicalResource(conceptMap);
			if (result == null) result = caseDomainResource(conceptMap);
			if (result == null) result = caseResource(conceptMap);
			if (result == null) result = caseBase(conceptMap);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.CONCEPT_MAP_ADDITIONAL_ATTRIBUTE: {
			final ConceptMapAdditionalAttribute conceptMapAdditionalAttribute = (ConceptMapAdditionalAttribute)theEObject;
			T result = caseConceptMapAdditionalAttribute(conceptMapAdditionalAttribute);
			if (result == null) result = caseBackboneElement(conceptMapAdditionalAttribute);
			if (result == null) result = caseElement(conceptMapAdditionalAttribute);
			if (result == null) result = caseBase(conceptMapAdditionalAttribute);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.CONCEPT_MAP_ATTRIBUTE_TYPE: {
			final ConceptMapAttributeType conceptMapAttributeType = (ConceptMapAttributeType)theEObject;
			T result = caseConceptMapAttributeType(conceptMapAttributeType);
			if (result == null) result = caseElement(conceptMapAttributeType);
			if (result == null) result = caseBase(conceptMapAttributeType);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.CONCEPT_MAP_DEPENDS_ON: {
			final ConceptMapDependsOn conceptMapDependsOn = (ConceptMapDependsOn)theEObject;
			T result = caseConceptMapDependsOn(conceptMapDependsOn);
			if (result == null) result = caseBackboneElement(conceptMapDependsOn);
			if (result == null) result = caseElement(conceptMapDependsOn);
			if (result == null) result = caseBase(conceptMapDependsOn);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.CONCEPT_MAP_ELEMENT: {
			final ConceptMapElement conceptMapElement = (ConceptMapElement)theEObject;
			T result = caseConceptMapElement(conceptMapElement);
			if (result == null) result = caseBackboneElement(conceptMapElement);
			if (result == null) result = caseElement(conceptMapElement);
			if (result == null) result = caseBase(conceptMapElement);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.CONCEPT_MAP_GROUP: {
			final ConceptMapGroup conceptMapGroup = (ConceptMapGroup)theEObject;
			T result = caseConceptMapGroup(conceptMapGroup);
			if (result == null) result = caseBackboneElement(conceptMapGroup);
			if (result == null) result = caseElement(conceptMapGroup);
			if (result == null) result = caseBase(conceptMapGroup);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.CONCEPT_MAP_GROUP_UNMAPPED_MODE: {
			final ConceptMapGroupUnmappedMode conceptMapGroupUnmappedMode = (ConceptMapGroupUnmappedMode)theEObject;
			T result = caseConceptMapGroupUnmappedMode(conceptMapGroupUnmappedMode);
			if (result == null) result = caseElement(conceptMapGroupUnmappedMode);
			if (result == null) result = caseBase(conceptMapGroupUnmappedMode);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.CONCEPT_MAP_PROPERTY: {
			final ConceptMapProperty conceptMapProperty = (ConceptMapProperty)theEObject;
			T result = caseConceptMapProperty(conceptMapProperty);
			if (result == null) result = caseBackboneElement(conceptMapProperty);
			if (result == null) result = caseElement(conceptMapProperty);
			if (result == null) result = caseBase(conceptMapProperty);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.CONCEPT_MAP_PROPERTY1: {
			final ConceptMapProperty1 conceptMapProperty1 = (ConceptMapProperty1)theEObject;
			T result = caseConceptMapProperty1(conceptMapProperty1);
			if (result == null) result = caseBackboneElement(conceptMapProperty1);
			if (result == null) result = caseElement(conceptMapProperty1);
			if (result == null) result = caseBase(conceptMapProperty1);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.CONCEPT_MAP_PROPERTY_TYPE: {
			final ConceptMapPropertyType conceptMapPropertyType = (ConceptMapPropertyType)theEObject;
			T result = caseConceptMapPropertyType(conceptMapPropertyType);
			if (result == null) result = caseElement(conceptMapPropertyType);
			if (result == null) result = caseBase(conceptMapPropertyType);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.CONCEPT_MAP_RELATIONSHIP: {
			final ConceptMapRelationship conceptMapRelationship = (ConceptMapRelationship)theEObject;
			T result = caseConceptMapRelationship(conceptMapRelationship);
			if (result == null) result = caseElement(conceptMapRelationship);
			if (result == null) result = caseBase(conceptMapRelationship);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.CONCEPT_MAP_TARGET: {
			final ConceptMapTarget conceptMapTarget = (ConceptMapTarget)theEObject;
			T result = caseConceptMapTarget(conceptMapTarget);
			if (result == null) result = caseBackboneElement(conceptMapTarget);
			if (result == null) result = caseElement(conceptMapTarget);
			if (result == null) result = caseBase(conceptMapTarget);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.CONCEPT_MAP_UNMAPPED: {
			final ConceptMapUnmapped conceptMapUnmapped = (ConceptMapUnmapped)theEObject;
			T result = caseConceptMapUnmapped(conceptMapUnmapped);
			if (result == null) result = caseBackboneElement(conceptMapUnmapped);
			if (result == null) result = caseElement(conceptMapUnmapped);
			if (result == null) result = caseBase(conceptMapUnmapped);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.CONCRETE_FHIR_TYPES: {
			final ConcreteFHIRTypes concreteFHIRTypes = (ConcreteFHIRTypes)theEObject;
			T result = caseConcreteFHIRTypes(concreteFHIRTypes);
			if (result == null) result = caseElement(concreteFHIRTypes);
			if (result == null) result = caseBase(concreteFHIRTypes);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.CONDITION: {
			final Condition condition = (Condition)theEObject;
			T result = caseCondition(condition);
			if (result == null) result = caseDomainResource(condition);
			if (result == null) result = caseResource(condition);
			if (result == null) result = caseBase(condition);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.CONDITIONAL_DELETE_STATUS: {
			final ConditionalDeleteStatus conditionalDeleteStatus = (ConditionalDeleteStatus)theEObject;
			T result = caseConditionalDeleteStatus(conditionalDeleteStatus);
			if (result == null) result = caseElement(conditionalDeleteStatus);
			if (result == null) result = caseBase(conditionalDeleteStatus);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.CONDITIONAL_READ_STATUS: {
			final ConditionalReadStatus conditionalReadStatus = (ConditionalReadStatus)theEObject;
			T result = caseConditionalReadStatus(conditionalReadStatus);
			if (result == null) result = caseElement(conditionalReadStatus);
			if (result == null) result = caseBase(conditionalReadStatus);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.CONDITION_DEFINITION: {
			final ConditionDefinition conditionDefinition = (ConditionDefinition)theEObject;
			T result = caseConditionDefinition(conditionDefinition);
			if (result == null) result = caseMetadataResource(conditionDefinition);
			if (result == null) result = caseCanonicalResource(conditionDefinition);
			if (result == null) result = caseDomainResource(conditionDefinition);
			if (result == null) result = caseResource(conditionDefinition);
			if (result == null) result = caseBase(conditionDefinition);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.CONDITION_DEFINITION_MEDICATION: {
			final ConditionDefinitionMedication conditionDefinitionMedication = (ConditionDefinitionMedication)theEObject;
			T result = caseConditionDefinitionMedication(conditionDefinitionMedication);
			if (result == null) result = caseBackboneElement(conditionDefinitionMedication);
			if (result == null) result = caseElement(conditionDefinitionMedication);
			if (result == null) result = caseBase(conditionDefinitionMedication);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.CONDITION_DEFINITION_OBSERVATION: {
			final ConditionDefinitionObservation conditionDefinitionObservation = (ConditionDefinitionObservation)theEObject;
			T result = caseConditionDefinitionObservation(conditionDefinitionObservation);
			if (result == null) result = caseBackboneElement(conditionDefinitionObservation);
			if (result == null) result = caseElement(conditionDefinitionObservation);
			if (result == null) result = caseBase(conditionDefinitionObservation);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.CONDITION_DEFINITION_PLAN: {
			final ConditionDefinitionPlan conditionDefinitionPlan = (ConditionDefinitionPlan)theEObject;
			T result = caseConditionDefinitionPlan(conditionDefinitionPlan);
			if (result == null) result = caseBackboneElement(conditionDefinitionPlan);
			if (result == null) result = caseElement(conditionDefinitionPlan);
			if (result == null) result = caseBase(conditionDefinitionPlan);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.CONDITION_DEFINITION_PRECONDITION: {
			final ConditionDefinitionPrecondition conditionDefinitionPrecondition = (ConditionDefinitionPrecondition)theEObject;
			T result = caseConditionDefinitionPrecondition(conditionDefinitionPrecondition);
			if (result == null) result = caseBackboneElement(conditionDefinitionPrecondition);
			if (result == null) result = caseElement(conditionDefinitionPrecondition);
			if (result == null) result = caseBase(conditionDefinitionPrecondition);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.CONDITION_DEFINITION_QUESTIONNAIRE: {
			final ConditionDefinitionQuestionnaire conditionDefinitionQuestionnaire = (ConditionDefinitionQuestionnaire)theEObject;
			T result = caseConditionDefinitionQuestionnaire(conditionDefinitionQuestionnaire);
			if (result == null) result = caseBackboneElement(conditionDefinitionQuestionnaire);
			if (result == null) result = caseElement(conditionDefinitionQuestionnaire);
			if (result == null) result = caseBase(conditionDefinitionQuestionnaire);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.CONDITION_PARTICIPANT: {
			final ConditionParticipant conditionParticipant = (ConditionParticipant)theEObject;
			T result = caseConditionParticipant(conditionParticipant);
			if (result == null) result = caseBackboneElement(conditionParticipant);
			if (result == null) result = caseElement(conditionParticipant);
			if (result == null) result = caseBase(conditionParticipant);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.CONDITION_PRECONDITION_TYPE: {
			final ConditionPreconditionType conditionPreconditionType = (ConditionPreconditionType)theEObject;
			T result = caseConditionPreconditionType(conditionPreconditionType);
			if (result == null) result = caseElement(conditionPreconditionType);
			if (result == null) result = caseBase(conditionPreconditionType);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.CONDITION_QUESTIONNAIRE_PURPOSE: {
			final ConditionQuestionnairePurpose conditionQuestionnairePurpose = (ConditionQuestionnairePurpose)theEObject;
			T result = caseConditionQuestionnairePurpose(conditionQuestionnairePurpose);
			if (result == null) result = caseElement(conditionQuestionnairePurpose);
			if (result == null) result = caseBase(conditionQuestionnairePurpose);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.CONDITION_STAGE: {
			final ConditionStage conditionStage = (ConditionStage)theEObject;
			T result = caseConditionStage(conditionStage);
			if (result == null) result = caseBackboneElement(conditionStage);
			if (result == null) result = caseElement(conditionStage);
			if (result == null) result = caseBase(conditionStage);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.CONFORMANCE_EXPECTATION: {
			final ConformanceExpectation conformanceExpectation = (ConformanceExpectation)theEObject;
			T result = caseConformanceExpectation(conformanceExpectation);
			if (result == null) result = caseElement(conformanceExpectation);
			if (result == null) result = caseBase(conformanceExpectation);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.CONSENT: {
			final Consent consent = (Consent)theEObject;
			T result = caseConsent(consent);
			if (result == null) result = caseDomainResource(consent);
			if (result == null) result = caseResource(consent);
			if (result == null) result = caseBase(consent);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.CONSENT_ACTOR: {
			final ConsentActor consentActor = (ConsentActor)theEObject;
			T result = caseConsentActor(consentActor);
			if (result == null) result = caseBackboneElement(consentActor);
			if (result == null) result = caseElement(consentActor);
			if (result == null) result = caseBase(consentActor);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.CONSENT_DATA: {
			final ConsentData consentData = (ConsentData)theEObject;
			T result = caseConsentData(consentData);
			if (result == null) result = caseBackboneElement(consentData);
			if (result == null) result = caseElement(consentData);
			if (result == null) result = caseBase(consentData);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.CONSENT_DATA_MEANING: {
			final ConsentDataMeaning consentDataMeaning = (ConsentDataMeaning)theEObject;
			T result = caseConsentDataMeaning(consentDataMeaning);
			if (result == null) result = caseElement(consentDataMeaning);
			if (result == null) result = caseBase(consentDataMeaning);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.CONSENT_POLICY_BASIS: {
			final ConsentPolicyBasis consentPolicyBasis = (ConsentPolicyBasis)theEObject;
			T result = caseConsentPolicyBasis(consentPolicyBasis);
			if (result == null) result = caseBackboneElement(consentPolicyBasis);
			if (result == null) result = caseElement(consentPolicyBasis);
			if (result == null) result = caseBase(consentPolicyBasis);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.CONSENT_PROVISION: {
			final ConsentProvision consentProvision = (ConsentProvision)theEObject;
			T result = caseConsentProvision(consentProvision);
			if (result == null) result = caseBackboneElement(consentProvision);
			if (result == null) result = caseElement(consentProvision);
			if (result == null) result = caseBase(consentProvision);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.CONSENT_PROVISION_TYPE: {
			final ConsentProvisionType consentProvisionType = (ConsentProvisionType)theEObject;
			T result = caseConsentProvisionType(consentProvisionType);
			if (result == null) result = caseElement(consentProvisionType);
			if (result == null) result = caseBase(consentProvisionType);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.CONSENT_STATE: {
			final ConsentState consentState = (ConsentState)theEObject;
			T result = caseConsentState(consentState);
			if (result == null) result = caseElement(consentState);
			if (result == null) result = caseBase(consentState);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.CONSENT_VERIFICATION: {
			final ConsentVerification consentVerification = (ConsentVerification)theEObject;
			T result = caseConsentVerification(consentVerification);
			if (result == null) result = caseBackboneElement(consentVerification);
			if (result == null) result = caseElement(consentVerification);
			if (result == null) result = caseBase(consentVerification);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.CONSTRAINT_SEVERITY: {
			final ConstraintSeverity constraintSeverity = (ConstraintSeverity)theEObject;
			T result = caseConstraintSeverity(constraintSeverity);
			if (result == null) result = caseElement(constraintSeverity);
			if (result == null) result = caseBase(constraintSeverity);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.CONTACT_DETAIL: {
			final ContactDetail contactDetail = (ContactDetail)theEObject;
			T result = caseContactDetail(contactDetail);
			if (result == null) result = caseDataType(contactDetail);
			if (result == null) result = caseElement(contactDetail);
			if (result == null) result = caseBase(contactDetail);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.CONTACT_POINT: {
			final ContactPoint contactPoint = (ContactPoint)theEObject;
			T result = caseContactPoint(contactPoint);
			if (result == null) result = caseDataType(contactPoint);
			if (result == null) result = caseElement(contactPoint);
			if (result == null) result = caseBase(contactPoint);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.CONTACT_POINT_SYSTEM: {
			final ContactPointSystem contactPointSystem = (ContactPointSystem)theEObject;
			T result = caseContactPointSystem(contactPointSystem);
			if (result == null) result = caseElement(contactPointSystem);
			if (result == null) result = caseBase(contactPointSystem);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.CONTACT_POINT_USE: {
			final ContactPointUse contactPointUse = (ContactPointUse)theEObject;
			T result = caseContactPointUse(contactPointUse);
			if (result == null) result = caseElement(contactPointUse);
			if (result == null) result = caseBase(contactPointUse);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.CONTRACT: {
			final Contract contract = (Contract)theEObject;
			T result = caseContract(contract);
			if (result == null) result = caseDomainResource(contract);
			if (result == null) result = caseResource(contract);
			if (result == null) result = caseBase(contract);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.CONTRACT_ACTION: {
			final ContractAction contractAction = (ContractAction)theEObject;
			T result = caseContractAction(contractAction);
			if (result == null) result = caseBackboneElement(contractAction);
			if (result == null) result = caseElement(contractAction);
			if (result == null) result = caseBase(contractAction);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.CONTRACT_ANSWER: {
			final ContractAnswer contractAnswer = (ContractAnswer)theEObject;
			T result = caseContractAnswer(contractAnswer);
			if (result == null) result = caseBackboneElement(contractAnswer);
			if (result == null) result = caseElement(contractAnswer);
			if (result == null) result = caseBase(contractAnswer);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.CONTRACT_ASSET: {
			final ContractAsset contractAsset = (ContractAsset)theEObject;
			T result = caseContractAsset(contractAsset);
			if (result == null) result = caseBackboneElement(contractAsset);
			if (result == null) result = caseElement(contractAsset);
			if (result == null) result = caseBase(contractAsset);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.CONTRACT_CONTENT_DEFINITION: {
			final ContractContentDefinition contractContentDefinition = (ContractContentDefinition)theEObject;
			T result = caseContractContentDefinition(contractContentDefinition);
			if (result == null) result = caseBackboneElement(contractContentDefinition);
			if (result == null) result = caseElement(contractContentDefinition);
			if (result == null) result = caseBase(contractContentDefinition);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.CONTRACT_CONTEXT: {
			final ContractContext contractContext = (ContractContext)theEObject;
			T result = caseContractContext(contractContext);
			if (result == null) result = caseBackboneElement(contractContext);
			if (result == null) result = caseElement(contractContext);
			if (result == null) result = caseBase(contractContext);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.CONTRACT_FRIENDLY: {
			final ContractFriendly contractFriendly = (ContractFriendly)theEObject;
			T result = caseContractFriendly(contractFriendly);
			if (result == null) result = caseBackboneElement(contractFriendly);
			if (result == null) result = caseElement(contractFriendly);
			if (result == null) result = caseBase(contractFriendly);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.CONTRACT_LEGAL: {
			final ContractLegal contractLegal = (ContractLegal)theEObject;
			T result = caseContractLegal(contractLegal);
			if (result == null) result = caseBackboneElement(contractLegal);
			if (result == null) result = caseElement(contractLegal);
			if (result == null) result = caseBase(contractLegal);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.CONTRACT_OFFER: {
			final ContractOffer contractOffer = (ContractOffer)theEObject;
			T result = caseContractOffer(contractOffer);
			if (result == null) result = caseBackboneElement(contractOffer);
			if (result == null) result = caseElement(contractOffer);
			if (result == null) result = caseBase(contractOffer);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.CONTRACT_PARTY: {
			final ContractParty contractParty = (ContractParty)theEObject;
			T result = caseContractParty(contractParty);
			if (result == null) result = caseBackboneElement(contractParty);
			if (result == null) result = caseElement(contractParty);
			if (result == null) result = caseBase(contractParty);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.CONTRACT_RESOURCE_PUBLICATION_STATUS_CODES: {
			final ContractResourcePublicationStatusCodes contractResourcePublicationStatusCodes = (ContractResourcePublicationStatusCodes)theEObject;
			T result = caseContractResourcePublicationStatusCodes(contractResourcePublicationStatusCodes);
			if (result == null) result = caseElement(contractResourcePublicationStatusCodes);
			if (result == null) result = caseBase(contractResourcePublicationStatusCodes);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.CONTRACT_RESOURCE_STATUS_CODES: {
			final ContractResourceStatusCodes contractResourceStatusCodes = (ContractResourceStatusCodes)theEObject;
			T result = caseContractResourceStatusCodes(contractResourceStatusCodes);
			if (result == null) result = caseElement(contractResourceStatusCodes);
			if (result == null) result = caseBase(contractResourceStatusCodes);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.CONTRACT_RULE: {
			final ContractRule contractRule = (ContractRule)theEObject;
			T result = caseContractRule(contractRule);
			if (result == null) result = caseBackboneElement(contractRule);
			if (result == null) result = caseElement(contractRule);
			if (result == null) result = caseBase(contractRule);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.CONTRACT_SECURITY_LABEL: {
			final ContractSecurityLabel contractSecurityLabel = (ContractSecurityLabel)theEObject;
			T result = caseContractSecurityLabel(contractSecurityLabel);
			if (result == null) result = caseBackboneElement(contractSecurityLabel);
			if (result == null) result = caseElement(contractSecurityLabel);
			if (result == null) result = caseBase(contractSecurityLabel);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.CONTRACT_SIGNER: {
			final ContractSigner contractSigner = (ContractSigner)theEObject;
			T result = caseContractSigner(contractSigner);
			if (result == null) result = caseBackboneElement(contractSigner);
			if (result == null) result = caseElement(contractSigner);
			if (result == null) result = caseBase(contractSigner);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.CONTRACT_SUBJECT: {
			final ContractSubject contractSubject = (ContractSubject)theEObject;
			T result = caseContractSubject(contractSubject);
			if (result == null) result = caseBackboneElement(contractSubject);
			if (result == null) result = caseElement(contractSubject);
			if (result == null) result = caseBase(contractSubject);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.CONTRACT_TERM: {
			final ContractTerm contractTerm = (ContractTerm)theEObject;
			T result = caseContractTerm(contractTerm);
			if (result == null) result = caseBackboneElement(contractTerm);
			if (result == null) result = caseElement(contractTerm);
			if (result == null) result = caseBase(contractTerm);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.CONTRACT_VALUED_ITEM: {
			final ContractValuedItem contractValuedItem = (ContractValuedItem)theEObject;
			T result = caseContractValuedItem(contractValuedItem);
			if (result == null) result = caseBackboneElement(contractValuedItem);
			if (result == null) result = caseElement(contractValuedItem);
			if (result == null) result = caseBase(contractValuedItem);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.CONTRIBUTOR: {
			final Contributor contributor = (Contributor)theEObject;
			T result = caseContributor(contributor);
			if (result == null) result = caseDataType(contributor);
			if (result == null) result = caseElement(contributor);
			if (result == null) result = caseBase(contributor);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.CONTRIBUTOR_TYPE: {
			final ContributorType contributorType = (ContributorType)theEObject;
			T result = caseContributorType(contributorType);
			if (result == null) result = caseElement(contributorType);
			if (result == null) result = caseBase(contributorType);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.COUNT: {
			final Count count = (Count)theEObject;
			T result = caseCount(count);
			if (result == null) result = caseQuantity(count);
			if (result == null) result = caseDataType(count);
			if (result == null) result = caseElement(count);
			if (result == null) result = caseBase(count);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.COVERAGE: {
			final Coverage coverage = (Coverage)theEObject;
			T result = caseCoverage(coverage);
			if (result == null) result = caseDomainResource(coverage);
			if (result == null) result = caseResource(coverage);
			if (result == null) result = caseBase(coverage);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.COVERAGE_CLASS: {
			final CoverageClass coverageClass = (CoverageClass)theEObject;
			T result = caseCoverageClass(coverageClass);
			if (result == null) result = caseBackboneElement(coverageClass);
			if (result == null) result = caseElement(coverageClass);
			if (result == null) result = caseBase(coverageClass);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.COVERAGE_COST_TO_BENEFICIARY: {
			final CoverageCostToBeneficiary coverageCostToBeneficiary = (CoverageCostToBeneficiary)theEObject;
			T result = caseCoverageCostToBeneficiary(coverageCostToBeneficiary);
			if (result == null) result = caseBackboneElement(coverageCostToBeneficiary);
			if (result == null) result = caseElement(coverageCostToBeneficiary);
			if (result == null) result = caseBase(coverageCostToBeneficiary);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.COVERAGE_ELIGIBILITY_REQUEST: {
			final CoverageEligibilityRequest coverageEligibilityRequest = (CoverageEligibilityRequest)theEObject;
			T result = caseCoverageEligibilityRequest(coverageEligibilityRequest);
			if (result == null) result = caseDomainResource(coverageEligibilityRequest);
			if (result == null) result = caseResource(coverageEligibilityRequest);
			if (result == null) result = caseBase(coverageEligibilityRequest);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.COVERAGE_ELIGIBILITY_REQUEST_DIAGNOSIS: {
			final CoverageEligibilityRequestDiagnosis coverageEligibilityRequestDiagnosis = (CoverageEligibilityRequestDiagnosis)theEObject;
			T result = caseCoverageEligibilityRequestDiagnosis(coverageEligibilityRequestDiagnosis);
			if (result == null) result = caseBackboneElement(coverageEligibilityRequestDiagnosis);
			if (result == null) result = caseElement(coverageEligibilityRequestDiagnosis);
			if (result == null) result = caseBase(coverageEligibilityRequestDiagnosis);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.COVERAGE_ELIGIBILITY_REQUEST_EVENT: {
			final CoverageEligibilityRequestEvent coverageEligibilityRequestEvent = (CoverageEligibilityRequestEvent)theEObject;
			T result = caseCoverageEligibilityRequestEvent(coverageEligibilityRequestEvent);
			if (result == null) result = caseBackboneElement(coverageEligibilityRequestEvent);
			if (result == null) result = caseElement(coverageEligibilityRequestEvent);
			if (result == null) result = caseBase(coverageEligibilityRequestEvent);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.COVERAGE_ELIGIBILITY_REQUEST_INSURANCE: {
			final CoverageEligibilityRequestInsurance coverageEligibilityRequestInsurance = (CoverageEligibilityRequestInsurance)theEObject;
			T result = caseCoverageEligibilityRequestInsurance(coverageEligibilityRequestInsurance);
			if (result == null) result = caseBackboneElement(coverageEligibilityRequestInsurance);
			if (result == null) result = caseElement(coverageEligibilityRequestInsurance);
			if (result == null) result = caseBase(coverageEligibilityRequestInsurance);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.COVERAGE_ELIGIBILITY_REQUEST_ITEM: {
			final CoverageEligibilityRequestItem coverageEligibilityRequestItem = (CoverageEligibilityRequestItem)theEObject;
			T result = caseCoverageEligibilityRequestItem(coverageEligibilityRequestItem);
			if (result == null) result = caseBackboneElement(coverageEligibilityRequestItem);
			if (result == null) result = caseElement(coverageEligibilityRequestItem);
			if (result == null) result = caseBase(coverageEligibilityRequestItem);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.COVERAGE_ELIGIBILITY_REQUEST_SUPPORTING_INFO: {
			final CoverageEligibilityRequestSupportingInfo coverageEligibilityRequestSupportingInfo = (CoverageEligibilityRequestSupportingInfo)theEObject;
			T result = caseCoverageEligibilityRequestSupportingInfo(coverageEligibilityRequestSupportingInfo);
			if (result == null) result = caseBackboneElement(coverageEligibilityRequestSupportingInfo);
			if (result == null) result = caseElement(coverageEligibilityRequestSupportingInfo);
			if (result == null) result = caseBase(coverageEligibilityRequestSupportingInfo);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.COVERAGE_ELIGIBILITY_RESPONSE: {
			final CoverageEligibilityResponse coverageEligibilityResponse = (CoverageEligibilityResponse)theEObject;
			T result = caseCoverageEligibilityResponse(coverageEligibilityResponse);
			if (result == null) result = caseDomainResource(coverageEligibilityResponse);
			if (result == null) result = caseResource(coverageEligibilityResponse);
			if (result == null) result = caseBase(coverageEligibilityResponse);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.COVERAGE_ELIGIBILITY_RESPONSE_BENEFIT: {
			final CoverageEligibilityResponseBenefit coverageEligibilityResponseBenefit = (CoverageEligibilityResponseBenefit)theEObject;
			T result = caseCoverageEligibilityResponseBenefit(coverageEligibilityResponseBenefit);
			if (result == null) result = caseBackboneElement(coverageEligibilityResponseBenefit);
			if (result == null) result = caseElement(coverageEligibilityResponseBenefit);
			if (result == null) result = caseBase(coverageEligibilityResponseBenefit);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.COVERAGE_ELIGIBILITY_RESPONSE_ERROR: {
			final CoverageEligibilityResponseError coverageEligibilityResponseError = (CoverageEligibilityResponseError)theEObject;
			T result = caseCoverageEligibilityResponseError(coverageEligibilityResponseError);
			if (result == null) result = caseBackboneElement(coverageEligibilityResponseError);
			if (result == null) result = caseElement(coverageEligibilityResponseError);
			if (result == null) result = caseBase(coverageEligibilityResponseError);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.COVERAGE_ELIGIBILITY_RESPONSE_EVENT: {
			final CoverageEligibilityResponseEvent coverageEligibilityResponseEvent = (CoverageEligibilityResponseEvent)theEObject;
			T result = caseCoverageEligibilityResponseEvent(coverageEligibilityResponseEvent);
			if (result == null) result = caseBackboneElement(coverageEligibilityResponseEvent);
			if (result == null) result = caseElement(coverageEligibilityResponseEvent);
			if (result == null) result = caseBase(coverageEligibilityResponseEvent);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.COVERAGE_ELIGIBILITY_RESPONSE_INSURANCE: {
			final CoverageEligibilityResponseInsurance coverageEligibilityResponseInsurance = (CoverageEligibilityResponseInsurance)theEObject;
			T result = caseCoverageEligibilityResponseInsurance(coverageEligibilityResponseInsurance);
			if (result == null) result = caseBackboneElement(coverageEligibilityResponseInsurance);
			if (result == null) result = caseElement(coverageEligibilityResponseInsurance);
			if (result == null) result = caseBase(coverageEligibilityResponseInsurance);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.COVERAGE_ELIGIBILITY_RESPONSE_ITEM: {
			final CoverageEligibilityResponseItem coverageEligibilityResponseItem = (CoverageEligibilityResponseItem)theEObject;
			T result = caseCoverageEligibilityResponseItem(coverageEligibilityResponseItem);
			if (result == null) result = caseBackboneElement(coverageEligibilityResponseItem);
			if (result == null) result = caseElement(coverageEligibilityResponseItem);
			if (result == null) result = caseBase(coverageEligibilityResponseItem);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.COVERAGE_EXCEPTION: {
			final CoverageException coverageException = (CoverageException)theEObject;
			T result = caseCoverageException(coverageException);
			if (result == null) result = caseBackboneElement(coverageException);
			if (result == null) result = caseElement(coverageException);
			if (result == null) result = caseBase(coverageException);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.COVERAGE_PAYMENT_BY: {
			final CoveragePaymentBy coveragePaymentBy = (CoveragePaymentBy)theEObject;
			T result = caseCoveragePaymentBy(coveragePaymentBy);
			if (result == null) result = caseBackboneElement(coveragePaymentBy);
			if (result == null) result = caseElement(coveragePaymentBy);
			if (result == null) result = caseBase(coveragePaymentBy);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.CRITERIA_NOT_EXISTS_BEHAVIOR: {
			final CriteriaNotExistsBehavior criteriaNotExistsBehavior = (CriteriaNotExistsBehavior)theEObject;
			T result = caseCriteriaNotExistsBehavior(criteriaNotExistsBehavior);
			if (result == null) result = caseElement(criteriaNotExistsBehavior);
			if (result == null) result = caseBase(criteriaNotExistsBehavior);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.DATA_REQUIREMENT: {
			final DataRequirement dataRequirement = (DataRequirement)theEObject;
			T result = caseDataRequirement(dataRequirement);
			if (result == null) result = caseDataType(dataRequirement);
			if (result == null) result = caseElement(dataRequirement);
			if (result == null) result = caseBase(dataRequirement);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.DATA_REQUIREMENT_CODE_FILTER: {
			final DataRequirementCodeFilter dataRequirementCodeFilter = (DataRequirementCodeFilter)theEObject;
			T result = caseDataRequirementCodeFilter(dataRequirementCodeFilter);
			if (result == null) result = caseDataType(dataRequirementCodeFilter);
			if (result == null) result = caseElement(dataRequirementCodeFilter);
			if (result == null) result = caseBase(dataRequirementCodeFilter);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.DATA_REQUIREMENT_DATE_FILTER: {
			final DataRequirementDateFilter dataRequirementDateFilter = (DataRequirementDateFilter)theEObject;
			T result = caseDataRequirementDateFilter(dataRequirementDateFilter);
			if (result == null) result = caseDataType(dataRequirementDateFilter);
			if (result == null) result = caseElement(dataRequirementDateFilter);
			if (result == null) result = caseBase(dataRequirementDateFilter);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.DATA_REQUIREMENT_SORT: {
			final DataRequirementSort dataRequirementSort = (DataRequirementSort)theEObject;
			T result = caseDataRequirementSort(dataRequirementSort);
			if (result == null) result = caseDataType(dataRequirementSort);
			if (result == null) result = caseElement(dataRequirementSort);
			if (result == null) result = caseBase(dataRequirementSort);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.DATA_REQUIREMENT_VALUE_FILTER: {
			final DataRequirementValueFilter dataRequirementValueFilter = (DataRequirementValueFilter)theEObject;
			T result = caseDataRequirementValueFilter(dataRequirementValueFilter);
			if (result == null) result = caseDataType(dataRequirementValueFilter);
			if (result == null) result = caseElement(dataRequirementValueFilter);
			if (result == null) result = caseBase(dataRequirementValueFilter);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.DATA_TYPE: {
			final DataType dataType = (DataType)theEObject;
			T result = caseDataType(dataType);
			if (result == null) result = caseElement(dataType);
			if (result == null) result = caseBase(dataType);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.DATE: {
			final Date date = (Date)theEObject;
			T result = caseDate(date);
			if (result == null) result = caseElement(date);
			if (result == null) result = caseBase(date);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.DATE_TIME: {
			final DateTime dateTime = (DateTime)theEObject;
			T result = caseDateTime(dateTime);
			if (result == null) result = caseElement(dateTime);
			if (result == null) result = caseBase(dateTime);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.DECIMAL: {
			final Decimal decimal = (Decimal)theEObject;
			T result = caseDecimal(decimal);
			if (result == null) result = caseElement(decimal);
			if (result == null) result = caseBase(decimal);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.DEFINITION_RESOURCE_TYPES: {
			final DefinitionResourceTypes definitionResourceTypes = (DefinitionResourceTypes)theEObject;
			T result = caseDefinitionResourceTypes(definitionResourceTypes);
			if (result == null) result = caseElement(definitionResourceTypes);
			if (result == null) result = caseBase(definitionResourceTypes);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.DETECTED_ISSUE: {
			final DetectedIssue detectedIssue = (DetectedIssue)theEObject;
			T result = caseDetectedIssue(detectedIssue);
			if (result == null) result = caseDomainResource(detectedIssue);
			if (result == null) result = caseResource(detectedIssue);
			if (result == null) result = caseBase(detectedIssue);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.DETECTED_ISSUE_EVIDENCE: {
			final DetectedIssueEvidence detectedIssueEvidence = (DetectedIssueEvidence)theEObject;
			T result = caseDetectedIssueEvidence(detectedIssueEvidence);
			if (result == null) result = caseBackboneElement(detectedIssueEvidence);
			if (result == null) result = caseElement(detectedIssueEvidence);
			if (result == null) result = caseBase(detectedIssueEvidence);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.DETECTED_ISSUE_MITIGATION: {
			final DetectedIssueMitigation detectedIssueMitigation = (DetectedIssueMitigation)theEObject;
			T result = caseDetectedIssueMitigation(detectedIssueMitigation);
			if (result == null) result = caseBackboneElement(detectedIssueMitigation);
			if (result == null) result = caseElement(detectedIssueMitigation);
			if (result == null) result = caseBase(detectedIssueMitigation);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.DETECTED_ISSUE_SEVERITY: {
			final DetectedIssueSeverity detectedIssueSeverity = (DetectedIssueSeverity)theEObject;
			T result = caseDetectedIssueSeverity(detectedIssueSeverity);
			if (result == null) result = caseElement(detectedIssueSeverity);
			if (result == null) result = caseBase(detectedIssueSeverity);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.DETECTED_ISSUE_STATUS: {
			final DetectedIssueStatus detectedIssueStatus = (DetectedIssueStatus)theEObject;
			T result = caseDetectedIssueStatus(detectedIssueStatus);
			if (result == null) result = caseElement(detectedIssueStatus);
			if (result == null) result = caseBase(detectedIssueStatus);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.DEVICE: {
			final Device device = (Device)theEObject;
			T result = caseDevice(device);
			if (result == null) result = caseDomainResource(device);
			if (result == null) result = caseResource(device);
			if (result == null) result = caseBase(device);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.DEVICE_ASSOCIATION: {
			final DeviceAssociation deviceAssociation = (DeviceAssociation)theEObject;
			T result = caseDeviceAssociation(deviceAssociation);
			if (result == null) result = caseDomainResource(deviceAssociation);
			if (result == null) result = caseResource(deviceAssociation);
			if (result == null) result = caseBase(deviceAssociation);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.DEVICE_ASSOCIATION_OPERATION: {
			final DeviceAssociationOperation deviceAssociationOperation = (DeviceAssociationOperation)theEObject;
			T result = caseDeviceAssociationOperation(deviceAssociationOperation);
			if (result == null) result = caseBackboneElement(deviceAssociationOperation);
			if (result == null) result = caseElement(deviceAssociationOperation);
			if (result == null) result = caseBase(deviceAssociationOperation);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.DEVICE_CONFORMS_TO: {
			final DeviceConformsTo deviceConformsTo = (DeviceConformsTo)theEObject;
			T result = caseDeviceConformsTo(deviceConformsTo);
			if (result == null) result = caseBackboneElement(deviceConformsTo);
			if (result == null) result = caseElement(deviceConformsTo);
			if (result == null) result = caseBase(deviceConformsTo);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.DEVICE_CORRECTIVE_ACTION_SCOPE: {
			final DeviceCorrectiveActionScope deviceCorrectiveActionScope = (DeviceCorrectiveActionScope)theEObject;
			T result = caseDeviceCorrectiveActionScope(deviceCorrectiveActionScope);
			if (result == null) result = caseElement(deviceCorrectiveActionScope);
			if (result == null) result = caseBase(deviceCorrectiveActionScope);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.DEVICE_DEFINITION: {
			final DeviceDefinition deviceDefinition = (DeviceDefinition)theEObject;
			T result = caseDeviceDefinition(deviceDefinition);
			if (result == null) result = caseDomainResource(deviceDefinition);
			if (result == null) result = caseResource(deviceDefinition);
			if (result == null) result = caseBase(deviceDefinition);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.DEVICE_DEFINITION_CHARGE_ITEM: {
			final DeviceDefinitionChargeItem deviceDefinitionChargeItem = (DeviceDefinitionChargeItem)theEObject;
			T result = caseDeviceDefinitionChargeItem(deviceDefinitionChargeItem);
			if (result == null) result = caseBackboneElement(deviceDefinitionChargeItem);
			if (result == null) result = caseElement(deviceDefinitionChargeItem);
			if (result == null) result = caseBase(deviceDefinitionChargeItem);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.DEVICE_DEFINITION_CLASSIFICATION: {
			final DeviceDefinitionClassification deviceDefinitionClassification = (DeviceDefinitionClassification)theEObject;
			T result = caseDeviceDefinitionClassification(deviceDefinitionClassification);
			if (result == null) result = caseBackboneElement(deviceDefinitionClassification);
			if (result == null) result = caseElement(deviceDefinitionClassification);
			if (result == null) result = caseBase(deviceDefinitionClassification);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.DEVICE_DEFINITION_CONFORMS_TO: {
			final DeviceDefinitionConformsTo deviceDefinitionConformsTo = (DeviceDefinitionConformsTo)theEObject;
			T result = caseDeviceDefinitionConformsTo(deviceDefinitionConformsTo);
			if (result == null) result = caseBackboneElement(deviceDefinitionConformsTo);
			if (result == null) result = caseElement(deviceDefinitionConformsTo);
			if (result == null) result = caseBase(deviceDefinitionConformsTo);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.DEVICE_DEFINITION_CORRECTIVE_ACTION: {
			final DeviceDefinitionCorrectiveAction deviceDefinitionCorrectiveAction = (DeviceDefinitionCorrectiveAction)theEObject;
			T result = caseDeviceDefinitionCorrectiveAction(deviceDefinitionCorrectiveAction);
			if (result == null) result = caseBackboneElement(deviceDefinitionCorrectiveAction);
			if (result == null) result = caseElement(deviceDefinitionCorrectiveAction);
			if (result == null) result = caseBase(deviceDefinitionCorrectiveAction);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.DEVICE_DEFINITION_DEVICE_NAME: {
			final DeviceDefinitionDeviceName deviceDefinitionDeviceName = (DeviceDefinitionDeviceName)theEObject;
			T result = caseDeviceDefinitionDeviceName(deviceDefinitionDeviceName);
			if (result == null) result = caseBackboneElement(deviceDefinitionDeviceName);
			if (result == null) result = caseElement(deviceDefinitionDeviceName);
			if (result == null) result = caseBase(deviceDefinitionDeviceName);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.DEVICE_DEFINITION_DISTRIBUTOR: {
			final DeviceDefinitionDistributor deviceDefinitionDistributor = (DeviceDefinitionDistributor)theEObject;
			T result = caseDeviceDefinitionDistributor(deviceDefinitionDistributor);
			if (result == null) result = caseBackboneElement(deviceDefinitionDistributor);
			if (result == null) result = caseElement(deviceDefinitionDistributor);
			if (result == null) result = caseBase(deviceDefinitionDistributor);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.DEVICE_DEFINITION_GUIDELINE: {
			final DeviceDefinitionGuideline deviceDefinitionGuideline = (DeviceDefinitionGuideline)theEObject;
			T result = caseDeviceDefinitionGuideline(deviceDefinitionGuideline);
			if (result == null) result = caseBackboneElement(deviceDefinitionGuideline);
			if (result == null) result = caseElement(deviceDefinitionGuideline);
			if (result == null) result = caseBase(deviceDefinitionGuideline);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.DEVICE_DEFINITION_HAS_PART: {
			final DeviceDefinitionHasPart deviceDefinitionHasPart = (DeviceDefinitionHasPart)theEObject;
			T result = caseDeviceDefinitionHasPart(deviceDefinitionHasPart);
			if (result == null) result = caseBackboneElement(deviceDefinitionHasPart);
			if (result == null) result = caseElement(deviceDefinitionHasPart);
			if (result == null) result = caseBase(deviceDefinitionHasPart);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.DEVICE_DEFINITION_LINK: {
			final DeviceDefinitionLink deviceDefinitionLink = (DeviceDefinitionLink)theEObject;
			T result = caseDeviceDefinitionLink(deviceDefinitionLink);
			if (result == null) result = caseBackboneElement(deviceDefinitionLink);
			if (result == null) result = caseElement(deviceDefinitionLink);
			if (result == null) result = caseBase(deviceDefinitionLink);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.DEVICE_DEFINITION_MARKET_DISTRIBUTION: {
			final DeviceDefinitionMarketDistribution deviceDefinitionMarketDistribution = (DeviceDefinitionMarketDistribution)theEObject;
			T result = caseDeviceDefinitionMarketDistribution(deviceDefinitionMarketDistribution);
			if (result == null) result = caseBackboneElement(deviceDefinitionMarketDistribution);
			if (result == null) result = caseElement(deviceDefinitionMarketDistribution);
			if (result == null) result = caseBase(deviceDefinitionMarketDistribution);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.DEVICE_DEFINITION_MATERIAL: {
			final DeviceDefinitionMaterial deviceDefinitionMaterial = (DeviceDefinitionMaterial)theEObject;
			T result = caseDeviceDefinitionMaterial(deviceDefinitionMaterial);
			if (result == null) result = caseBackboneElement(deviceDefinitionMaterial);
			if (result == null) result = caseElement(deviceDefinitionMaterial);
			if (result == null) result = caseBase(deviceDefinitionMaterial);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.DEVICE_DEFINITION_PACKAGING: {
			final DeviceDefinitionPackaging deviceDefinitionPackaging = (DeviceDefinitionPackaging)theEObject;
			T result = caseDeviceDefinitionPackaging(deviceDefinitionPackaging);
			if (result == null) result = caseBackboneElement(deviceDefinitionPackaging);
			if (result == null) result = caseElement(deviceDefinitionPackaging);
			if (result == null) result = caseBase(deviceDefinitionPackaging);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.DEVICE_DEFINITION_PROPERTY: {
			final DeviceDefinitionProperty deviceDefinitionProperty = (DeviceDefinitionProperty)theEObject;
			T result = caseDeviceDefinitionProperty(deviceDefinitionProperty);
			if (result == null) result = caseBackboneElement(deviceDefinitionProperty);
			if (result == null) result = caseElement(deviceDefinitionProperty);
			if (result == null) result = caseBase(deviceDefinitionProperty);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.DEVICE_DEFINITION_REGULATORY_IDENTIFIER: {
			final DeviceDefinitionRegulatoryIdentifier deviceDefinitionRegulatoryIdentifier = (DeviceDefinitionRegulatoryIdentifier)theEObject;
			T result = caseDeviceDefinitionRegulatoryIdentifier(deviceDefinitionRegulatoryIdentifier);
			if (result == null) result = caseBackboneElement(deviceDefinitionRegulatoryIdentifier);
			if (result == null) result = caseElement(deviceDefinitionRegulatoryIdentifier);
			if (result == null) result = caseBase(deviceDefinitionRegulatoryIdentifier);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.DEVICE_DEFINITION_REGULATORY_IDENTIFIER_TYPE: {
			final DeviceDefinitionRegulatoryIdentifierType deviceDefinitionRegulatoryIdentifierType = (DeviceDefinitionRegulatoryIdentifierType)theEObject;
			T result = caseDeviceDefinitionRegulatoryIdentifierType(deviceDefinitionRegulatoryIdentifierType);
			if (result == null) result = caseElement(deviceDefinitionRegulatoryIdentifierType);
			if (result == null) result = caseBase(deviceDefinitionRegulatoryIdentifierType);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.DEVICE_DEFINITION_UDI_DEVICE_IDENTIFIER: {
			final DeviceDefinitionUdiDeviceIdentifier deviceDefinitionUdiDeviceIdentifier = (DeviceDefinitionUdiDeviceIdentifier)theEObject;
			T result = caseDeviceDefinitionUdiDeviceIdentifier(deviceDefinitionUdiDeviceIdentifier);
			if (result == null) result = caseBackboneElement(deviceDefinitionUdiDeviceIdentifier);
			if (result == null) result = caseElement(deviceDefinitionUdiDeviceIdentifier);
			if (result == null) result = caseBase(deviceDefinitionUdiDeviceIdentifier);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.DEVICE_DEFINITION_VERSION: {
			final DeviceDefinitionVersion deviceDefinitionVersion = (DeviceDefinitionVersion)theEObject;
			T result = caseDeviceDefinitionVersion(deviceDefinitionVersion);
			if (result == null) result = caseBackboneElement(deviceDefinitionVersion);
			if (result == null) result = caseElement(deviceDefinitionVersion);
			if (result == null) result = caseBase(deviceDefinitionVersion);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.DEVICE_DISPENSE: {
			final DeviceDispense deviceDispense = (DeviceDispense)theEObject;
			T result = caseDeviceDispense(deviceDispense);
			if (result == null) result = caseDomainResource(deviceDispense);
			if (result == null) result = caseResource(deviceDispense);
			if (result == null) result = caseBase(deviceDispense);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.DEVICE_DISPENSE_PERFORMER: {
			final DeviceDispensePerformer deviceDispensePerformer = (DeviceDispensePerformer)theEObject;
			T result = caseDeviceDispensePerformer(deviceDispensePerformer);
			if (result == null) result = caseBackboneElement(deviceDispensePerformer);
			if (result == null) result = caseElement(deviceDispensePerformer);
			if (result == null) result = caseBase(deviceDispensePerformer);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.DEVICE_DISPENSE_STATUS_CODES: {
			final DeviceDispenseStatusCodes deviceDispenseStatusCodes = (DeviceDispenseStatusCodes)theEObject;
			T result = caseDeviceDispenseStatusCodes(deviceDispenseStatusCodes);
			if (result == null) result = caseElement(deviceDispenseStatusCodes);
			if (result == null) result = caseBase(deviceDispenseStatusCodes);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.DEVICE_METRIC: {
			final DeviceMetric deviceMetric = (DeviceMetric)theEObject;
			T result = caseDeviceMetric(deviceMetric);
			if (result == null) result = caseDomainResource(deviceMetric);
			if (result == null) result = caseResource(deviceMetric);
			if (result == null) result = caseBase(deviceMetric);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.DEVICE_METRIC_CALIBRATION: {
			final DeviceMetricCalibration deviceMetricCalibration = (DeviceMetricCalibration)theEObject;
			T result = caseDeviceMetricCalibration(deviceMetricCalibration);
			if (result == null) result = caseBackboneElement(deviceMetricCalibration);
			if (result == null) result = caseElement(deviceMetricCalibration);
			if (result == null) result = caseBase(deviceMetricCalibration);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.DEVICE_METRIC_CALIBRATION_STATE: {
			final DeviceMetricCalibrationState deviceMetricCalibrationState = (DeviceMetricCalibrationState)theEObject;
			T result = caseDeviceMetricCalibrationState(deviceMetricCalibrationState);
			if (result == null) result = caseElement(deviceMetricCalibrationState);
			if (result == null) result = caseBase(deviceMetricCalibrationState);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.DEVICE_METRIC_CALIBRATION_TYPE: {
			final DeviceMetricCalibrationType deviceMetricCalibrationType = (DeviceMetricCalibrationType)theEObject;
			T result = caseDeviceMetricCalibrationType(deviceMetricCalibrationType);
			if (result == null) result = caseElement(deviceMetricCalibrationType);
			if (result == null) result = caseBase(deviceMetricCalibrationType);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.DEVICE_METRIC_CATEGORY: {
			final DeviceMetricCategory deviceMetricCategory = (DeviceMetricCategory)theEObject;
			T result = caseDeviceMetricCategory(deviceMetricCategory);
			if (result == null) result = caseElement(deviceMetricCategory);
			if (result == null) result = caseBase(deviceMetricCategory);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.DEVICE_METRIC_OPERATIONAL_STATUS: {
			final DeviceMetricOperationalStatus deviceMetricOperationalStatus = (DeviceMetricOperationalStatus)theEObject;
			T result = caseDeviceMetricOperationalStatus(deviceMetricOperationalStatus);
			if (result == null) result = caseElement(deviceMetricOperationalStatus);
			if (result == null) result = caseBase(deviceMetricOperationalStatus);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.DEVICE_NAME: {
			final DeviceName deviceName = (DeviceName)theEObject;
			T result = caseDeviceName(deviceName);
			if (result == null) result = caseBackboneElement(deviceName);
			if (result == null) result = caseElement(deviceName);
			if (result == null) result = caseBase(deviceName);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.DEVICE_NAME_TYPE: {
			final DeviceNameType deviceNameType = (DeviceNameType)theEObject;
			T result = caseDeviceNameType(deviceNameType);
			if (result == null) result = caseElement(deviceNameType);
			if (result == null) result = caseBase(deviceNameType);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.DEVICE_PRODUCTION_IDENTIFIER_IN_UDI: {
			final DeviceProductionIdentifierInUDI deviceProductionIdentifierInUDI = (DeviceProductionIdentifierInUDI)theEObject;
			T result = caseDeviceProductionIdentifierInUDI(deviceProductionIdentifierInUDI);
			if (result == null) result = caseElement(deviceProductionIdentifierInUDI);
			if (result == null) result = caseBase(deviceProductionIdentifierInUDI);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.DEVICE_PROPERTY: {
			final DeviceProperty deviceProperty = (DeviceProperty)theEObject;
			T result = caseDeviceProperty(deviceProperty);
			if (result == null) result = caseBackboneElement(deviceProperty);
			if (result == null) result = caseElement(deviceProperty);
			if (result == null) result = caseBase(deviceProperty);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.DEVICE_REQUEST: {
			final DeviceRequest deviceRequest = (DeviceRequest)theEObject;
			T result = caseDeviceRequest(deviceRequest);
			if (result == null) result = caseDomainResource(deviceRequest);
			if (result == null) result = caseResource(deviceRequest);
			if (result == null) result = caseBase(deviceRequest);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.DEVICE_REQUEST_PARAMETER: {
			final DeviceRequestParameter deviceRequestParameter = (DeviceRequestParameter)theEObject;
			T result = caseDeviceRequestParameter(deviceRequestParameter);
			if (result == null) result = caseBackboneElement(deviceRequestParameter);
			if (result == null) result = caseElement(deviceRequestParameter);
			if (result == null) result = caseBase(deviceRequestParameter);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.DEVICE_UDI_CARRIER: {
			final DeviceUdiCarrier deviceUdiCarrier = (DeviceUdiCarrier)theEObject;
			T result = caseDeviceUdiCarrier(deviceUdiCarrier);
			if (result == null) result = caseBackboneElement(deviceUdiCarrier);
			if (result == null) result = caseElement(deviceUdiCarrier);
			if (result == null) result = caseBase(deviceUdiCarrier);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.DEVICE_USAGE: {
			final DeviceUsage deviceUsage = (DeviceUsage)theEObject;
			T result = caseDeviceUsage(deviceUsage);
			if (result == null) result = caseDomainResource(deviceUsage);
			if (result == null) result = caseResource(deviceUsage);
			if (result == null) result = caseBase(deviceUsage);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.DEVICE_USAGE_ADHERENCE: {
			final DeviceUsageAdherence deviceUsageAdherence = (DeviceUsageAdherence)theEObject;
			T result = caseDeviceUsageAdherence(deviceUsageAdherence);
			if (result == null) result = caseBackboneElement(deviceUsageAdherence);
			if (result == null) result = caseElement(deviceUsageAdherence);
			if (result == null) result = caseBase(deviceUsageAdherence);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.DEVICE_USAGE_STATUS: {
			final DeviceUsageStatus deviceUsageStatus = (DeviceUsageStatus)theEObject;
			T result = caseDeviceUsageStatus(deviceUsageStatus);
			if (result == null) result = caseElement(deviceUsageStatus);
			if (result == null) result = caseBase(deviceUsageStatus);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.DEVICE_VERSION: {
			final DeviceVersion deviceVersion = (DeviceVersion)theEObject;
			T result = caseDeviceVersion(deviceVersion);
			if (result == null) result = caseBackboneElement(deviceVersion);
			if (result == null) result = caseElement(deviceVersion);
			if (result == null) result = caseBase(deviceVersion);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.DIAGNOSTIC_REPORT: {
			final DiagnosticReport diagnosticReport = (DiagnosticReport)theEObject;
			T result = caseDiagnosticReport(diagnosticReport);
			if (result == null) result = caseDomainResource(diagnosticReport);
			if (result == null) result = caseResource(diagnosticReport);
			if (result == null) result = caseBase(diagnosticReport);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.DIAGNOSTIC_REPORT_MEDIA: {
			final DiagnosticReportMedia diagnosticReportMedia = (DiagnosticReportMedia)theEObject;
			T result = caseDiagnosticReportMedia(diagnosticReportMedia);
			if (result == null) result = caseBackboneElement(diagnosticReportMedia);
			if (result == null) result = caseElement(diagnosticReportMedia);
			if (result == null) result = caseBase(diagnosticReportMedia);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.DIAGNOSTIC_REPORT_STATUS: {
			final DiagnosticReportStatus diagnosticReportStatus = (DiagnosticReportStatus)theEObject;
			T result = caseDiagnosticReportStatus(diagnosticReportStatus);
			if (result == null) result = caseElement(diagnosticReportStatus);
			if (result == null) result = caseBase(diagnosticReportStatus);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.DIAGNOSTIC_REPORT_SUPPORTING_INFO: {
			final DiagnosticReportSupportingInfo diagnosticReportSupportingInfo = (DiagnosticReportSupportingInfo)theEObject;
			T result = caseDiagnosticReportSupportingInfo(diagnosticReportSupportingInfo);
			if (result == null) result = caseBackboneElement(diagnosticReportSupportingInfo);
			if (result == null) result = caseElement(diagnosticReportSupportingInfo);
			if (result == null) result = caseBase(diagnosticReportSupportingInfo);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.DISCRIMINATOR_TYPE: {
			final DiscriminatorType discriminatorType = (DiscriminatorType)theEObject;
			T result = caseDiscriminatorType(discriminatorType);
			if (result == null) result = caseElement(discriminatorType);
			if (result == null) result = caseBase(discriminatorType);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.DISTANCE: {
			final Distance distance = (Distance)theEObject;
			T result = caseDistance(distance);
			if (result == null) result = caseQuantity(distance);
			if (result == null) result = caseDataType(distance);
			if (result == null) result = caseElement(distance);
			if (result == null) result = caseBase(distance);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.DOCUMENT_MODE: {
			final DocumentMode documentMode = (DocumentMode)theEObject;
			T result = caseDocumentMode(documentMode);
			if (result == null) result = caseElement(documentMode);
			if (result == null) result = caseBase(documentMode);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.DOCUMENT_REFERENCE: {
			final DocumentReference documentReference = (DocumentReference)theEObject;
			T result = caseDocumentReference(documentReference);
			if (result == null) result = caseDomainResource(documentReference);
			if (result == null) result = caseResource(documentReference);
			if (result == null) result = caseBase(documentReference);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.DOCUMENT_REFERENCE_ATTESTER: {
			final DocumentReferenceAttester documentReferenceAttester = (DocumentReferenceAttester)theEObject;
			T result = caseDocumentReferenceAttester(documentReferenceAttester);
			if (result == null) result = caseBackboneElement(documentReferenceAttester);
			if (result == null) result = caseElement(documentReferenceAttester);
			if (result == null) result = caseBase(documentReferenceAttester);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.DOCUMENT_REFERENCE_CONTENT: {
			final DocumentReferenceContent documentReferenceContent = (DocumentReferenceContent)theEObject;
			T result = caseDocumentReferenceContent(documentReferenceContent);
			if (result == null) result = caseBackboneElement(documentReferenceContent);
			if (result == null) result = caseElement(documentReferenceContent);
			if (result == null) result = caseBase(documentReferenceContent);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.DOCUMENT_REFERENCE_PROFILE: {
			final DocumentReferenceProfile documentReferenceProfile = (DocumentReferenceProfile)theEObject;
			T result = caseDocumentReferenceProfile(documentReferenceProfile);
			if (result == null) result = caseBackboneElement(documentReferenceProfile);
			if (result == null) result = caseElement(documentReferenceProfile);
			if (result == null) result = caseBase(documentReferenceProfile);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.DOCUMENT_REFERENCE_RELATES_TO: {
			final DocumentReferenceRelatesTo documentReferenceRelatesTo = (DocumentReferenceRelatesTo)theEObject;
			T result = caseDocumentReferenceRelatesTo(documentReferenceRelatesTo);
			if (result == null) result = caseBackboneElement(documentReferenceRelatesTo);
			if (result == null) result = caseElement(documentReferenceRelatesTo);
			if (result == null) result = caseBase(documentReferenceRelatesTo);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.DOCUMENT_REFERENCE_STATUS: {
			final DocumentReferenceStatus documentReferenceStatus = (DocumentReferenceStatus)theEObject;
			T result = caseDocumentReferenceStatus(documentReferenceStatus);
			if (result == null) result = caseElement(documentReferenceStatus);
			if (result == null) result = caseBase(documentReferenceStatus);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.DOCUMENT_ROOT: {
			final DocumentRoot documentRoot = (DocumentRoot)theEObject;
			T result = caseDocumentRoot(documentRoot);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.DOMAIN_RESOURCE: {
			final DomainResource domainResource = (DomainResource)theEObject;
			T result = caseDomainResource(domainResource);
			if (result == null) result = caseResource(domainResource);
			if (result == null) result = caseBase(domainResource);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.DOSAGE: {
			final Dosage dosage = (Dosage)theEObject;
			T result = caseDosage(dosage);
			if (result == null) result = caseBackboneType(dosage);
			if (result == null) result = caseDataType(dosage);
			if (result == null) result = caseElement(dosage);
			if (result == null) result = caseBase(dosage);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.DOSAGE_DOSE_AND_RATE: {
			final DosageDoseAndRate dosageDoseAndRate = (DosageDoseAndRate)theEObject;
			T result = caseDosageDoseAndRate(dosageDoseAndRate);
			if (result == null) result = caseBackboneType(dosageDoseAndRate);
			if (result == null) result = caseDataType(dosageDoseAndRate);
			if (result == null) result = caseElement(dosageDoseAndRate);
			if (result == null) result = caseBase(dosageDoseAndRate);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.DURATION: {
			final Duration duration = (Duration)theEObject;
			T result = caseDuration(duration);
			if (result == null) result = caseQuantity(duration);
			if (result == null) result = caseDataType(duration);
			if (result == null) result = caseElement(duration);
			if (result == null) result = caseBase(duration);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.ELEMENT: {
			final Element element = (Element)theEObject;
			T result = caseElement(element);
			if (result == null) result = caseBase(element);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.ELEMENT_DEFINITION: {
			final ElementDefinition elementDefinition = (ElementDefinition)theEObject;
			T result = caseElementDefinition(elementDefinition);
			if (result == null) result = caseBackboneType(elementDefinition);
			if (result == null) result = caseDataType(elementDefinition);
			if (result == null) result = caseElement(elementDefinition);
			if (result == null) result = caseBase(elementDefinition);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.ELEMENT_DEFINITION_ADDITIONAL: {
			final ElementDefinitionAdditional elementDefinitionAdditional = (ElementDefinitionAdditional)theEObject;
			T result = caseElementDefinitionAdditional(elementDefinitionAdditional);
			if (result == null) result = caseBackboneType(elementDefinitionAdditional);
			if (result == null) result = caseDataType(elementDefinitionAdditional);
			if (result == null) result = caseElement(elementDefinitionAdditional);
			if (result == null) result = caseBase(elementDefinitionAdditional);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.ELEMENT_DEFINITION_BASE: {
			final ElementDefinitionBase elementDefinitionBase = (ElementDefinitionBase)theEObject;
			T result = caseElementDefinitionBase(elementDefinitionBase);
			if (result == null) result = caseBackboneType(elementDefinitionBase);
			if (result == null) result = caseDataType(elementDefinitionBase);
			if (result == null) result = caseElement(elementDefinitionBase);
			if (result == null) result = caseBase(elementDefinitionBase);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.ELEMENT_DEFINITION_BINDING: {
			final ElementDefinitionBinding elementDefinitionBinding = (ElementDefinitionBinding)theEObject;
			T result = caseElementDefinitionBinding(elementDefinitionBinding);
			if (result == null) result = caseBackboneType(elementDefinitionBinding);
			if (result == null) result = caseDataType(elementDefinitionBinding);
			if (result == null) result = caseElement(elementDefinitionBinding);
			if (result == null) result = caseBase(elementDefinitionBinding);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.ELEMENT_DEFINITION_CONSTRAINT: {
			final ElementDefinitionConstraint elementDefinitionConstraint = (ElementDefinitionConstraint)theEObject;
			T result = caseElementDefinitionConstraint(elementDefinitionConstraint);
			if (result == null) result = caseBackboneType(elementDefinitionConstraint);
			if (result == null) result = caseDataType(elementDefinitionConstraint);
			if (result == null) result = caseElement(elementDefinitionConstraint);
			if (result == null) result = caseBase(elementDefinitionConstraint);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.ELEMENT_DEFINITION_DISCRIMINATOR: {
			final ElementDefinitionDiscriminator elementDefinitionDiscriminator = (ElementDefinitionDiscriminator)theEObject;
			T result = caseElementDefinitionDiscriminator(elementDefinitionDiscriminator);
			if (result == null) result = caseBackboneType(elementDefinitionDiscriminator);
			if (result == null) result = caseDataType(elementDefinitionDiscriminator);
			if (result == null) result = caseElement(elementDefinitionDiscriminator);
			if (result == null) result = caseBase(elementDefinitionDiscriminator);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.ELEMENT_DEFINITION_EXAMPLE: {
			final ElementDefinitionExample elementDefinitionExample = (ElementDefinitionExample)theEObject;
			T result = caseElementDefinitionExample(elementDefinitionExample);
			if (result == null) result = caseBackboneType(elementDefinitionExample);
			if (result == null) result = caseDataType(elementDefinitionExample);
			if (result == null) result = caseElement(elementDefinitionExample);
			if (result == null) result = caseBase(elementDefinitionExample);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.ELEMENT_DEFINITION_MAPPING: {
			final ElementDefinitionMapping elementDefinitionMapping = (ElementDefinitionMapping)theEObject;
			T result = caseElementDefinitionMapping(elementDefinitionMapping);
			if (result == null) result = caseBackboneType(elementDefinitionMapping);
			if (result == null) result = caseDataType(elementDefinitionMapping);
			if (result == null) result = caseElement(elementDefinitionMapping);
			if (result == null) result = caseBase(elementDefinitionMapping);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.ELEMENT_DEFINITION_SLICING: {
			final ElementDefinitionSlicing elementDefinitionSlicing = (ElementDefinitionSlicing)theEObject;
			T result = caseElementDefinitionSlicing(elementDefinitionSlicing);
			if (result == null) result = caseBackboneType(elementDefinitionSlicing);
			if (result == null) result = caseDataType(elementDefinitionSlicing);
			if (result == null) result = caseElement(elementDefinitionSlicing);
			if (result == null) result = caseBase(elementDefinitionSlicing);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.ELEMENT_DEFINITION_TYPE: {
			final ElementDefinitionType elementDefinitionType = (ElementDefinitionType)theEObject;
			T result = caseElementDefinitionType(elementDefinitionType);
			if (result == null) result = caseBackboneType(elementDefinitionType);
			if (result == null) result = caseDataType(elementDefinitionType);
			if (result == null) result = caseElement(elementDefinitionType);
			if (result == null) result = caseBase(elementDefinitionType);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.ELIGIBILITY_OUTCOME: {
			final EligibilityOutcome eligibilityOutcome = (EligibilityOutcome)theEObject;
			T result = caseEligibilityOutcome(eligibilityOutcome);
			if (result == null) result = caseElement(eligibilityOutcome);
			if (result == null) result = caseBase(eligibilityOutcome);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.ELIGIBILITY_REQUEST_PURPOSE: {
			final EligibilityRequestPurpose eligibilityRequestPurpose = (EligibilityRequestPurpose)theEObject;
			T result = caseEligibilityRequestPurpose(eligibilityRequestPurpose);
			if (result == null) result = caseElement(eligibilityRequestPurpose);
			if (result == null) result = caseBase(eligibilityRequestPurpose);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.ELIGIBILITY_RESPONSE_PURPOSE: {
			final EligibilityResponsePurpose eligibilityResponsePurpose = (EligibilityResponsePurpose)theEObject;
			T result = caseEligibilityResponsePurpose(eligibilityResponsePurpose);
			if (result == null) result = caseElement(eligibilityResponsePurpose);
			if (result == null) result = caseBase(eligibilityResponsePurpose);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.ENABLE_WHEN_BEHAVIOR: {
			final EnableWhenBehavior enableWhenBehavior = (EnableWhenBehavior)theEObject;
			T result = caseEnableWhenBehavior(enableWhenBehavior);
			if (result == null) result = caseElement(enableWhenBehavior);
			if (result == null) result = caseBase(enableWhenBehavior);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.ENCOUNTER: {
			final Encounter encounter = (Encounter)theEObject;
			T result = caseEncounter(encounter);
			if (result == null) result = caseDomainResource(encounter);
			if (result == null) result = caseResource(encounter);
			if (result == null) result = caseBase(encounter);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.ENCOUNTER_ADMISSION: {
			final EncounterAdmission encounterAdmission = (EncounterAdmission)theEObject;
			T result = caseEncounterAdmission(encounterAdmission);
			if (result == null) result = caseBackboneElement(encounterAdmission);
			if (result == null) result = caseElement(encounterAdmission);
			if (result == null) result = caseBase(encounterAdmission);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.ENCOUNTER_DIAGNOSIS: {
			final EncounterDiagnosis encounterDiagnosis = (EncounterDiagnosis)theEObject;
			T result = caseEncounterDiagnosis(encounterDiagnosis);
			if (result == null) result = caseBackboneElement(encounterDiagnosis);
			if (result == null) result = caseElement(encounterDiagnosis);
			if (result == null) result = caseBase(encounterDiagnosis);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.ENCOUNTER_HISTORY: {
			final EncounterHistory encounterHistory = (EncounterHistory)theEObject;
			T result = caseEncounterHistory(encounterHistory);
			if (result == null) result = caseDomainResource(encounterHistory);
			if (result == null) result = caseResource(encounterHistory);
			if (result == null) result = caseBase(encounterHistory);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.ENCOUNTER_HISTORY_LOCATION: {
			final EncounterHistoryLocation encounterHistoryLocation = (EncounterHistoryLocation)theEObject;
			T result = caseEncounterHistoryLocation(encounterHistoryLocation);
			if (result == null) result = caseBackboneElement(encounterHistoryLocation);
			if (result == null) result = caseElement(encounterHistoryLocation);
			if (result == null) result = caseBase(encounterHistoryLocation);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.ENCOUNTER_LOCATION: {
			final EncounterLocation encounterLocation = (EncounterLocation)theEObject;
			T result = caseEncounterLocation(encounterLocation);
			if (result == null) result = caseBackboneElement(encounterLocation);
			if (result == null) result = caseElement(encounterLocation);
			if (result == null) result = caseBase(encounterLocation);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.ENCOUNTER_LOCATION_STATUS: {
			final EncounterLocationStatus encounterLocationStatus = (EncounterLocationStatus)theEObject;
			T result = caseEncounterLocationStatus(encounterLocationStatus);
			if (result == null) result = caseElement(encounterLocationStatus);
			if (result == null) result = caseBase(encounterLocationStatus);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.ENCOUNTER_PARTICIPANT: {
			final EncounterParticipant encounterParticipant = (EncounterParticipant)theEObject;
			T result = caseEncounterParticipant(encounterParticipant);
			if (result == null) result = caseBackboneElement(encounterParticipant);
			if (result == null) result = caseElement(encounterParticipant);
			if (result == null) result = caseBase(encounterParticipant);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.ENCOUNTER_REASON: {
			final EncounterReason encounterReason = (EncounterReason)theEObject;
			T result = caseEncounterReason(encounterReason);
			if (result == null) result = caseBackboneElement(encounterReason);
			if (result == null) result = caseElement(encounterReason);
			if (result == null) result = caseBase(encounterReason);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.ENCOUNTER_STATUS: {
			final EncounterStatus encounterStatus = (EncounterStatus)theEObject;
			T result = caseEncounterStatus(encounterStatus);
			if (result == null) result = caseElement(encounterStatus);
			if (result == null) result = caseBase(encounterStatus);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.ENDPOINT: {
			final Endpoint endpoint = (Endpoint)theEObject;
			T result = caseEndpoint(endpoint);
			if (result == null) result = caseDomainResource(endpoint);
			if (result == null) result = caseResource(endpoint);
			if (result == null) result = caseBase(endpoint);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.ENDPOINT_PAYLOAD: {
			final EndpointPayload endpointPayload = (EndpointPayload)theEObject;
			T result = caseEndpointPayload(endpointPayload);
			if (result == null) result = caseBackboneElement(endpointPayload);
			if (result == null) result = caseElement(endpointPayload);
			if (result == null) result = caseBase(endpointPayload);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.ENDPOINT_STATUS: {
			final EndpointStatus endpointStatus = (EndpointStatus)theEObject;
			T result = caseEndpointStatus(endpointStatus);
			if (result == null) result = caseElement(endpointStatus);
			if (result == null) result = caseBase(endpointStatus);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.ENROLLMENT_OUTCOME: {
			final EnrollmentOutcome enrollmentOutcome = (EnrollmentOutcome)theEObject;
			T result = caseEnrollmentOutcome(enrollmentOutcome);
			if (result == null) result = caseElement(enrollmentOutcome);
			if (result == null) result = caseBase(enrollmentOutcome);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.ENROLLMENT_REQUEST: {
			final EnrollmentRequest enrollmentRequest = (EnrollmentRequest)theEObject;
			T result = caseEnrollmentRequest(enrollmentRequest);
			if (result == null) result = caseDomainResource(enrollmentRequest);
			if (result == null) result = caseResource(enrollmentRequest);
			if (result == null) result = caseBase(enrollmentRequest);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.ENROLLMENT_RESPONSE: {
			final EnrollmentResponse enrollmentResponse = (EnrollmentResponse)theEObject;
			T result = caseEnrollmentResponse(enrollmentResponse);
			if (result == null) result = caseDomainResource(enrollmentResponse);
			if (result == null) result = caseResource(enrollmentResponse);
			if (result == null) result = caseBase(enrollmentResponse);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.EPISODE_OF_CARE: {
			final EpisodeOfCare episodeOfCare = (EpisodeOfCare)theEObject;
			T result = caseEpisodeOfCare(episodeOfCare);
			if (result == null) result = caseDomainResource(episodeOfCare);
			if (result == null) result = caseResource(episodeOfCare);
			if (result == null) result = caseBase(episodeOfCare);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.EPISODE_OF_CARE_DIAGNOSIS: {
			final EpisodeOfCareDiagnosis episodeOfCareDiagnosis = (EpisodeOfCareDiagnosis)theEObject;
			T result = caseEpisodeOfCareDiagnosis(episodeOfCareDiagnosis);
			if (result == null) result = caseBackboneElement(episodeOfCareDiagnosis);
			if (result == null) result = caseElement(episodeOfCareDiagnosis);
			if (result == null) result = caseBase(episodeOfCareDiagnosis);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.EPISODE_OF_CARE_REASON: {
			final EpisodeOfCareReason episodeOfCareReason = (EpisodeOfCareReason)theEObject;
			T result = caseEpisodeOfCareReason(episodeOfCareReason);
			if (result == null) result = caseBackboneElement(episodeOfCareReason);
			if (result == null) result = caseElement(episodeOfCareReason);
			if (result == null) result = caseBase(episodeOfCareReason);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.EPISODE_OF_CARE_STATUS: {
			final EpisodeOfCareStatus episodeOfCareStatus = (EpisodeOfCareStatus)theEObject;
			T result = caseEpisodeOfCareStatus(episodeOfCareStatus);
			if (result == null) result = caseElement(episodeOfCareStatus);
			if (result == null) result = caseBase(episodeOfCareStatus);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.EPISODE_OF_CARE_STATUS_HISTORY: {
			final EpisodeOfCareStatusHistory episodeOfCareStatusHistory = (EpisodeOfCareStatusHistory)theEObject;
			T result = caseEpisodeOfCareStatusHistory(episodeOfCareStatusHistory);
			if (result == null) result = caseBackboneElement(episodeOfCareStatusHistory);
			if (result == null) result = caseElement(episodeOfCareStatusHistory);
			if (result == null) result = caseBase(episodeOfCareStatusHistory);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.EVENT_CAPABILITY_MODE: {
			final EventCapabilityMode eventCapabilityMode = (EventCapabilityMode)theEObject;
			T result = caseEventCapabilityMode(eventCapabilityMode);
			if (result == null) result = caseElement(eventCapabilityMode);
			if (result == null) result = caseBase(eventCapabilityMode);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.EVENT_DEFINITION: {
			final EventDefinition eventDefinition = (EventDefinition)theEObject;
			T result = caseEventDefinition(eventDefinition);
			if (result == null) result = caseMetadataResource(eventDefinition);
			if (result == null) result = caseCanonicalResource(eventDefinition);
			if (result == null) result = caseDomainResource(eventDefinition);
			if (result == null) result = caseResource(eventDefinition);
			if (result == null) result = caseBase(eventDefinition);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.EVENT_RESOURCE_TYPES: {
			final EventResourceTypes eventResourceTypes = (EventResourceTypes)theEObject;
			T result = caseEventResourceTypes(eventResourceTypes);
			if (result == null) result = caseElement(eventResourceTypes);
			if (result == null) result = caseBase(eventResourceTypes);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.EVENT_STATUS: {
			final EventStatus eventStatus = (EventStatus)theEObject;
			T result = caseEventStatus(eventStatus);
			if (result == null) result = caseElement(eventStatus);
			if (result == null) result = caseBase(eventStatus);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.EVENT_TIMING: {
			final EventTiming eventTiming = (EventTiming)theEObject;
			T result = caseEventTiming(eventTiming);
			if (result == null) result = caseElement(eventTiming);
			if (result == null) result = caseBase(eventTiming);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.EVIDENCE: {
			final Evidence evidence = (Evidence)theEObject;
			T result = caseEvidence(evidence);
			if (result == null) result = caseMetadataResource(evidence);
			if (result == null) result = caseCanonicalResource(evidence);
			if (result == null) result = caseDomainResource(evidence);
			if (result == null) result = caseResource(evidence);
			if (result == null) result = caseBase(evidence);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.EVIDENCE_ATTRIBUTE_ESTIMATE: {
			final EvidenceAttributeEstimate evidenceAttributeEstimate = (EvidenceAttributeEstimate)theEObject;
			T result = caseEvidenceAttributeEstimate(evidenceAttributeEstimate);
			if (result == null) result = caseBackboneElement(evidenceAttributeEstimate);
			if (result == null) result = caseElement(evidenceAttributeEstimate);
			if (result == null) result = caseBase(evidenceAttributeEstimate);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.EVIDENCE_CERTAINTY: {
			final EvidenceCertainty evidenceCertainty = (EvidenceCertainty)theEObject;
			T result = caseEvidenceCertainty(evidenceCertainty);
			if (result == null) result = caseBackboneElement(evidenceCertainty);
			if (result == null) result = caseElement(evidenceCertainty);
			if (result == null) result = caseBase(evidenceCertainty);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.EVIDENCE_MODEL_CHARACTERISTIC: {
			final EvidenceModelCharacteristic evidenceModelCharacteristic = (EvidenceModelCharacteristic)theEObject;
			T result = caseEvidenceModelCharacteristic(evidenceModelCharacteristic);
			if (result == null) result = caseBackboneElement(evidenceModelCharacteristic);
			if (result == null) result = caseElement(evidenceModelCharacteristic);
			if (result == null) result = caseBase(evidenceModelCharacteristic);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.EVIDENCE_REPORT: {
			final EvidenceReport evidenceReport = (EvidenceReport)theEObject;
			T result = caseEvidenceReport(evidenceReport);
			if (result == null) result = caseMetadataResource(evidenceReport);
			if (result == null) result = caseCanonicalResource(evidenceReport);
			if (result == null) result = caseDomainResource(evidenceReport);
			if (result == null) result = caseResource(evidenceReport);
			if (result == null) result = caseBase(evidenceReport);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.EVIDENCE_REPORT_CHARACTERISTIC: {
			final EvidenceReportCharacteristic evidenceReportCharacteristic = (EvidenceReportCharacteristic)theEObject;
			T result = caseEvidenceReportCharacteristic(evidenceReportCharacteristic);
			if (result == null) result = caseBackboneElement(evidenceReportCharacteristic);
			if (result == null) result = caseElement(evidenceReportCharacteristic);
			if (result == null) result = caseBase(evidenceReportCharacteristic);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.EVIDENCE_REPORT_RELATES_TO: {
			final EvidenceReportRelatesTo evidenceReportRelatesTo = (EvidenceReportRelatesTo)theEObject;
			T result = caseEvidenceReportRelatesTo(evidenceReportRelatesTo);
			if (result == null) result = caseBackboneElement(evidenceReportRelatesTo);
			if (result == null) result = caseElement(evidenceReportRelatesTo);
			if (result == null) result = caseBase(evidenceReportRelatesTo);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.EVIDENCE_REPORT_SECTION: {
			final EvidenceReportSection evidenceReportSection = (EvidenceReportSection)theEObject;
			T result = caseEvidenceReportSection(evidenceReportSection);
			if (result == null) result = caseBackboneElement(evidenceReportSection);
			if (result == null) result = caseElement(evidenceReportSection);
			if (result == null) result = caseBase(evidenceReportSection);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.EVIDENCE_REPORT_SUBJECT: {
			final EvidenceReportSubject evidenceReportSubject = (EvidenceReportSubject)theEObject;
			T result = caseEvidenceReportSubject(evidenceReportSubject);
			if (result == null) result = caseBackboneElement(evidenceReportSubject);
			if (result == null) result = caseElement(evidenceReportSubject);
			if (result == null) result = caseBase(evidenceReportSubject);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.EVIDENCE_REPORT_TARGET: {
			final EvidenceReportTarget evidenceReportTarget = (EvidenceReportTarget)theEObject;
			T result = caseEvidenceReportTarget(evidenceReportTarget);
			if (result == null) result = caseBackboneElement(evidenceReportTarget);
			if (result == null) result = caseElement(evidenceReportTarget);
			if (result == null) result = caseBase(evidenceReportTarget);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.EVIDENCE_SAMPLE_SIZE: {
			final EvidenceSampleSize evidenceSampleSize = (EvidenceSampleSize)theEObject;
			T result = caseEvidenceSampleSize(evidenceSampleSize);
			if (result == null) result = caseBackboneElement(evidenceSampleSize);
			if (result == null) result = caseElement(evidenceSampleSize);
			if (result == null) result = caseBase(evidenceSampleSize);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.EVIDENCE_STATISTIC: {
			final EvidenceStatistic evidenceStatistic = (EvidenceStatistic)theEObject;
			T result = caseEvidenceStatistic(evidenceStatistic);
			if (result == null) result = caseBackboneElement(evidenceStatistic);
			if (result == null) result = caseElement(evidenceStatistic);
			if (result == null) result = caseBase(evidenceStatistic);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.EVIDENCE_VARIABLE: {
			final EvidenceVariable evidenceVariable = (EvidenceVariable)theEObject;
			T result = caseEvidenceVariable(evidenceVariable);
			if (result == null) result = caseMetadataResource(evidenceVariable);
			if (result == null) result = caseCanonicalResource(evidenceVariable);
			if (result == null) result = caseDomainResource(evidenceVariable);
			if (result == null) result = caseResource(evidenceVariable);
			if (result == null) result = caseBase(evidenceVariable);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.EVIDENCE_VARIABLE1: {
			final EvidenceVariable1 evidenceVariable1 = (EvidenceVariable1)theEObject;
			T result = caseEvidenceVariable1(evidenceVariable1);
			if (result == null) result = caseBackboneElement(evidenceVariable1);
			if (result == null) result = caseElement(evidenceVariable1);
			if (result == null) result = caseBase(evidenceVariable1);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.EVIDENCE_VARIABLE_CATEGORY: {
			final EvidenceVariableCategory evidenceVariableCategory = (EvidenceVariableCategory)theEObject;
			T result = caseEvidenceVariableCategory(evidenceVariableCategory);
			if (result == null) result = caseBackboneElement(evidenceVariableCategory);
			if (result == null) result = caseElement(evidenceVariableCategory);
			if (result == null) result = caseBase(evidenceVariableCategory);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.EVIDENCE_VARIABLE_CHARACTERISTIC: {
			final EvidenceVariableCharacteristic evidenceVariableCharacteristic = (EvidenceVariableCharacteristic)theEObject;
			T result = caseEvidenceVariableCharacteristic(evidenceVariableCharacteristic);
			if (result == null) result = caseBackboneElement(evidenceVariableCharacteristic);
			if (result == null) result = caseElement(evidenceVariableCharacteristic);
			if (result == null) result = caseBase(evidenceVariableCharacteristic);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.EVIDENCE_VARIABLE_DEFINITION: {
			final EvidenceVariableDefinition evidenceVariableDefinition = (EvidenceVariableDefinition)theEObject;
			T result = caseEvidenceVariableDefinition(evidenceVariableDefinition);
			if (result == null) result = caseBackboneElement(evidenceVariableDefinition);
			if (result == null) result = caseElement(evidenceVariableDefinition);
			if (result == null) result = caseBase(evidenceVariableDefinition);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.EVIDENCE_VARIABLE_DEFINITION_BY_COMBINATION: {
			final EvidenceVariableDefinitionByCombination evidenceVariableDefinitionByCombination = (EvidenceVariableDefinitionByCombination)theEObject;
			T result = caseEvidenceVariableDefinitionByCombination(evidenceVariableDefinitionByCombination);
			if (result == null) result = caseBackboneElement(evidenceVariableDefinitionByCombination);
			if (result == null) result = caseElement(evidenceVariableDefinitionByCombination);
			if (result == null) result = caseBase(evidenceVariableDefinitionByCombination);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.EVIDENCE_VARIABLE_DEFINITION_BY_TYPE_AND_VALUE: {
			final EvidenceVariableDefinitionByTypeAndValue evidenceVariableDefinitionByTypeAndValue = (EvidenceVariableDefinitionByTypeAndValue)theEObject;
			T result = caseEvidenceVariableDefinitionByTypeAndValue(evidenceVariableDefinitionByTypeAndValue);
			if (result == null) result = caseBackboneElement(evidenceVariableDefinitionByTypeAndValue);
			if (result == null) result = caseElement(evidenceVariableDefinitionByTypeAndValue);
			if (result == null) result = caseBase(evidenceVariableDefinitionByTypeAndValue);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.EVIDENCE_VARIABLE_HANDLING: {
			final EvidenceVariableHandling evidenceVariableHandling = (EvidenceVariableHandling)theEObject;
			T result = caseEvidenceVariableHandling(evidenceVariableHandling);
			if (result == null) result = caseElement(evidenceVariableHandling);
			if (result == null) result = caseBase(evidenceVariableHandling);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.EVIDENCE_VARIABLE_TIME_FROM_EVENT: {
			final EvidenceVariableTimeFromEvent evidenceVariableTimeFromEvent = (EvidenceVariableTimeFromEvent)theEObject;
			T result = caseEvidenceVariableTimeFromEvent(evidenceVariableTimeFromEvent);
			if (result == null) result = caseBackboneElement(evidenceVariableTimeFromEvent);
			if (result == null) result = caseElement(evidenceVariableTimeFromEvent);
			if (result == null) result = caseBase(evidenceVariableTimeFromEvent);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.EXAMPLE_SCENARIO: {
			final ExampleScenario exampleScenario = (ExampleScenario)theEObject;
			T result = caseExampleScenario(exampleScenario);
			if (result == null) result = caseCanonicalResource(exampleScenario);
			if (result == null) result = caseDomainResource(exampleScenario);
			if (result == null) result = caseResource(exampleScenario);
			if (result == null) result = caseBase(exampleScenario);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.EXAMPLE_SCENARIO_ACTOR: {
			final ExampleScenarioActor exampleScenarioActor = (ExampleScenarioActor)theEObject;
			T result = caseExampleScenarioActor(exampleScenarioActor);
			if (result == null) result = caseBackboneElement(exampleScenarioActor);
			if (result == null) result = caseElement(exampleScenarioActor);
			if (result == null) result = caseBase(exampleScenarioActor);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.EXAMPLE_SCENARIO_ACTOR_TYPE: {
			final ExampleScenarioActorType exampleScenarioActorType = (ExampleScenarioActorType)theEObject;
			T result = caseExampleScenarioActorType(exampleScenarioActorType);
			if (result == null) result = caseElement(exampleScenarioActorType);
			if (result == null) result = caseBase(exampleScenarioActorType);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.EXAMPLE_SCENARIO_ALTERNATIVE: {
			final ExampleScenarioAlternative exampleScenarioAlternative = (ExampleScenarioAlternative)theEObject;
			T result = caseExampleScenarioAlternative(exampleScenarioAlternative);
			if (result == null) result = caseBackboneElement(exampleScenarioAlternative);
			if (result == null) result = caseElement(exampleScenarioAlternative);
			if (result == null) result = caseBase(exampleScenarioAlternative);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.EXAMPLE_SCENARIO_CONTAINED_INSTANCE: {
			final ExampleScenarioContainedInstance exampleScenarioContainedInstance = (ExampleScenarioContainedInstance)theEObject;
			T result = caseExampleScenarioContainedInstance(exampleScenarioContainedInstance);
			if (result == null) result = caseBackboneElement(exampleScenarioContainedInstance);
			if (result == null) result = caseElement(exampleScenarioContainedInstance);
			if (result == null) result = caseBase(exampleScenarioContainedInstance);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.EXAMPLE_SCENARIO_INSTANCE: {
			final ExampleScenarioInstance exampleScenarioInstance = (ExampleScenarioInstance)theEObject;
			T result = caseExampleScenarioInstance(exampleScenarioInstance);
			if (result == null) result = caseBackboneElement(exampleScenarioInstance);
			if (result == null) result = caseElement(exampleScenarioInstance);
			if (result == null) result = caseBase(exampleScenarioInstance);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.EXAMPLE_SCENARIO_OPERATION: {
			final ExampleScenarioOperation exampleScenarioOperation = (ExampleScenarioOperation)theEObject;
			T result = caseExampleScenarioOperation(exampleScenarioOperation);
			if (result == null) result = caseBackboneElement(exampleScenarioOperation);
			if (result == null) result = caseElement(exampleScenarioOperation);
			if (result == null) result = caseBase(exampleScenarioOperation);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.EXAMPLE_SCENARIO_PROCESS: {
			final ExampleScenarioProcess exampleScenarioProcess = (ExampleScenarioProcess)theEObject;
			T result = caseExampleScenarioProcess(exampleScenarioProcess);
			if (result == null) result = caseBackboneElement(exampleScenarioProcess);
			if (result == null) result = caseElement(exampleScenarioProcess);
			if (result == null) result = caseBase(exampleScenarioProcess);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.EXAMPLE_SCENARIO_STEP: {
			final ExampleScenarioStep exampleScenarioStep = (ExampleScenarioStep)theEObject;
			T result = caseExampleScenarioStep(exampleScenarioStep);
			if (result == null) result = caseBackboneElement(exampleScenarioStep);
			if (result == null) result = caseElement(exampleScenarioStep);
			if (result == null) result = caseBase(exampleScenarioStep);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.EXAMPLE_SCENARIO_VERSION: {
			final ExampleScenarioVersion exampleScenarioVersion = (ExampleScenarioVersion)theEObject;
			T result = caseExampleScenarioVersion(exampleScenarioVersion);
			if (result == null) result = caseBackboneElement(exampleScenarioVersion);
			if (result == null) result = caseElement(exampleScenarioVersion);
			if (result == null) result = caseBase(exampleScenarioVersion);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.EXPLANATION_OF_BENEFIT: {
			final ExplanationOfBenefit explanationOfBenefit = (ExplanationOfBenefit)theEObject;
			T result = caseExplanationOfBenefit(explanationOfBenefit);
			if (result == null) result = caseDomainResource(explanationOfBenefit);
			if (result == null) result = caseResource(explanationOfBenefit);
			if (result == null) result = caseBase(explanationOfBenefit);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.EXPLANATION_OF_BENEFIT_ACCIDENT: {
			final ExplanationOfBenefitAccident explanationOfBenefitAccident = (ExplanationOfBenefitAccident)theEObject;
			T result = caseExplanationOfBenefitAccident(explanationOfBenefitAccident);
			if (result == null) result = caseBackboneElement(explanationOfBenefitAccident);
			if (result == null) result = caseElement(explanationOfBenefitAccident);
			if (result == null) result = caseBase(explanationOfBenefitAccident);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.EXPLANATION_OF_BENEFIT_ADD_ITEM: {
			final ExplanationOfBenefitAddItem explanationOfBenefitAddItem = (ExplanationOfBenefitAddItem)theEObject;
			T result = caseExplanationOfBenefitAddItem(explanationOfBenefitAddItem);
			if (result == null) result = caseBackboneElement(explanationOfBenefitAddItem);
			if (result == null) result = caseElement(explanationOfBenefitAddItem);
			if (result == null) result = caseBase(explanationOfBenefitAddItem);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.EXPLANATION_OF_BENEFIT_ADJUDICATION: {
			final ExplanationOfBenefitAdjudication explanationOfBenefitAdjudication = (ExplanationOfBenefitAdjudication)theEObject;
			T result = caseExplanationOfBenefitAdjudication(explanationOfBenefitAdjudication);
			if (result == null) result = caseBackboneElement(explanationOfBenefitAdjudication);
			if (result == null) result = caseElement(explanationOfBenefitAdjudication);
			if (result == null) result = caseBase(explanationOfBenefitAdjudication);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.EXPLANATION_OF_BENEFIT_BENEFIT_BALANCE: {
			final ExplanationOfBenefitBenefitBalance explanationOfBenefitBenefitBalance = (ExplanationOfBenefitBenefitBalance)theEObject;
			T result = caseExplanationOfBenefitBenefitBalance(explanationOfBenefitBenefitBalance);
			if (result == null) result = caseBackboneElement(explanationOfBenefitBenefitBalance);
			if (result == null) result = caseElement(explanationOfBenefitBenefitBalance);
			if (result == null) result = caseBase(explanationOfBenefitBenefitBalance);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.EXPLANATION_OF_BENEFIT_BODY_SITE: {
			final ExplanationOfBenefitBodySite explanationOfBenefitBodySite = (ExplanationOfBenefitBodySite)theEObject;
			T result = caseExplanationOfBenefitBodySite(explanationOfBenefitBodySite);
			if (result == null) result = caseBackboneElement(explanationOfBenefitBodySite);
			if (result == null) result = caseElement(explanationOfBenefitBodySite);
			if (result == null) result = caseBase(explanationOfBenefitBodySite);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.EXPLANATION_OF_BENEFIT_BODY_SITE1: {
			final ExplanationOfBenefitBodySite1 explanationOfBenefitBodySite1 = (ExplanationOfBenefitBodySite1)theEObject;
			T result = caseExplanationOfBenefitBodySite1(explanationOfBenefitBodySite1);
			if (result == null) result = caseBackboneElement(explanationOfBenefitBodySite1);
			if (result == null) result = caseElement(explanationOfBenefitBodySite1);
			if (result == null) result = caseBase(explanationOfBenefitBodySite1);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.EXPLANATION_OF_BENEFIT_CARE_TEAM: {
			final ExplanationOfBenefitCareTeam explanationOfBenefitCareTeam = (ExplanationOfBenefitCareTeam)theEObject;
			T result = caseExplanationOfBenefitCareTeam(explanationOfBenefitCareTeam);
			if (result == null) result = caseBackboneElement(explanationOfBenefitCareTeam);
			if (result == null) result = caseElement(explanationOfBenefitCareTeam);
			if (result == null) result = caseBase(explanationOfBenefitCareTeam);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.EXPLANATION_OF_BENEFIT_DETAIL: {
			final ExplanationOfBenefitDetail explanationOfBenefitDetail = (ExplanationOfBenefitDetail)theEObject;
			T result = caseExplanationOfBenefitDetail(explanationOfBenefitDetail);
			if (result == null) result = caseBackboneElement(explanationOfBenefitDetail);
			if (result == null) result = caseElement(explanationOfBenefitDetail);
			if (result == null) result = caseBase(explanationOfBenefitDetail);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.EXPLANATION_OF_BENEFIT_DETAIL1: {
			final ExplanationOfBenefitDetail1 explanationOfBenefitDetail1 = (ExplanationOfBenefitDetail1)theEObject;
			T result = caseExplanationOfBenefitDetail1(explanationOfBenefitDetail1);
			if (result == null) result = caseBackboneElement(explanationOfBenefitDetail1);
			if (result == null) result = caseElement(explanationOfBenefitDetail1);
			if (result == null) result = caseBase(explanationOfBenefitDetail1);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.EXPLANATION_OF_BENEFIT_DIAGNOSIS: {
			final ExplanationOfBenefitDiagnosis explanationOfBenefitDiagnosis = (ExplanationOfBenefitDiagnosis)theEObject;
			T result = caseExplanationOfBenefitDiagnosis(explanationOfBenefitDiagnosis);
			if (result == null) result = caseBackboneElement(explanationOfBenefitDiagnosis);
			if (result == null) result = caseElement(explanationOfBenefitDiagnosis);
			if (result == null) result = caseBase(explanationOfBenefitDiagnosis);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.EXPLANATION_OF_BENEFIT_EVENT: {
			final ExplanationOfBenefitEvent explanationOfBenefitEvent = (ExplanationOfBenefitEvent)theEObject;
			T result = caseExplanationOfBenefitEvent(explanationOfBenefitEvent);
			if (result == null) result = caseBackboneElement(explanationOfBenefitEvent);
			if (result == null) result = caseElement(explanationOfBenefitEvent);
			if (result == null) result = caseBase(explanationOfBenefitEvent);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.EXPLANATION_OF_BENEFIT_FINANCIAL: {
			final ExplanationOfBenefitFinancial explanationOfBenefitFinancial = (ExplanationOfBenefitFinancial)theEObject;
			T result = caseExplanationOfBenefitFinancial(explanationOfBenefitFinancial);
			if (result == null) result = caseBackboneElement(explanationOfBenefitFinancial);
			if (result == null) result = caseElement(explanationOfBenefitFinancial);
			if (result == null) result = caseBase(explanationOfBenefitFinancial);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.EXPLANATION_OF_BENEFIT_INSURANCE: {
			final ExplanationOfBenefitInsurance explanationOfBenefitInsurance = (ExplanationOfBenefitInsurance)theEObject;
			T result = caseExplanationOfBenefitInsurance(explanationOfBenefitInsurance);
			if (result == null) result = caseBackboneElement(explanationOfBenefitInsurance);
			if (result == null) result = caseElement(explanationOfBenefitInsurance);
			if (result == null) result = caseBase(explanationOfBenefitInsurance);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.EXPLANATION_OF_BENEFIT_ITEM: {
			final ExplanationOfBenefitItem explanationOfBenefitItem = (ExplanationOfBenefitItem)theEObject;
			T result = caseExplanationOfBenefitItem(explanationOfBenefitItem);
			if (result == null) result = caseBackboneElement(explanationOfBenefitItem);
			if (result == null) result = caseElement(explanationOfBenefitItem);
			if (result == null) result = caseBase(explanationOfBenefitItem);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.EXPLANATION_OF_BENEFIT_PAYEE: {
			final ExplanationOfBenefitPayee explanationOfBenefitPayee = (ExplanationOfBenefitPayee)theEObject;
			T result = caseExplanationOfBenefitPayee(explanationOfBenefitPayee);
			if (result == null) result = caseBackboneElement(explanationOfBenefitPayee);
			if (result == null) result = caseElement(explanationOfBenefitPayee);
			if (result == null) result = caseBase(explanationOfBenefitPayee);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.EXPLANATION_OF_BENEFIT_PAYMENT: {
			final ExplanationOfBenefitPayment explanationOfBenefitPayment = (ExplanationOfBenefitPayment)theEObject;
			T result = caseExplanationOfBenefitPayment(explanationOfBenefitPayment);
			if (result == null) result = caseBackboneElement(explanationOfBenefitPayment);
			if (result == null) result = caseElement(explanationOfBenefitPayment);
			if (result == null) result = caseBase(explanationOfBenefitPayment);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.EXPLANATION_OF_BENEFIT_PROCEDURE: {
			final ExplanationOfBenefitProcedure explanationOfBenefitProcedure = (ExplanationOfBenefitProcedure)theEObject;
			T result = caseExplanationOfBenefitProcedure(explanationOfBenefitProcedure);
			if (result == null) result = caseBackboneElement(explanationOfBenefitProcedure);
			if (result == null) result = caseElement(explanationOfBenefitProcedure);
			if (result == null) result = caseBase(explanationOfBenefitProcedure);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.EXPLANATION_OF_BENEFIT_PROCESS_NOTE: {
			final ExplanationOfBenefitProcessNote explanationOfBenefitProcessNote = (ExplanationOfBenefitProcessNote)theEObject;
			T result = caseExplanationOfBenefitProcessNote(explanationOfBenefitProcessNote);
			if (result == null) result = caseBackboneElement(explanationOfBenefitProcessNote);
			if (result == null) result = caseElement(explanationOfBenefitProcessNote);
			if (result == null) result = caseBase(explanationOfBenefitProcessNote);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.EXPLANATION_OF_BENEFIT_RELATED: {
			final ExplanationOfBenefitRelated explanationOfBenefitRelated = (ExplanationOfBenefitRelated)theEObject;
			T result = caseExplanationOfBenefitRelated(explanationOfBenefitRelated);
			if (result == null) result = caseBackboneElement(explanationOfBenefitRelated);
			if (result == null) result = caseElement(explanationOfBenefitRelated);
			if (result == null) result = caseBase(explanationOfBenefitRelated);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.EXPLANATION_OF_BENEFIT_REVIEW_OUTCOME: {
			final ExplanationOfBenefitReviewOutcome explanationOfBenefitReviewOutcome = (ExplanationOfBenefitReviewOutcome)theEObject;
			T result = caseExplanationOfBenefitReviewOutcome(explanationOfBenefitReviewOutcome);
			if (result == null) result = caseBackboneElement(explanationOfBenefitReviewOutcome);
			if (result == null) result = caseElement(explanationOfBenefitReviewOutcome);
			if (result == null) result = caseBase(explanationOfBenefitReviewOutcome);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.EXPLANATION_OF_BENEFIT_STATUS: {
			final ExplanationOfBenefitStatus explanationOfBenefitStatus = (ExplanationOfBenefitStatus)theEObject;
			T result = caseExplanationOfBenefitStatus(explanationOfBenefitStatus);
			if (result == null) result = caseElement(explanationOfBenefitStatus);
			if (result == null) result = caseBase(explanationOfBenefitStatus);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.EXPLANATION_OF_BENEFIT_SUB_DETAIL: {
			final ExplanationOfBenefitSubDetail explanationOfBenefitSubDetail = (ExplanationOfBenefitSubDetail)theEObject;
			T result = caseExplanationOfBenefitSubDetail(explanationOfBenefitSubDetail);
			if (result == null) result = caseBackboneElement(explanationOfBenefitSubDetail);
			if (result == null) result = caseElement(explanationOfBenefitSubDetail);
			if (result == null) result = caseBase(explanationOfBenefitSubDetail);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.EXPLANATION_OF_BENEFIT_SUB_DETAIL1: {
			final ExplanationOfBenefitSubDetail1 explanationOfBenefitSubDetail1 = (ExplanationOfBenefitSubDetail1)theEObject;
			T result = caseExplanationOfBenefitSubDetail1(explanationOfBenefitSubDetail1);
			if (result == null) result = caseBackboneElement(explanationOfBenefitSubDetail1);
			if (result == null) result = caseElement(explanationOfBenefitSubDetail1);
			if (result == null) result = caseBase(explanationOfBenefitSubDetail1);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.EXPLANATION_OF_BENEFIT_SUPPORTING_INFO: {
			final ExplanationOfBenefitSupportingInfo explanationOfBenefitSupportingInfo = (ExplanationOfBenefitSupportingInfo)theEObject;
			T result = caseExplanationOfBenefitSupportingInfo(explanationOfBenefitSupportingInfo);
			if (result == null) result = caseBackboneElement(explanationOfBenefitSupportingInfo);
			if (result == null) result = caseElement(explanationOfBenefitSupportingInfo);
			if (result == null) result = caseBase(explanationOfBenefitSupportingInfo);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.EXPLANATION_OF_BENEFIT_TOTAL: {
			final ExplanationOfBenefitTotal explanationOfBenefitTotal = (ExplanationOfBenefitTotal)theEObject;
			T result = caseExplanationOfBenefitTotal(explanationOfBenefitTotal);
			if (result == null) result = caseBackboneElement(explanationOfBenefitTotal);
			if (result == null) result = caseElement(explanationOfBenefitTotal);
			if (result == null) result = caseBase(explanationOfBenefitTotal);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.EXPRESSION: {
			final Expression expression = (Expression)theEObject;
			T result = caseExpression(expression);
			if (result == null) result = caseDataType(expression);
			if (result == null) result = caseElement(expression);
			if (result == null) result = caseBase(expression);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.EXTENDED_CONTACT_DETAIL: {
			final ExtendedContactDetail extendedContactDetail = (ExtendedContactDetail)theEObject;
			T result = caseExtendedContactDetail(extendedContactDetail);
			if (result == null) result = caseDataType(extendedContactDetail);
			if (result == null) result = caseElement(extendedContactDetail);
			if (result == null) result = caseBase(extendedContactDetail);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.EXTENSION: {
			final Extension extension = (Extension)theEObject;
			T result = caseExtension(extension);
			if (result == null) result = caseDataType(extension);
			if (result == null) result = caseElement(extension);
			if (result == null) result = caseBase(extension);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.EXTENSION_CONTEXT_TYPE: {
			final ExtensionContextType extensionContextType = (ExtensionContextType)theEObject;
			T result = caseExtensionContextType(extensionContextType);
			if (result == null) result = caseElement(extensionContextType);
			if (result == null) result = caseBase(extensionContextType);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.FAMILY_HISTORY_STATUS: {
			final FamilyHistoryStatus familyHistoryStatus = (FamilyHistoryStatus)theEObject;
			T result = caseFamilyHistoryStatus(familyHistoryStatus);
			if (result == null) result = caseElement(familyHistoryStatus);
			if (result == null) result = caseBase(familyHistoryStatus);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.FAMILY_MEMBER_HISTORY: {
			final FamilyMemberHistory familyMemberHistory = (FamilyMemberHistory)theEObject;
			T result = caseFamilyMemberHistory(familyMemberHistory);
			if (result == null) result = caseDomainResource(familyMemberHistory);
			if (result == null) result = caseResource(familyMemberHistory);
			if (result == null) result = caseBase(familyMemberHistory);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.FAMILY_MEMBER_HISTORY_CONDITION: {
			final FamilyMemberHistoryCondition familyMemberHistoryCondition = (FamilyMemberHistoryCondition)theEObject;
			T result = caseFamilyMemberHistoryCondition(familyMemberHistoryCondition);
			if (result == null) result = caseBackboneElement(familyMemberHistoryCondition);
			if (result == null) result = caseElement(familyMemberHistoryCondition);
			if (result == null) result = caseBase(familyMemberHistoryCondition);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.FAMILY_MEMBER_HISTORY_PARTICIPANT: {
			final FamilyMemberHistoryParticipant familyMemberHistoryParticipant = (FamilyMemberHistoryParticipant)theEObject;
			T result = caseFamilyMemberHistoryParticipant(familyMemberHistoryParticipant);
			if (result == null) result = caseBackboneElement(familyMemberHistoryParticipant);
			if (result == null) result = caseElement(familyMemberHistoryParticipant);
			if (result == null) result = caseBase(familyMemberHistoryParticipant);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.FAMILY_MEMBER_HISTORY_PROCEDURE: {
			final FamilyMemberHistoryProcedure familyMemberHistoryProcedure = (FamilyMemberHistoryProcedure)theEObject;
			T result = caseFamilyMemberHistoryProcedure(familyMemberHistoryProcedure);
			if (result == null) result = caseBackboneElement(familyMemberHistoryProcedure);
			if (result == null) result = caseElement(familyMemberHistoryProcedure);
			if (result == null) result = caseBase(familyMemberHistoryProcedure);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.FHIR_DEVICE_STATUS: {
			final FHIRDeviceStatus fhirDeviceStatus = (FHIRDeviceStatus)theEObject;
			T result = caseFHIRDeviceStatus(fhirDeviceStatus);
			if (result == null) result = caseElement(fhirDeviceStatus);
			if (result == null) result = caseBase(fhirDeviceStatus);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.FHIR_PATH_TYPES: {
			final FHIRPathTypes fhirPathTypes = (FHIRPathTypes)theEObject;
			T result = caseFHIRPathTypes(fhirPathTypes);
			if (result == null) result = caseElement(fhirPathTypes);
			if (result == null) result = caseBase(fhirPathTypes);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.FHIR_SUBSTANCE_STATUS: {
			final FHIRSubstanceStatus fhirSubstanceStatus = (FHIRSubstanceStatus)theEObject;
			T result = caseFHIRSubstanceStatus(fhirSubstanceStatus);
			if (result == null) result = caseElement(fhirSubstanceStatus);
			if (result == null) result = caseBase(fhirSubstanceStatus);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.FHIR_TYPES: {
			final FHIRTypes fhirTypes = (FHIRTypes)theEObject;
			T result = caseFHIRTypes(fhirTypes);
			if (result == null) result = caseElement(fhirTypes);
			if (result == null) result = caseBase(fhirTypes);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.FHIR_VERSION: {
			final FHIRVersion fhirVersion = (FHIRVersion)theEObject;
			T result = caseFHIRVersion(fhirVersion);
			if (result == null) result = caseElement(fhirVersion);
			if (result == null) result = caseBase(fhirVersion);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.FILTER_OPERATOR: {
			final FilterOperator filterOperator = (FilterOperator)theEObject;
			T result = caseFilterOperator(filterOperator);
			if (result == null) result = caseElement(filterOperator);
			if (result == null) result = caseBase(filterOperator);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.FINANCIAL_RESOURCE_STATUS_CODES: {
			final FinancialResourceStatusCodes financialResourceStatusCodes = (FinancialResourceStatusCodes)theEObject;
			T result = caseFinancialResourceStatusCodes(financialResourceStatusCodes);
			if (result == null) result = caseElement(financialResourceStatusCodes);
			if (result == null) result = caseBase(financialResourceStatusCodes);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.FLAG: {
			final Flag flag = (Flag)theEObject;
			T result = caseFlag(flag);
			if (result == null) result = caseDomainResource(flag);
			if (result == null) result = caseResource(flag);
			if (result == null) result = caseBase(flag);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.FLAG_STATUS: {
			final FlagStatus flagStatus = (FlagStatus)theEObject;
			T result = caseFlagStatus(flagStatus);
			if (result == null) result = caseElement(flagStatus);
			if (result == null) result = caseBase(flagStatus);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.FORMULARY_ITEM: {
			final FormularyItem formularyItem = (FormularyItem)theEObject;
			T result = caseFormularyItem(formularyItem);
			if (result == null) result = caseDomainResource(formularyItem);
			if (result == null) result = caseResource(formularyItem);
			if (result == null) result = caseBase(formularyItem);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.FORMULARY_ITEM_STATUS_CODES: {
			final FormularyItemStatusCodes formularyItemStatusCodes = (FormularyItemStatusCodes)theEObject;
			T result = caseFormularyItemStatusCodes(formularyItemStatusCodes);
			if (result == null) result = caseElement(formularyItemStatusCodes);
			if (result == null) result = caseBase(formularyItemStatusCodes);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.GENOMIC_STUDY: {
			final GenomicStudy genomicStudy = (GenomicStudy)theEObject;
			T result = caseGenomicStudy(genomicStudy);
			if (result == null) result = caseDomainResource(genomicStudy);
			if (result == null) result = caseResource(genomicStudy);
			if (result == null) result = caseBase(genomicStudy);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.GENOMIC_STUDY_ANALYSIS: {
			final GenomicStudyAnalysis genomicStudyAnalysis = (GenomicStudyAnalysis)theEObject;
			T result = caseGenomicStudyAnalysis(genomicStudyAnalysis);
			if (result == null) result = caseBackboneElement(genomicStudyAnalysis);
			if (result == null) result = caseElement(genomicStudyAnalysis);
			if (result == null) result = caseBase(genomicStudyAnalysis);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.GENOMIC_STUDY_DEVICE: {
			final GenomicStudyDevice genomicStudyDevice = (GenomicStudyDevice)theEObject;
			T result = caseGenomicStudyDevice(genomicStudyDevice);
			if (result == null) result = caseBackboneElement(genomicStudyDevice);
			if (result == null) result = caseElement(genomicStudyDevice);
			if (result == null) result = caseBase(genomicStudyDevice);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.GENOMIC_STUDY_INPUT: {
			final GenomicStudyInput genomicStudyInput = (GenomicStudyInput)theEObject;
			T result = caseGenomicStudyInput(genomicStudyInput);
			if (result == null) result = caseBackboneElement(genomicStudyInput);
			if (result == null) result = caseElement(genomicStudyInput);
			if (result == null) result = caseBase(genomicStudyInput);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.GENOMIC_STUDY_OUTPUT: {
			final GenomicStudyOutput genomicStudyOutput = (GenomicStudyOutput)theEObject;
			T result = caseGenomicStudyOutput(genomicStudyOutput);
			if (result == null) result = caseBackboneElement(genomicStudyOutput);
			if (result == null) result = caseElement(genomicStudyOutput);
			if (result == null) result = caseBase(genomicStudyOutput);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.GENOMIC_STUDY_PERFORMER: {
			final GenomicStudyPerformer genomicStudyPerformer = (GenomicStudyPerformer)theEObject;
			T result = caseGenomicStudyPerformer(genomicStudyPerformer);
			if (result == null) result = caseBackboneElement(genomicStudyPerformer);
			if (result == null) result = caseElement(genomicStudyPerformer);
			if (result == null) result = caseBase(genomicStudyPerformer);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.GENOMIC_STUDY_STATUS: {
			final GenomicStudyStatus genomicStudyStatus = (GenomicStudyStatus)theEObject;
			T result = caseGenomicStudyStatus(genomicStudyStatus);
			if (result == null) result = caseElement(genomicStudyStatus);
			if (result == null) result = caseBase(genomicStudyStatus);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.GOAL: {
			final Goal goal = (Goal)theEObject;
			T result = caseGoal(goal);
			if (result == null) result = caseDomainResource(goal);
			if (result == null) result = caseResource(goal);
			if (result == null) result = caseBase(goal);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.GOAL_LIFECYCLE_STATUS: {
			final GoalLifecycleStatus goalLifecycleStatus = (GoalLifecycleStatus)theEObject;
			T result = caseGoalLifecycleStatus(goalLifecycleStatus);
			if (result == null) result = caseElement(goalLifecycleStatus);
			if (result == null) result = caseBase(goalLifecycleStatus);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.GOAL_TARGET: {
			final GoalTarget goalTarget = (GoalTarget)theEObject;
			T result = caseGoalTarget(goalTarget);
			if (result == null) result = caseBackboneElement(goalTarget);
			if (result == null) result = caseElement(goalTarget);
			if (result == null) result = caseBase(goalTarget);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.GRAPH_COMPARTMENT_RULE: {
			final GraphCompartmentRule graphCompartmentRule = (GraphCompartmentRule)theEObject;
			T result = caseGraphCompartmentRule(graphCompartmentRule);
			if (result == null) result = caseElement(graphCompartmentRule);
			if (result == null) result = caseBase(graphCompartmentRule);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.GRAPH_COMPARTMENT_USE: {
			final GraphCompartmentUse graphCompartmentUse = (GraphCompartmentUse)theEObject;
			T result = caseGraphCompartmentUse(graphCompartmentUse);
			if (result == null) result = caseElement(graphCompartmentUse);
			if (result == null) result = caseBase(graphCompartmentUse);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.GRAPH_DEFINITION: {
			final GraphDefinition graphDefinition = (GraphDefinition)theEObject;
			T result = caseGraphDefinition(graphDefinition);
			if (result == null) result = caseCanonicalResource(graphDefinition);
			if (result == null) result = caseDomainResource(graphDefinition);
			if (result == null) result = caseResource(graphDefinition);
			if (result == null) result = caseBase(graphDefinition);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.GRAPH_DEFINITION_COMPARTMENT: {
			final GraphDefinitionCompartment graphDefinitionCompartment = (GraphDefinitionCompartment)theEObject;
			T result = caseGraphDefinitionCompartment(graphDefinitionCompartment);
			if (result == null) result = caseBackboneElement(graphDefinitionCompartment);
			if (result == null) result = caseElement(graphDefinitionCompartment);
			if (result == null) result = caseBase(graphDefinitionCompartment);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.GRAPH_DEFINITION_LINK: {
			final GraphDefinitionLink graphDefinitionLink = (GraphDefinitionLink)theEObject;
			T result = caseGraphDefinitionLink(graphDefinitionLink);
			if (result == null) result = caseBackboneElement(graphDefinitionLink);
			if (result == null) result = caseElement(graphDefinitionLink);
			if (result == null) result = caseBase(graphDefinitionLink);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.GRAPH_DEFINITION_NODE: {
			final GraphDefinitionNode graphDefinitionNode = (GraphDefinitionNode)theEObject;
			T result = caseGraphDefinitionNode(graphDefinitionNode);
			if (result == null) result = caseBackboneElement(graphDefinitionNode);
			if (result == null) result = caseElement(graphDefinitionNode);
			if (result == null) result = caseBase(graphDefinitionNode);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.GROUP: {
			final Group group = (Group)theEObject;
			T result = caseGroup(group);
			if (result == null) result = caseDomainResource(group);
			if (result == null) result = caseResource(group);
			if (result == null) result = caseBase(group);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.GROUP_CHARACTERISTIC: {
			final GroupCharacteristic groupCharacteristic = (GroupCharacteristic)theEObject;
			T result = caseGroupCharacteristic(groupCharacteristic);
			if (result == null) result = caseBackboneElement(groupCharacteristic);
			if (result == null) result = caseElement(groupCharacteristic);
			if (result == null) result = caseBase(groupCharacteristic);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.GROUP_MEMBER: {
			final GroupMember groupMember = (GroupMember)theEObject;
			T result = caseGroupMember(groupMember);
			if (result == null) result = caseBackboneElement(groupMember);
			if (result == null) result = caseElement(groupMember);
			if (result == null) result = caseBase(groupMember);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.GROUP_MEMBERSHIP_BASIS: {
			final GroupMembershipBasis groupMembershipBasis = (GroupMembershipBasis)theEObject;
			T result = caseGroupMembershipBasis(groupMembershipBasis);
			if (result == null) result = caseElement(groupMembershipBasis);
			if (result == null) result = caseBase(groupMembershipBasis);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.GROUP_TYPE: {
			final GroupType groupType = (GroupType)theEObject;
			T result = caseGroupType(groupType);
			if (result == null) result = caseElement(groupType);
			if (result == null) result = caseBase(groupType);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.GUIDANCE_RESPONSE: {
			final GuidanceResponse guidanceResponse = (GuidanceResponse)theEObject;
			T result = caseGuidanceResponse(guidanceResponse);
			if (result == null) result = caseDomainResource(guidanceResponse);
			if (result == null) result = caseResource(guidanceResponse);
			if (result == null) result = caseBase(guidanceResponse);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.GUIDANCE_RESPONSE_STATUS: {
			final GuidanceResponseStatus guidanceResponseStatus = (GuidanceResponseStatus)theEObject;
			T result = caseGuidanceResponseStatus(guidanceResponseStatus);
			if (result == null) result = caseElement(guidanceResponseStatus);
			if (result == null) result = caseBase(guidanceResponseStatus);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.GUIDE_PAGE_GENERATION: {
			final GuidePageGeneration guidePageGeneration = (GuidePageGeneration)theEObject;
			T result = caseGuidePageGeneration(guidePageGeneration);
			if (result == null) result = caseElement(guidePageGeneration);
			if (result == null) result = caseBase(guidePageGeneration);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.HEALTHCARE_SERVICE: {
			final HealthcareService healthcareService = (HealthcareService)theEObject;
			T result = caseHealthcareService(healthcareService);
			if (result == null) result = caseDomainResource(healthcareService);
			if (result == null) result = caseResource(healthcareService);
			if (result == null) result = caseBase(healthcareService);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.HEALTHCARE_SERVICE_ELIGIBILITY: {
			final HealthcareServiceEligibility healthcareServiceEligibility = (HealthcareServiceEligibility)theEObject;
			T result = caseHealthcareServiceEligibility(healthcareServiceEligibility);
			if (result == null) result = caseBackboneElement(healthcareServiceEligibility);
			if (result == null) result = caseElement(healthcareServiceEligibility);
			if (result == null) result = caseBase(healthcareServiceEligibility);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.HTTP_VERB: {
			final HTTPVerb httpVerb = (HTTPVerb)theEObject;
			T result = caseHTTPVerb(httpVerb);
			if (result == null) result = caseElement(httpVerb);
			if (result == null) result = caseBase(httpVerb);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.HUMAN_NAME: {
			final HumanName humanName = (HumanName)theEObject;
			T result = caseHumanName(humanName);
			if (result == null) result = caseDataType(humanName);
			if (result == null) result = caseElement(humanName);
			if (result == null) result = caseBase(humanName);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.ID: {
			final Id id = (Id)theEObject;
			T result = caseId(id);
			if (result == null) result = caseElement(id);
			if (result == null) result = caseBase(id);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.IDENTIFIER: {
			final Identifier identifier = (Identifier)theEObject;
			T result = caseIdentifier(identifier);
			if (result == null) result = caseDataType(identifier);
			if (result == null) result = caseElement(identifier);
			if (result == null) result = caseBase(identifier);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.IDENTIFIER_USE: {
			final IdentifierUse identifierUse = (IdentifierUse)theEObject;
			T result = caseIdentifierUse(identifierUse);
			if (result == null) result = caseElement(identifierUse);
			if (result == null) result = caseBase(identifierUse);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.IDENTITY_ASSURANCE_LEVEL: {
			final IdentityAssuranceLevel identityAssuranceLevel = (IdentityAssuranceLevel)theEObject;
			T result = caseIdentityAssuranceLevel(identityAssuranceLevel);
			if (result == null) result = caseElement(identityAssuranceLevel);
			if (result == null) result = caseBase(identityAssuranceLevel);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.IMAGING_SELECTION: {
			final ImagingSelection imagingSelection = (ImagingSelection)theEObject;
			T result = caseImagingSelection(imagingSelection);
			if (result == null) result = caseDomainResource(imagingSelection);
			if (result == null) result = caseResource(imagingSelection);
			if (result == null) result = caseBase(imagingSelection);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.IMAGING_SELECTION_DGRAPHIC_TYPE: {
			final ImagingSelectionDGraphicType imagingSelectionDGraphicType = (ImagingSelectionDGraphicType)theEObject;
			T result = caseImagingSelectionDGraphicType(imagingSelectionDGraphicType);
			if (result == null) result = caseElement(imagingSelectionDGraphicType);
			if (result == null) result = caseBase(imagingSelectionDGraphicType);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.IMAGING_SELECTION_IMAGE_REGION2_D: {
			final ImagingSelectionImageRegion2D imagingSelectionImageRegion2D = (ImagingSelectionImageRegion2D)theEObject;
			T result = caseImagingSelectionImageRegion2D(imagingSelectionImageRegion2D);
			if (result == null) result = caseBackboneElement(imagingSelectionImageRegion2D);
			if (result == null) result = caseElement(imagingSelectionImageRegion2D);
			if (result == null) result = caseBase(imagingSelectionImageRegion2D);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.IMAGING_SELECTION_IMAGE_REGION3_D: {
			final ImagingSelectionImageRegion3D imagingSelectionImageRegion3D = (ImagingSelectionImageRegion3D)theEObject;
			T result = caseImagingSelectionImageRegion3D(imagingSelectionImageRegion3D);
			if (result == null) result = caseBackboneElement(imagingSelectionImageRegion3D);
			if (result == null) result = caseElement(imagingSelectionImageRegion3D);
			if (result == null) result = caseBase(imagingSelectionImageRegion3D);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.IMAGING_SELECTION_INSTANCE: {
			final ImagingSelectionInstance imagingSelectionInstance = (ImagingSelectionInstance)theEObject;
			T result = caseImagingSelectionInstance(imagingSelectionInstance);
			if (result == null) result = caseBackboneElement(imagingSelectionInstance);
			if (result == null) result = caseElement(imagingSelectionInstance);
			if (result == null) result = caseBase(imagingSelectionInstance);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.IMAGING_SELECTION_PERFORMER: {
			final ImagingSelectionPerformer imagingSelectionPerformer = (ImagingSelectionPerformer)theEObject;
			T result = caseImagingSelectionPerformer(imagingSelectionPerformer);
			if (result == null) result = caseBackboneElement(imagingSelectionPerformer);
			if (result == null) result = caseElement(imagingSelectionPerformer);
			if (result == null) result = caseBase(imagingSelectionPerformer);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.IMAGING_SELECTION_STATUS: {
			final ImagingSelectionStatus imagingSelectionStatus = (ImagingSelectionStatus)theEObject;
			T result = caseImagingSelectionStatus(imagingSelectionStatus);
			if (result == null) result = caseElement(imagingSelectionStatus);
			if (result == null) result = caseBase(imagingSelectionStatus);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.IMAGING_STUDY: {
			final ImagingStudy imagingStudy = (ImagingStudy)theEObject;
			T result = caseImagingStudy(imagingStudy);
			if (result == null) result = caseDomainResource(imagingStudy);
			if (result == null) result = caseResource(imagingStudy);
			if (result == null) result = caseBase(imagingStudy);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.IMAGING_STUDY_INSTANCE: {
			final ImagingStudyInstance imagingStudyInstance = (ImagingStudyInstance)theEObject;
			T result = caseImagingStudyInstance(imagingStudyInstance);
			if (result == null) result = caseBackboneElement(imagingStudyInstance);
			if (result == null) result = caseElement(imagingStudyInstance);
			if (result == null) result = caseBase(imagingStudyInstance);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.IMAGING_STUDY_PERFORMER: {
			final ImagingStudyPerformer imagingStudyPerformer = (ImagingStudyPerformer)theEObject;
			T result = caseImagingStudyPerformer(imagingStudyPerformer);
			if (result == null) result = caseBackboneElement(imagingStudyPerformer);
			if (result == null) result = caseElement(imagingStudyPerformer);
			if (result == null) result = caseBase(imagingStudyPerformer);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.IMAGING_STUDY_SERIES: {
			final ImagingStudySeries imagingStudySeries = (ImagingStudySeries)theEObject;
			T result = caseImagingStudySeries(imagingStudySeries);
			if (result == null) result = caseBackboneElement(imagingStudySeries);
			if (result == null) result = caseElement(imagingStudySeries);
			if (result == null) result = caseBase(imagingStudySeries);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.IMAGING_STUDY_STATUS: {
			final ImagingStudyStatus imagingStudyStatus = (ImagingStudyStatus)theEObject;
			T result = caseImagingStudyStatus(imagingStudyStatus);
			if (result == null) result = caseElement(imagingStudyStatus);
			if (result == null) result = caseBase(imagingStudyStatus);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.IMMUNIZATION: {
			final Immunization immunization = (Immunization)theEObject;
			T result = caseImmunization(immunization);
			if (result == null) result = caseDomainResource(immunization);
			if (result == null) result = caseResource(immunization);
			if (result == null) result = caseBase(immunization);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.IMMUNIZATION_EVALUATION: {
			final ImmunizationEvaluation immunizationEvaluation = (ImmunizationEvaluation)theEObject;
			T result = caseImmunizationEvaluation(immunizationEvaluation);
			if (result == null) result = caseDomainResource(immunizationEvaluation);
			if (result == null) result = caseResource(immunizationEvaluation);
			if (result == null) result = caseBase(immunizationEvaluation);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.IMMUNIZATION_EVALUATION_STATUS_CODES: {
			final ImmunizationEvaluationStatusCodes immunizationEvaluationStatusCodes = (ImmunizationEvaluationStatusCodes)theEObject;
			T result = caseImmunizationEvaluationStatusCodes(immunizationEvaluationStatusCodes);
			if (result == null) result = caseElement(immunizationEvaluationStatusCodes);
			if (result == null) result = caseBase(immunizationEvaluationStatusCodes);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.IMMUNIZATION_PERFORMER: {
			final ImmunizationPerformer immunizationPerformer = (ImmunizationPerformer)theEObject;
			T result = caseImmunizationPerformer(immunizationPerformer);
			if (result == null) result = caseBackboneElement(immunizationPerformer);
			if (result == null) result = caseElement(immunizationPerformer);
			if (result == null) result = caseBase(immunizationPerformer);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.IMMUNIZATION_PROGRAM_ELIGIBILITY: {
			final ImmunizationProgramEligibility immunizationProgramEligibility = (ImmunizationProgramEligibility)theEObject;
			T result = caseImmunizationProgramEligibility(immunizationProgramEligibility);
			if (result == null) result = caseBackboneElement(immunizationProgramEligibility);
			if (result == null) result = caseElement(immunizationProgramEligibility);
			if (result == null) result = caseBase(immunizationProgramEligibility);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.IMMUNIZATION_PROTOCOL_APPLIED: {
			final ImmunizationProtocolApplied immunizationProtocolApplied = (ImmunizationProtocolApplied)theEObject;
			T result = caseImmunizationProtocolApplied(immunizationProtocolApplied);
			if (result == null) result = caseBackboneElement(immunizationProtocolApplied);
			if (result == null) result = caseElement(immunizationProtocolApplied);
			if (result == null) result = caseBase(immunizationProtocolApplied);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.IMMUNIZATION_REACTION: {
			final ImmunizationReaction immunizationReaction = (ImmunizationReaction)theEObject;
			T result = caseImmunizationReaction(immunizationReaction);
			if (result == null) result = caseBackboneElement(immunizationReaction);
			if (result == null) result = caseElement(immunizationReaction);
			if (result == null) result = caseBase(immunizationReaction);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.IMMUNIZATION_RECOMMENDATION: {
			final ImmunizationRecommendation immunizationRecommendation = (ImmunizationRecommendation)theEObject;
			T result = caseImmunizationRecommendation(immunizationRecommendation);
			if (result == null) result = caseDomainResource(immunizationRecommendation);
			if (result == null) result = caseResource(immunizationRecommendation);
			if (result == null) result = caseBase(immunizationRecommendation);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.IMMUNIZATION_RECOMMENDATION_DATE_CRITERION: {
			final ImmunizationRecommendationDateCriterion immunizationRecommendationDateCriterion = (ImmunizationRecommendationDateCriterion)theEObject;
			T result = caseImmunizationRecommendationDateCriterion(immunizationRecommendationDateCriterion);
			if (result == null) result = caseBackboneElement(immunizationRecommendationDateCriterion);
			if (result == null) result = caseElement(immunizationRecommendationDateCriterion);
			if (result == null) result = caseBase(immunizationRecommendationDateCriterion);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.IMMUNIZATION_RECOMMENDATION_RECOMMENDATION: {
			final ImmunizationRecommendationRecommendation immunizationRecommendationRecommendation = (ImmunizationRecommendationRecommendation)theEObject;
			T result = caseImmunizationRecommendationRecommendation(immunizationRecommendationRecommendation);
			if (result == null) result = caseBackboneElement(immunizationRecommendationRecommendation);
			if (result == null) result = caseElement(immunizationRecommendationRecommendation);
			if (result == null) result = caseBase(immunizationRecommendationRecommendation);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.IMMUNIZATION_STATUS_CODES: {
			final ImmunizationStatusCodes immunizationStatusCodes = (ImmunizationStatusCodes)theEObject;
			T result = caseImmunizationStatusCodes(immunizationStatusCodes);
			if (result == null) result = caseElement(immunizationStatusCodes);
			if (result == null) result = caseBase(immunizationStatusCodes);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.IMPLEMENTATION_GUIDE: {
			final ImplementationGuide implementationGuide = (ImplementationGuide)theEObject;
			T result = caseImplementationGuide(implementationGuide);
			if (result == null) result = caseCanonicalResource(implementationGuide);
			if (result == null) result = caseDomainResource(implementationGuide);
			if (result == null) result = caseResource(implementationGuide);
			if (result == null) result = caseBase(implementationGuide);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.IMPLEMENTATION_GUIDE_DEFINITION: {
			final ImplementationGuideDefinition implementationGuideDefinition = (ImplementationGuideDefinition)theEObject;
			T result = caseImplementationGuideDefinition(implementationGuideDefinition);
			if (result == null) result = caseBackboneElement(implementationGuideDefinition);
			if (result == null) result = caseElement(implementationGuideDefinition);
			if (result == null) result = caseBase(implementationGuideDefinition);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.IMPLEMENTATION_GUIDE_DEPENDS_ON: {
			final ImplementationGuideDependsOn implementationGuideDependsOn = (ImplementationGuideDependsOn)theEObject;
			T result = caseImplementationGuideDependsOn(implementationGuideDependsOn);
			if (result == null) result = caseBackboneElement(implementationGuideDependsOn);
			if (result == null) result = caseElement(implementationGuideDependsOn);
			if (result == null) result = caseBase(implementationGuideDependsOn);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.IMPLEMENTATION_GUIDE_GLOBAL: {
			final ImplementationGuideGlobal implementationGuideGlobal = (ImplementationGuideGlobal)theEObject;
			T result = caseImplementationGuideGlobal(implementationGuideGlobal);
			if (result == null) result = caseBackboneElement(implementationGuideGlobal);
			if (result == null) result = caseElement(implementationGuideGlobal);
			if (result == null) result = caseBase(implementationGuideGlobal);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.IMPLEMENTATION_GUIDE_GROUPING: {
			final ImplementationGuideGrouping implementationGuideGrouping = (ImplementationGuideGrouping)theEObject;
			T result = caseImplementationGuideGrouping(implementationGuideGrouping);
			if (result == null) result = caseBackboneElement(implementationGuideGrouping);
			if (result == null) result = caseElement(implementationGuideGrouping);
			if (result == null) result = caseBase(implementationGuideGrouping);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.IMPLEMENTATION_GUIDE_MANIFEST: {
			final ImplementationGuideManifest implementationGuideManifest = (ImplementationGuideManifest)theEObject;
			T result = caseImplementationGuideManifest(implementationGuideManifest);
			if (result == null) result = caseBackboneElement(implementationGuideManifest);
			if (result == null) result = caseElement(implementationGuideManifest);
			if (result == null) result = caseBase(implementationGuideManifest);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.IMPLEMENTATION_GUIDE_PAGE: {
			final ImplementationGuidePage implementationGuidePage = (ImplementationGuidePage)theEObject;
			T result = caseImplementationGuidePage(implementationGuidePage);
			if (result == null) result = caseBackboneElement(implementationGuidePage);
			if (result == null) result = caseElement(implementationGuidePage);
			if (result == null) result = caseBase(implementationGuidePage);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		default:
			return doSwitch2(classifierID, theEObject);
		}
	}

	private T doSwitch2(final int classifierID, final EObject theEObject) {
		switch (classifierID) {
		case FhirPackage.IMPLEMENTATION_GUIDE_PAGE1: {
			final ImplementationGuidePage1 implementationGuidePage1 = (ImplementationGuidePage1)theEObject;
			T result = caseImplementationGuidePage1(implementationGuidePage1);
			if (result == null) result = caseBackboneElement(implementationGuidePage1);
			if (result == null) result = caseElement(implementationGuidePage1);
			if (result == null) result = caseBase(implementationGuidePage1);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.IMPLEMENTATION_GUIDE_PARAMETER: {
			final ImplementationGuideParameter implementationGuideParameter = (ImplementationGuideParameter)theEObject;
			T result = caseImplementationGuideParameter(implementationGuideParameter);
			if (result == null) result = caseBackboneElement(implementationGuideParameter);
			if (result == null) result = caseElement(implementationGuideParameter);
			if (result == null) result = caseBase(implementationGuideParameter);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.IMPLEMENTATION_GUIDE_RESOURCE: {
			final ImplementationGuideResource implementationGuideResource = (ImplementationGuideResource)theEObject;
			T result = caseImplementationGuideResource(implementationGuideResource);
			if (result == null) result = caseBackboneElement(implementationGuideResource);
			if (result == null) result = caseElement(implementationGuideResource);
			if (result == null) result = caseBase(implementationGuideResource);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.IMPLEMENTATION_GUIDE_RESOURCE1: {
			final ImplementationGuideResource1 implementationGuideResource1 = (ImplementationGuideResource1)theEObject;
			T result = caseImplementationGuideResource1(implementationGuideResource1);
			if (result == null) result = caseBackboneElement(implementationGuideResource1);
			if (result == null) result = caseElement(implementationGuideResource1);
			if (result == null) result = caseBase(implementationGuideResource1);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.IMPLEMENTATION_GUIDE_TEMPLATE: {
			final ImplementationGuideTemplate implementationGuideTemplate = (ImplementationGuideTemplate)theEObject;
			T result = caseImplementationGuideTemplate(implementationGuideTemplate);
			if (result == null) result = caseBackboneElement(implementationGuideTemplate);
			if (result == null) result = caseElement(implementationGuideTemplate);
			if (result == null) result = caseBase(implementationGuideTemplate);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.INGREDIENT: {
			final Ingredient ingredient = (Ingredient)theEObject;
			T result = caseIngredient(ingredient);
			if (result == null) result = caseDomainResource(ingredient);
			if (result == null) result = caseResource(ingredient);
			if (result == null) result = caseBase(ingredient);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.INGREDIENT_MANUFACTURER: {
			final IngredientManufacturer ingredientManufacturer = (IngredientManufacturer)theEObject;
			T result = caseIngredientManufacturer(ingredientManufacturer);
			if (result == null) result = caseBackboneElement(ingredientManufacturer);
			if (result == null) result = caseElement(ingredientManufacturer);
			if (result == null) result = caseBase(ingredientManufacturer);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.INGREDIENT_MANUFACTURER_ROLE: {
			final IngredientManufacturerRole ingredientManufacturerRole = (IngredientManufacturerRole)theEObject;
			T result = caseIngredientManufacturerRole(ingredientManufacturerRole);
			if (result == null) result = caseElement(ingredientManufacturerRole);
			if (result == null) result = caseBase(ingredientManufacturerRole);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.INGREDIENT_REFERENCE_STRENGTH: {
			final IngredientReferenceStrength ingredientReferenceStrength = (IngredientReferenceStrength)theEObject;
			T result = caseIngredientReferenceStrength(ingredientReferenceStrength);
			if (result == null) result = caseBackboneElement(ingredientReferenceStrength);
			if (result == null) result = caseElement(ingredientReferenceStrength);
			if (result == null) result = caseBase(ingredientReferenceStrength);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.INGREDIENT_STRENGTH: {
			final IngredientStrength ingredientStrength = (IngredientStrength)theEObject;
			T result = caseIngredientStrength(ingredientStrength);
			if (result == null) result = caseBackboneElement(ingredientStrength);
			if (result == null) result = caseElement(ingredientStrength);
			if (result == null) result = caseBase(ingredientStrength);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.INGREDIENT_SUBSTANCE: {
			final IngredientSubstance ingredientSubstance = (IngredientSubstance)theEObject;
			T result = caseIngredientSubstance(ingredientSubstance);
			if (result == null) result = caseBackboneElement(ingredientSubstance);
			if (result == null) result = caseElement(ingredientSubstance);
			if (result == null) result = caseBase(ingredientSubstance);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.INSTANT: {
			final Instant instant = (Instant)theEObject;
			T result = caseInstant(instant);
			if (result == null) result = caseElement(instant);
			if (result == null) result = caseBase(instant);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.INSURANCE_PLAN: {
			final InsurancePlan insurancePlan = (InsurancePlan)theEObject;
			T result = caseInsurancePlan(insurancePlan);
			if (result == null) result = caseDomainResource(insurancePlan);
			if (result == null) result = caseResource(insurancePlan);
			if (result == null) result = caseBase(insurancePlan);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.INSURANCE_PLAN_BENEFIT: {
			final InsurancePlanBenefit insurancePlanBenefit = (InsurancePlanBenefit)theEObject;
			T result = caseInsurancePlanBenefit(insurancePlanBenefit);
			if (result == null) result = caseBackboneElement(insurancePlanBenefit);
			if (result == null) result = caseElement(insurancePlanBenefit);
			if (result == null) result = caseBase(insurancePlanBenefit);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.INSURANCE_PLAN_BENEFIT1: {
			final InsurancePlanBenefit1 insurancePlanBenefit1 = (InsurancePlanBenefit1)theEObject;
			T result = caseInsurancePlanBenefit1(insurancePlanBenefit1);
			if (result == null) result = caseBackboneElement(insurancePlanBenefit1);
			if (result == null) result = caseElement(insurancePlanBenefit1);
			if (result == null) result = caseBase(insurancePlanBenefit1);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.INSURANCE_PLAN_COST: {
			final InsurancePlanCost insurancePlanCost = (InsurancePlanCost)theEObject;
			T result = caseInsurancePlanCost(insurancePlanCost);
			if (result == null) result = caseBackboneElement(insurancePlanCost);
			if (result == null) result = caseElement(insurancePlanCost);
			if (result == null) result = caseBase(insurancePlanCost);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.INSURANCE_PLAN_COVERAGE: {
			final InsurancePlanCoverage insurancePlanCoverage = (InsurancePlanCoverage)theEObject;
			T result = caseInsurancePlanCoverage(insurancePlanCoverage);
			if (result == null) result = caseBackboneElement(insurancePlanCoverage);
			if (result == null) result = caseElement(insurancePlanCoverage);
			if (result == null) result = caseBase(insurancePlanCoverage);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.INSURANCE_PLAN_GENERAL_COST: {
			final InsurancePlanGeneralCost insurancePlanGeneralCost = (InsurancePlanGeneralCost)theEObject;
			T result = caseInsurancePlanGeneralCost(insurancePlanGeneralCost);
			if (result == null) result = caseBackboneElement(insurancePlanGeneralCost);
			if (result == null) result = caseElement(insurancePlanGeneralCost);
			if (result == null) result = caseBase(insurancePlanGeneralCost);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.INSURANCE_PLAN_LIMIT: {
			final InsurancePlanLimit insurancePlanLimit = (InsurancePlanLimit)theEObject;
			T result = caseInsurancePlanLimit(insurancePlanLimit);
			if (result == null) result = caseBackboneElement(insurancePlanLimit);
			if (result == null) result = caseElement(insurancePlanLimit);
			if (result == null) result = caseBase(insurancePlanLimit);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.INSURANCE_PLAN_PLAN: {
			final InsurancePlanPlan insurancePlanPlan = (InsurancePlanPlan)theEObject;
			T result = caseInsurancePlanPlan(insurancePlanPlan);
			if (result == null) result = caseBackboneElement(insurancePlanPlan);
			if (result == null) result = caseElement(insurancePlanPlan);
			if (result == null) result = caseBase(insurancePlanPlan);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.INSURANCE_PLAN_SPECIFIC_COST: {
			final InsurancePlanSpecificCost insurancePlanSpecificCost = (InsurancePlanSpecificCost)theEObject;
			T result = caseInsurancePlanSpecificCost(insurancePlanSpecificCost);
			if (result == null) result = caseBackboneElement(insurancePlanSpecificCost);
			if (result == null) result = caseElement(insurancePlanSpecificCost);
			if (result == null) result = caseBase(insurancePlanSpecificCost);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.INTEGER: {
			final org.hl7.emf.fhir.Integer integer = (org.hl7.emf.fhir.Integer)theEObject;
			T result = caseInteger(integer);
			if (result == null) result = caseElement(integer);
			if (result == null) result = caseBase(integer);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.INTEGER64: {
			final Integer64 integer64 = (Integer64)theEObject;
			T result = caseInteger64(integer64);
			if (result == null) result = caseElement(integer64);
			if (result == null) result = caseBase(integer64);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.INTERACTION_TRIGGER: {
			final InteractionTrigger interactionTrigger = (InteractionTrigger)theEObject;
			T result = caseInteractionTrigger(interactionTrigger);
			if (result == null) result = caseElement(interactionTrigger);
			if (result == null) result = caseBase(interactionTrigger);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.INVENTORY_COUNT_TYPE: {
			final InventoryCountType inventoryCountType = (InventoryCountType)theEObject;
			T result = caseInventoryCountType(inventoryCountType);
			if (result == null) result = caseElement(inventoryCountType);
			if (result == null) result = caseBase(inventoryCountType);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.INVENTORY_ITEM: {
			final InventoryItem inventoryItem = (InventoryItem)theEObject;
			T result = caseInventoryItem(inventoryItem);
			if (result == null) result = caseDomainResource(inventoryItem);
			if (result == null) result = caseResource(inventoryItem);
			if (result == null) result = caseBase(inventoryItem);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.INVENTORY_ITEM_ASSOCIATION: {
			final InventoryItemAssociation inventoryItemAssociation = (InventoryItemAssociation)theEObject;
			T result = caseInventoryItemAssociation(inventoryItemAssociation);
			if (result == null) result = caseBackboneElement(inventoryItemAssociation);
			if (result == null) result = caseElement(inventoryItemAssociation);
			if (result == null) result = caseBase(inventoryItemAssociation);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.INVENTORY_ITEM_CHARACTERISTIC: {
			final InventoryItemCharacteristic inventoryItemCharacteristic = (InventoryItemCharacteristic)theEObject;
			T result = caseInventoryItemCharacteristic(inventoryItemCharacteristic);
			if (result == null) result = caseBackboneElement(inventoryItemCharacteristic);
			if (result == null) result = caseElement(inventoryItemCharacteristic);
			if (result == null) result = caseBase(inventoryItemCharacteristic);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.INVENTORY_ITEM_DESCRIPTION: {
			final InventoryItemDescription inventoryItemDescription = (InventoryItemDescription)theEObject;
			T result = caseInventoryItemDescription(inventoryItemDescription);
			if (result == null) result = caseBackboneElement(inventoryItemDescription);
			if (result == null) result = caseElement(inventoryItemDescription);
			if (result == null) result = caseBase(inventoryItemDescription);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.INVENTORY_ITEM_INSTANCE: {
			final InventoryItemInstance inventoryItemInstance = (InventoryItemInstance)theEObject;
			T result = caseInventoryItemInstance(inventoryItemInstance);
			if (result == null) result = caseBackboneElement(inventoryItemInstance);
			if (result == null) result = caseElement(inventoryItemInstance);
			if (result == null) result = caseBase(inventoryItemInstance);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.INVENTORY_ITEM_NAME: {
			final InventoryItemName inventoryItemName = (InventoryItemName)theEObject;
			T result = caseInventoryItemName(inventoryItemName);
			if (result == null) result = caseBackboneElement(inventoryItemName);
			if (result == null) result = caseElement(inventoryItemName);
			if (result == null) result = caseBase(inventoryItemName);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.INVENTORY_ITEM_RESPONSIBLE_ORGANIZATION: {
			final InventoryItemResponsibleOrganization inventoryItemResponsibleOrganization = (InventoryItemResponsibleOrganization)theEObject;
			T result = caseInventoryItemResponsibleOrganization(inventoryItemResponsibleOrganization);
			if (result == null) result = caseBackboneElement(inventoryItemResponsibleOrganization);
			if (result == null) result = caseElement(inventoryItemResponsibleOrganization);
			if (result == null) result = caseBase(inventoryItemResponsibleOrganization);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.INVENTORY_ITEM_STATUS_CODES: {
			final InventoryItemStatusCodes inventoryItemStatusCodes = (InventoryItemStatusCodes)theEObject;
			T result = caseInventoryItemStatusCodes(inventoryItemStatusCodes);
			if (result == null) result = caseElement(inventoryItemStatusCodes);
			if (result == null) result = caseBase(inventoryItemStatusCodes);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.INVENTORY_REPORT: {
			final InventoryReport inventoryReport = (InventoryReport)theEObject;
			T result = caseInventoryReport(inventoryReport);
			if (result == null) result = caseDomainResource(inventoryReport);
			if (result == null) result = caseResource(inventoryReport);
			if (result == null) result = caseBase(inventoryReport);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.INVENTORY_REPORT_INVENTORY_LISTING: {
			final InventoryReportInventoryListing inventoryReportInventoryListing = (InventoryReportInventoryListing)theEObject;
			T result = caseInventoryReportInventoryListing(inventoryReportInventoryListing);
			if (result == null) result = caseBackboneElement(inventoryReportInventoryListing);
			if (result == null) result = caseElement(inventoryReportInventoryListing);
			if (result == null) result = caseBase(inventoryReportInventoryListing);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.INVENTORY_REPORT_ITEM: {
			final InventoryReportItem inventoryReportItem = (InventoryReportItem)theEObject;
			T result = caseInventoryReportItem(inventoryReportItem);
			if (result == null) result = caseBackboneElement(inventoryReportItem);
			if (result == null) result = caseElement(inventoryReportItem);
			if (result == null) result = caseBase(inventoryReportItem);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.INVENTORY_REPORT_STATUS: {
			final InventoryReportStatus inventoryReportStatus = (InventoryReportStatus)theEObject;
			T result = caseInventoryReportStatus(inventoryReportStatus);
			if (result == null) result = caseElement(inventoryReportStatus);
			if (result == null) result = caseBase(inventoryReportStatus);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.INVOICE: {
			final Invoice invoice = (Invoice)theEObject;
			T result = caseInvoice(invoice);
			if (result == null) result = caseDomainResource(invoice);
			if (result == null) result = caseResource(invoice);
			if (result == null) result = caseBase(invoice);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.INVOICE_LINE_ITEM: {
			final InvoiceLineItem invoiceLineItem = (InvoiceLineItem)theEObject;
			T result = caseInvoiceLineItem(invoiceLineItem);
			if (result == null) result = caseBackboneElement(invoiceLineItem);
			if (result == null) result = caseElement(invoiceLineItem);
			if (result == null) result = caseBase(invoiceLineItem);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.INVOICE_PARTICIPANT: {
			final InvoiceParticipant invoiceParticipant = (InvoiceParticipant)theEObject;
			T result = caseInvoiceParticipant(invoiceParticipant);
			if (result == null) result = caseBackboneElement(invoiceParticipant);
			if (result == null) result = caseElement(invoiceParticipant);
			if (result == null) result = caseBase(invoiceParticipant);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.INVOICE_STATUS: {
			final InvoiceStatus invoiceStatus = (InvoiceStatus)theEObject;
			T result = caseInvoiceStatus(invoiceStatus);
			if (result == null) result = caseElement(invoiceStatus);
			if (result == null) result = caseBase(invoiceStatus);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.ISSUE_SEVERITY: {
			final IssueSeverity issueSeverity = (IssueSeverity)theEObject;
			T result = caseIssueSeverity(issueSeverity);
			if (result == null) result = caseElement(issueSeverity);
			if (result == null) result = caseBase(issueSeverity);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.ISSUE_TYPE: {
			final IssueType issueType = (IssueType)theEObject;
			T result = caseIssueType(issueType);
			if (result == null) result = caseElement(issueType);
			if (result == null) result = caseBase(issueType);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.JURISDICTION_VALUE_SET: {
			final JurisdictionValueSet jurisdictionValueSet = (JurisdictionValueSet)theEObject;
			T result = caseJurisdictionValueSet(jurisdictionValueSet);
			if (result == null) result = caseElement(jurisdictionValueSet);
			if (result == null) result = caseBase(jurisdictionValueSet);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.KIND: {
			final Kind kind = (Kind)theEObject;
			T result = caseKind(kind);
			if (result == null) result = caseElement(kind);
			if (result == null) result = caseBase(kind);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.LIBRARY: {
			final Library library = (Library)theEObject;
			T result = caseLibrary(library);
			if (result == null) result = caseMetadataResource(library);
			if (result == null) result = caseCanonicalResource(library);
			if (result == null) result = caseDomainResource(library);
			if (result == null) result = caseResource(library);
			if (result == null) result = caseBase(library);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.LINKAGE: {
			final Linkage linkage = (Linkage)theEObject;
			T result = caseLinkage(linkage);
			if (result == null) result = caseDomainResource(linkage);
			if (result == null) result = caseResource(linkage);
			if (result == null) result = caseBase(linkage);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.LINKAGE_ITEM: {
			final LinkageItem linkageItem = (LinkageItem)theEObject;
			T result = caseLinkageItem(linkageItem);
			if (result == null) result = caseBackboneElement(linkageItem);
			if (result == null) result = caseElement(linkageItem);
			if (result == null) result = caseBase(linkageItem);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.LINKAGE_TYPE: {
			final LinkageType linkageType = (LinkageType)theEObject;
			T result = caseLinkageType(linkageType);
			if (result == null) result = caseElement(linkageType);
			if (result == null) result = caseBase(linkageType);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.LINK_RELATION_TYPES: {
			final LinkRelationTypes linkRelationTypes = (LinkRelationTypes)theEObject;
			T result = caseLinkRelationTypes(linkRelationTypes);
			if (result == null) result = caseElement(linkRelationTypes);
			if (result == null) result = caseBase(linkRelationTypes);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.LINK_TYPE: {
			final LinkType linkType = (LinkType)theEObject;
			T result = caseLinkType(linkType);
			if (result == null) result = caseElement(linkType);
			if (result == null) result = caseBase(linkType);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.LIST: {
			final List list = (List)theEObject;
			T result = caseList(list);
			if (result == null) result = caseDomainResource(list);
			if (result == null) result = caseResource(list);
			if (result == null) result = caseBase(list);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.LIST_ENTRY: {
			final ListEntry listEntry = (ListEntry)theEObject;
			T result = caseListEntry(listEntry);
			if (result == null) result = caseBackboneElement(listEntry);
			if (result == null) result = caseElement(listEntry);
			if (result == null) result = caseBase(listEntry);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.LIST_MODE: {
			final ListMode listMode = (ListMode)theEObject;
			T result = caseListMode(listMode);
			if (result == null) result = caseElement(listMode);
			if (result == null) result = caseBase(listMode);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.LIST_STATUS: {
			final ListStatus listStatus = (ListStatus)theEObject;
			T result = caseListStatus(listStatus);
			if (result == null) result = caseElement(listStatus);
			if (result == null) result = caseBase(listStatus);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.LOCATION: {
			final Location location = (Location)theEObject;
			T result = caseLocation(location);
			if (result == null) result = caseDomainResource(location);
			if (result == null) result = caseResource(location);
			if (result == null) result = caseBase(location);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.LOCATION_MODE: {
			final LocationMode locationMode = (LocationMode)theEObject;
			T result = caseLocationMode(locationMode);
			if (result == null) result = caseElement(locationMode);
			if (result == null) result = caseBase(locationMode);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.LOCATION_POSITION: {
			final LocationPosition locationPosition = (LocationPosition)theEObject;
			T result = caseLocationPosition(locationPosition);
			if (result == null) result = caseBackboneElement(locationPosition);
			if (result == null) result = caseElement(locationPosition);
			if (result == null) result = caseBase(locationPosition);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.LOCATION_STATUS: {
			final LocationStatus locationStatus = (LocationStatus)theEObject;
			T result = caseLocationStatus(locationStatus);
			if (result == null) result = caseElement(locationStatus);
			if (result == null) result = caseBase(locationStatus);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.MANUFACTURED_ITEM_DEFINITION: {
			final ManufacturedItemDefinition manufacturedItemDefinition = (ManufacturedItemDefinition)theEObject;
			T result = caseManufacturedItemDefinition(manufacturedItemDefinition);
			if (result == null) result = caseDomainResource(manufacturedItemDefinition);
			if (result == null) result = caseResource(manufacturedItemDefinition);
			if (result == null) result = caseBase(manufacturedItemDefinition);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.MANUFACTURED_ITEM_DEFINITION_COMPONENT: {
			final ManufacturedItemDefinitionComponent manufacturedItemDefinitionComponent = (ManufacturedItemDefinitionComponent)theEObject;
			T result = caseManufacturedItemDefinitionComponent(manufacturedItemDefinitionComponent);
			if (result == null) result = caseBackboneElement(manufacturedItemDefinitionComponent);
			if (result == null) result = caseElement(manufacturedItemDefinitionComponent);
			if (result == null) result = caseBase(manufacturedItemDefinitionComponent);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.MANUFACTURED_ITEM_DEFINITION_CONSTITUENT: {
			final ManufacturedItemDefinitionConstituent manufacturedItemDefinitionConstituent = (ManufacturedItemDefinitionConstituent)theEObject;
			T result = caseManufacturedItemDefinitionConstituent(manufacturedItemDefinitionConstituent);
			if (result == null) result = caseBackboneElement(manufacturedItemDefinitionConstituent);
			if (result == null) result = caseElement(manufacturedItemDefinitionConstituent);
			if (result == null) result = caseBase(manufacturedItemDefinitionConstituent);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.MANUFACTURED_ITEM_DEFINITION_PROPERTY: {
			final ManufacturedItemDefinitionProperty manufacturedItemDefinitionProperty = (ManufacturedItemDefinitionProperty)theEObject;
			T result = caseManufacturedItemDefinitionProperty(manufacturedItemDefinitionProperty);
			if (result == null) result = caseBackboneElement(manufacturedItemDefinitionProperty);
			if (result == null) result = caseElement(manufacturedItemDefinitionProperty);
			if (result == null) result = caseBase(manufacturedItemDefinitionProperty);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.MARKDOWN: {
			final Markdown markdown = (Markdown)theEObject;
			T result = caseMarkdown(markdown);
			if (result == null) result = caseElement(markdown);
			if (result == null) result = caseBase(markdown);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.MARKETING_STATUS: {
			final MarketingStatus marketingStatus = (MarketingStatus)theEObject;
			T result = caseMarketingStatus(marketingStatus);
			if (result == null) result = caseBackboneType(marketingStatus);
			if (result == null) result = caseDataType(marketingStatus);
			if (result == null) result = caseElement(marketingStatus);
			if (result == null) result = caseBase(marketingStatus);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.MEASURE: {
			final Measure measure = (Measure)theEObject;
			T result = caseMeasure(measure);
			if (result == null) result = caseMetadataResource(measure);
			if (result == null) result = caseCanonicalResource(measure);
			if (result == null) result = caseDomainResource(measure);
			if (result == null) result = caseResource(measure);
			if (result == null) result = caseBase(measure);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.MEASURE_COMPONENT: {
			final MeasureComponent measureComponent = (MeasureComponent)theEObject;
			T result = caseMeasureComponent(measureComponent);
			if (result == null) result = caseBackboneElement(measureComponent);
			if (result == null) result = caseElement(measureComponent);
			if (result == null) result = caseBase(measureComponent);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.MEASURE_GROUP: {
			final MeasureGroup measureGroup = (MeasureGroup)theEObject;
			T result = caseMeasureGroup(measureGroup);
			if (result == null) result = caseBackboneElement(measureGroup);
			if (result == null) result = caseElement(measureGroup);
			if (result == null) result = caseBase(measureGroup);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.MEASURE_POPULATION: {
			final MeasurePopulation measurePopulation = (MeasurePopulation)theEObject;
			T result = caseMeasurePopulation(measurePopulation);
			if (result == null) result = caseBackboneElement(measurePopulation);
			if (result == null) result = caseElement(measurePopulation);
			if (result == null) result = caseBase(measurePopulation);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.MEASURE_REPORT: {
			final MeasureReport measureReport = (MeasureReport)theEObject;
			T result = caseMeasureReport(measureReport);
			if (result == null) result = caseDomainResource(measureReport);
			if (result == null) result = caseResource(measureReport);
			if (result == null) result = caseBase(measureReport);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.MEASURE_REPORT_COMPONENT: {
			final MeasureReportComponent measureReportComponent = (MeasureReportComponent)theEObject;
			T result = caseMeasureReportComponent(measureReportComponent);
			if (result == null) result = caseBackboneElement(measureReportComponent);
			if (result == null) result = caseElement(measureReportComponent);
			if (result == null) result = caseBase(measureReportComponent);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.MEASURE_REPORT_GROUP: {
			final MeasureReportGroup measureReportGroup = (MeasureReportGroup)theEObject;
			T result = caseMeasureReportGroup(measureReportGroup);
			if (result == null) result = caseBackboneElement(measureReportGroup);
			if (result == null) result = caseElement(measureReportGroup);
			if (result == null) result = caseBase(measureReportGroup);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.MEASURE_REPORT_POPULATION: {
			final MeasureReportPopulation measureReportPopulation = (MeasureReportPopulation)theEObject;
			T result = caseMeasureReportPopulation(measureReportPopulation);
			if (result == null) result = caseBackboneElement(measureReportPopulation);
			if (result == null) result = caseElement(measureReportPopulation);
			if (result == null) result = caseBase(measureReportPopulation);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.MEASURE_REPORT_POPULATION1: {
			final MeasureReportPopulation1 measureReportPopulation1 = (MeasureReportPopulation1)theEObject;
			T result = caseMeasureReportPopulation1(measureReportPopulation1);
			if (result == null) result = caseBackboneElement(measureReportPopulation1);
			if (result == null) result = caseElement(measureReportPopulation1);
			if (result == null) result = caseBase(measureReportPopulation1);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.MEASURE_REPORT_STATUS: {
			final MeasureReportStatus measureReportStatus = (MeasureReportStatus)theEObject;
			T result = caseMeasureReportStatus(measureReportStatus);
			if (result == null) result = caseElement(measureReportStatus);
			if (result == null) result = caseBase(measureReportStatus);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.MEASURE_REPORT_STRATIFIER: {
			final MeasureReportStratifier measureReportStratifier = (MeasureReportStratifier)theEObject;
			T result = caseMeasureReportStratifier(measureReportStratifier);
			if (result == null) result = caseBackboneElement(measureReportStratifier);
			if (result == null) result = caseElement(measureReportStratifier);
			if (result == null) result = caseBase(measureReportStratifier);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.MEASURE_REPORT_STRATUM: {
			final MeasureReportStratum measureReportStratum = (MeasureReportStratum)theEObject;
			T result = caseMeasureReportStratum(measureReportStratum);
			if (result == null) result = caseBackboneElement(measureReportStratum);
			if (result == null) result = caseElement(measureReportStratum);
			if (result == null) result = caseBase(measureReportStratum);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.MEASURE_REPORT_TYPE: {
			final MeasureReportType measureReportType = (MeasureReportType)theEObject;
			T result = caseMeasureReportType(measureReportType);
			if (result == null) result = caseElement(measureReportType);
			if (result == null) result = caseBase(measureReportType);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.MEASURE_STRATIFIER: {
			final MeasureStratifier measureStratifier = (MeasureStratifier)theEObject;
			T result = caseMeasureStratifier(measureStratifier);
			if (result == null) result = caseBackboneElement(measureStratifier);
			if (result == null) result = caseElement(measureStratifier);
			if (result == null) result = caseBase(measureStratifier);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.MEASURE_SUPPLEMENTAL_DATA: {
			final MeasureSupplementalData measureSupplementalData = (MeasureSupplementalData)theEObject;
			T result = caseMeasureSupplementalData(measureSupplementalData);
			if (result == null) result = caseBackboneElement(measureSupplementalData);
			if (result == null) result = caseElement(measureSupplementalData);
			if (result == null) result = caseBase(measureSupplementalData);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.MEASURE_TERM: {
			final MeasureTerm measureTerm = (MeasureTerm)theEObject;
			T result = caseMeasureTerm(measureTerm);
			if (result == null) result = caseBackboneElement(measureTerm);
			if (result == null) result = caseElement(measureTerm);
			if (result == null) result = caseBase(measureTerm);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.MEDICATION: {
			final Medication medication = (Medication)theEObject;
			T result = caseMedication(medication);
			if (result == null) result = caseDomainResource(medication);
			if (result == null) result = caseResource(medication);
			if (result == null) result = caseBase(medication);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.MEDICATION_ADMINISTRATION: {
			final MedicationAdministration medicationAdministration = (MedicationAdministration)theEObject;
			T result = caseMedicationAdministration(medicationAdministration);
			if (result == null) result = caseDomainResource(medicationAdministration);
			if (result == null) result = caseResource(medicationAdministration);
			if (result == null) result = caseBase(medicationAdministration);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.MEDICATION_ADMINISTRATION_DOSAGE: {
			final MedicationAdministrationDosage medicationAdministrationDosage = (MedicationAdministrationDosage)theEObject;
			T result = caseMedicationAdministrationDosage(medicationAdministrationDosage);
			if (result == null) result = caseBackboneElement(medicationAdministrationDosage);
			if (result == null) result = caseElement(medicationAdministrationDosage);
			if (result == null) result = caseBase(medicationAdministrationDosage);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.MEDICATION_ADMINISTRATION_PERFORMER: {
			final MedicationAdministrationPerformer medicationAdministrationPerformer = (MedicationAdministrationPerformer)theEObject;
			T result = caseMedicationAdministrationPerformer(medicationAdministrationPerformer);
			if (result == null) result = caseBackboneElement(medicationAdministrationPerformer);
			if (result == null) result = caseElement(medicationAdministrationPerformer);
			if (result == null) result = caseBase(medicationAdministrationPerformer);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.MEDICATION_ADMINISTRATION_STATUS_CODES: {
			final MedicationAdministrationStatusCodes medicationAdministrationStatusCodes = (MedicationAdministrationStatusCodes)theEObject;
			T result = caseMedicationAdministrationStatusCodes(medicationAdministrationStatusCodes);
			if (result == null) result = caseElement(medicationAdministrationStatusCodes);
			if (result == null) result = caseBase(medicationAdministrationStatusCodes);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.MEDICATION_BATCH: {
			final MedicationBatch medicationBatch = (MedicationBatch)theEObject;
			T result = caseMedicationBatch(medicationBatch);
			if (result == null) result = caseBackboneElement(medicationBatch);
			if (result == null) result = caseElement(medicationBatch);
			if (result == null) result = caseBase(medicationBatch);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.MEDICATION_DISPENSE: {
			final MedicationDispense medicationDispense = (MedicationDispense)theEObject;
			T result = caseMedicationDispense(medicationDispense);
			if (result == null) result = caseDomainResource(medicationDispense);
			if (result == null) result = caseResource(medicationDispense);
			if (result == null) result = caseBase(medicationDispense);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.MEDICATION_DISPENSE_PERFORMER: {
			final MedicationDispensePerformer medicationDispensePerformer = (MedicationDispensePerformer)theEObject;
			T result = caseMedicationDispensePerformer(medicationDispensePerformer);
			if (result == null) result = caseBackboneElement(medicationDispensePerformer);
			if (result == null) result = caseElement(medicationDispensePerformer);
			if (result == null) result = caseBase(medicationDispensePerformer);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.MEDICATION_DISPENSE_STATUS_CODES: {
			final MedicationDispenseStatusCodes medicationDispenseStatusCodes = (MedicationDispenseStatusCodes)theEObject;
			T result = caseMedicationDispenseStatusCodes(medicationDispenseStatusCodes);
			if (result == null) result = caseElement(medicationDispenseStatusCodes);
			if (result == null) result = caseBase(medicationDispenseStatusCodes);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.MEDICATION_DISPENSE_SUBSTITUTION: {
			final MedicationDispenseSubstitution medicationDispenseSubstitution = (MedicationDispenseSubstitution)theEObject;
			T result = caseMedicationDispenseSubstitution(medicationDispenseSubstitution);
			if (result == null) result = caseBackboneElement(medicationDispenseSubstitution);
			if (result == null) result = caseElement(medicationDispenseSubstitution);
			if (result == null) result = caseBase(medicationDispenseSubstitution);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.MEDICATION_INGREDIENT: {
			final MedicationIngredient medicationIngredient = (MedicationIngredient)theEObject;
			T result = caseMedicationIngredient(medicationIngredient);
			if (result == null) result = caseBackboneElement(medicationIngredient);
			if (result == null) result = caseElement(medicationIngredient);
			if (result == null) result = caseBase(medicationIngredient);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.MEDICATION_KNOWLEDGE: {
			final MedicationKnowledge medicationKnowledge = (MedicationKnowledge)theEObject;
			T result = caseMedicationKnowledge(medicationKnowledge);
			if (result == null) result = caseMetadataResource(medicationKnowledge);
			if (result == null) result = caseCanonicalResource(medicationKnowledge);
			if (result == null) result = caseDomainResource(medicationKnowledge);
			if (result == null) result = caseResource(medicationKnowledge);
			if (result == null) result = caseBase(medicationKnowledge);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.MEDICATION_KNOWLEDGE_COST: {
			final MedicationKnowledgeCost medicationKnowledgeCost = (MedicationKnowledgeCost)theEObject;
			T result = caseMedicationKnowledgeCost(medicationKnowledgeCost);
			if (result == null) result = caseBackboneElement(medicationKnowledgeCost);
			if (result == null) result = caseElement(medicationKnowledgeCost);
			if (result == null) result = caseBase(medicationKnowledgeCost);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.MEDICATION_KNOWLEDGE_DEFINITIONAL: {
			final MedicationKnowledgeDefinitional medicationKnowledgeDefinitional = (MedicationKnowledgeDefinitional)theEObject;
			T result = caseMedicationKnowledgeDefinitional(medicationKnowledgeDefinitional);
			if (result == null) result = caseBackboneElement(medicationKnowledgeDefinitional);
			if (result == null) result = caseElement(medicationKnowledgeDefinitional);
			if (result == null) result = caseBase(medicationKnowledgeDefinitional);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.MEDICATION_KNOWLEDGE_DOSAGE: {
			final MedicationKnowledgeDosage medicationKnowledgeDosage = (MedicationKnowledgeDosage)theEObject;
			T result = caseMedicationKnowledgeDosage(medicationKnowledgeDosage);
			if (result == null) result = caseBackboneElement(medicationKnowledgeDosage);
			if (result == null) result = caseElement(medicationKnowledgeDosage);
			if (result == null) result = caseBase(medicationKnowledgeDosage);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.MEDICATION_KNOWLEDGE_DOSING_GUIDELINE: {
			final MedicationKnowledgeDosingGuideline medicationKnowledgeDosingGuideline = (MedicationKnowledgeDosingGuideline)theEObject;
			T result = caseMedicationKnowledgeDosingGuideline(medicationKnowledgeDosingGuideline);
			if (result == null) result = caseBackboneElement(medicationKnowledgeDosingGuideline);
			if (result == null) result = caseElement(medicationKnowledgeDosingGuideline);
			if (result == null) result = caseBase(medicationKnowledgeDosingGuideline);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.MEDICATION_KNOWLEDGE_DRUG_CHARACTERISTIC: {
			final MedicationKnowledgeDrugCharacteristic medicationKnowledgeDrugCharacteristic = (MedicationKnowledgeDrugCharacteristic)theEObject;
			T result = caseMedicationKnowledgeDrugCharacteristic(medicationKnowledgeDrugCharacteristic);
			if (result == null) result = caseBackboneElement(medicationKnowledgeDrugCharacteristic);
			if (result == null) result = caseElement(medicationKnowledgeDrugCharacteristic);
			if (result == null) result = caseBase(medicationKnowledgeDrugCharacteristic);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.MEDICATION_KNOWLEDGE_ENVIRONMENTAL_SETTING: {
			final MedicationKnowledgeEnvironmentalSetting medicationKnowledgeEnvironmentalSetting = (MedicationKnowledgeEnvironmentalSetting)theEObject;
			T result = caseMedicationKnowledgeEnvironmentalSetting(medicationKnowledgeEnvironmentalSetting);
			if (result == null) result = caseBackboneElement(medicationKnowledgeEnvironmentalSetting);
			if (result == null) result = caseElement(medicationKnowledgeEnvironmentalSetting);
			if (result == null) result = caseBase(medicationKnowledgeEnvironmentalSetting);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.MEDICATION_KNOWLEDGE_INDICATION_GUIDELINE: {
			final MedicationKnowledgeIndicationGuideline medicationKnowledgeIndicationGuideline = (MedicationKnowledgeIndicationGuideline)theEObject;
			T result = caseMedicationKnowledgeIndicationGuideline(medicationKnowledgeIndicationGuideline);
			if (result == null) result = caseBackboneElement(medicationKnowledgeIndicationGuideline);
			if (result == null) result = caseElement(medicationKnowledgeIndicationGuideline);
			if (result == null) result = caseBase(medicationKnowledgeIndicationGuideline);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.MEDICATION_KNOWLEDGE_INGREDIENT: {
			final MedicationKnowledgeIngredient medicationKnowledgeIngredient = (MedicationKnowledgeIngredient)theEObject;
			T result = caseMedicationKnowledgeIngredient(medicationKnowledgeIngredient);
			if (result == null) result = caseBackboneElement(medicationKnowledgeIngredient);
			if (result == null) result = caseElement(medicationKnowledgeIngredient);
			if (result == null) result = caseBase(medicationKnowledgeIngredient);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.MEDICATION_KNOWLEDGE_MAX_DISPENSE: {
			final MedicationKnowledgeMaxDispense medicationKnowledgeMaxDispense = (MedicationKnowledgeMaxDispense)theEObject;
			T result = caseMedicationKnowledgeMaxDispense(medicationKnowledgeMaxDispense);
			if (result == null) result = caseBackboneElement(medicationKnowledgeMaxDispense);
			if (result == null) result = caseElement(medicationKnowledgeMaxDispense);
			if (result == null) result = caseBase(medicationKnowledgeMaxDispense);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.MEDICATION_KNOWLEDGE_MEDICINE_CLASSIFICATION: {
			final MedicationKnowledgeMedicineClassification medicationKnowledgeMedicineClassification = (MedicationKnowledgeMedicineClassification)theEObject;
			T result = caseMedicationKnowledgeMedicineClassification(medicationKnowledgeMedicineClassification);
			if (result == null) result = caseBackboneElement(medicationKnowledgeMedicineClassification);
			if (result == null) result = caseElement(medicationKnowledgeMedicineClassification);
			if (result == null) result = caseBase(medicationKnowledgeMedicineClassification);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.MEDICATION_KNOWLEDGE_MONITORING_PROGRAM: {
			final MedicationKnowledgeMonitoringProgram medicationKnowledgeMonitoringProgram = (MedicationKnowledgeMonitoringProgram)theEObject;
			T result = caseMedicationKnowledgeMonitoringProgram(medicationKnowledgeMonitoringProgram);
			if (result == null) result = caseBackboneElement(medicationKnowledgeMonitoringProgram);
			if (result == null) result = caseElement(medicationKnowledgeMonitoringProgram);
			if (result == null) result = caseBase(medicationKnowledgeMonitoringProgram);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.MEDICATION_KNOWLEDGE_MONOGRAPH: {
			final MedicationKnowledgeMonograph medicationKnowledgeMonograph = (MedicationKnowledgeMonograph)theEObject;
			T result = caseMedicationKnowledgeMonograph(medicationKnowledgeMonograph);
			if (result == null) result = caseBackboneElement(medicationKnowledgeMonograph);
			if (result == null) result = caseElement(medicationKnowledgeMonograph);
			if (result == null) result = caseBase(medicationKnowledgeMonograph);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.MEDICATION_KNOWLEDGE_PACKAGING: {
			final MedicationKnowledgePackaging medicationKnowledgePackaging = (MedicationKnowledgePackaging)theEObject;
			T result = caseMedicationKnowledgePackaging(medicationKnowledgePackaging);
			if (result == null) result = caseBackboneElement(medicationKnowledgePackaging);
			if (result == null) result = caseElement(medicationKnowledgePackaging);
			if (result == null) result = caseBase(medicationKnowledgePackaging);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.MEDICATION_KNOWLEDGE_PATIENT_CHARACTERISTIC: {
			final MedicationKnowledgePatientCharacteristic medicationKnowledgePatientCharacteristic = (MedicationKnowledgePatientCharacteristic)theEObject;
			T result = caseMedicationKnowledgePatientCharacteristic(medicationKnowledgePatientCharacteristic);
			if (result == null) result = caseBackboneElement(medicationKnowledgePatientCharacteristic);
			if (result == null) result = caseElement(medicationKnowledgePatientCharacteristic);
			if (result == null) result = caseBase(medicationKnowledgePatientCharacteristic);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.MEDICATION_KNOWLEDGE_REGULATORY: {
			final MedicationKnowledgeRegulatory medicationKnowledgeRegulatory = (MedicationKnowledgeRegulatory)theEObject;
			T result = caseMedicationKnowledgeRegulatory(medicationKnowledgeRegulatory);
			if (result == null) result = caseBackboneElement(medicationKnowledgeRegulatory);
			if (result == null) result = caseElement(medicationKnowledgeRegulatory);
			if (result == null) result = caseBase(medicationKnowledgeRegulatory);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.MEDICATION_KNOWLEDGE_RELATED_MEDICATION_KNOWLEDGE: {
			final MedicationKnowledgeRelatedMedicationKnowledge medicationKnowledgeRelatedMedicationKnowledge = (MedicationKnowledgeRelatedMedicationKnowledge)theEObject;
			T result = caseMedicationKnowledgeRelatedMedicationKnowledge(medicationKnowledgeRelatedMedicationKnowledge);
			if (result == null) result = caseBackboneElement(medicationKnowledgeRelatedMedicationKnowledge);
			if (result == null) result = caseElement(medicationKnowledgeRelatedMedicationKnowledge);
			if (result == null) result = caseBase(medicationKnowledgeRelatedMedicationKnowledge);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.MEDICATION_KNOWLEDGE_STATUS_CODES: {
			final MedicationKnowledgeStatusCodes medicationKnowledgeStatusCodes = (MedicationKnowledgeStatusCodes)theEObject;
			T result = caseMedicationKnowledgeStatusCodes(medicationKnowledgeStatusCodes);
			if (result == null) result = caseElement(medicationKnowledgeStatusCodes);
			if (result == null) result = caseBase(medicationKnowledgeStatusCodes);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.MEDICATION_KNOWLEDGE_STORAGE_GUIDELINE: {
			final MedicationKnowledgeStorageGuideline medicationKnowledgeStorageGuideline = (MedicationKnowledgeStorageGuideline)theEObject;
			T result = caseMedicationKnowledgeStorageGuideline(medicationKnowledgeStorageGuideline);
			if (result == null) result = caseBackboneElement(medicationKnowledgeStorageGuideline);
			if (result == null) result = caseElement(medicationKnowledgeStorageGuideline);
			if (result == null) result = caseBase(medicationKnowledgeStorageGuideline);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.MEDICATION_KNOWLEDGE_SUBSTITUTION: {
			final MedicationKnowledgeSubstitution medicationKnowledgeSubstitution = (MedicationKnowledgeSubstitution)theEObject;
			T result = caseMedicationKnowledgeSubstitution(medicationKnowledgeSubstitution);
			if (result == null) result = caseBackboneElement(medicationKnowledgeSubstitution);
			if (result == null) result = caseElement(medicationKnowledgeSubstitution);
			if (result == null) result = caseBase(medicationKnowledgeSubstitution);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.MEDICATION_REQUEST: {
			final MedicationRequest medicationRequest = (MedicationRequest)theEObject;
			T result = caseMedicationRequest(medicationRequest);
			if (result == null) result = caseDomainResource(medicationRequest);
			if (result == null) result = caseResource(medicationRequest);
			if (result == null) result = caseBase(medicationRequest);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.MEDICATION_REQUEST_DISPENSE_REQUEST: {
			final MedicationRequestDispenseRequest medicationRequestDispenseRequest = (MedicationRequestDispenseRequest)theEObject;
			T result = caseMedicationRequestDispenseRequest(medicationRequestDispenseRequest);
			if (result == null) result = caseBackboneElement(medicationRequestDispenseRequest);
			if (result == null) result = caseElement(medicationRequestDispenseRequest);
			if (result == null) result = caseBase(medicationRequestDispenseRequest);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.MEDICATION_REQUEST_INITIAL_FILL: {
			final MedicationRequestInitialFill medicationRequestInitialFill = (MedicationRequestInitialFill)theEObject;
			T result = caseMedicationRequestInitialFill(medicationRequestInitialFill);
			if (result == null) result = caseBackboneElement(medicationRequestInitialFill);
			if (result == null) result = caseElement(medicationRequestInitialFill);
			if (result == null) result = caseBase(medicationRequestInitialFill);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.MEDICATION_REQUEST_INTENT: {
			final MedicationRequestIntent medicationRequestIntent = (MedicationRequestIntent)theEObject;
			T result = caseMedicationRequestIntent(medicationRequestIntent);
			if (result == null) result = caseElement(medicationRequestIntent);
			if (result == null) result = caseBase(medicationRequestIntent);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.MEDICATIONREQUEST_STATUS: {
			final MedicationrequestStatus medicationrequestStatus = (MedicationrequestStatus)theEObject;
			T result = caseMedicationrequestStatus(medicationrequestStatus);
			if (result == null) result = caseElement(medicationrequestStatus);
			if (result == null) result = caseBase(medicationrequestStatus);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.MEDICATION_REQUEST_SUBSTITUTION: {
			final MedicationRequestSubstitution medicationRequestSubstitution = (MedicationRequestSubstitution)theEObject;
			T result = caseMedicationRequestSubstitution(medicationRequestSubstitution);
			if (result == null) result = caseBackboneElement(medicationRequestSubstitution);
			if (result == null) result = caseElement(medicationRequestSubstitution);
			if (result == null) result = caseBase(medicationRequestSubstitution);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.MEDICATION_STATEMENT: {
			final MedicationStatement medicationStatement = (MedicationStatement)theEObject;
			T result = caseMedicationStatement(medicationStatement);
			if (result == null) result = caseDomainResource(medicationStatement);
			if (result == null) result = caseResource(medicationStatement);
			if (result == null) result = caseBase(medicationStatement);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.MEDICATION_STATEMENT_ADHERENCE: {
			final MedicationStatementAdherence medicationStatementAdherence = (MedicationStatementAdherence)theEObject;
			T result = caseMedicationStatementAdherence(medicationStatementAdherence);
			if (result == null) result = caseBackboneElement(medicationStatementAdherence);
			if (result == null) result = caseElement(medicationStatementAdherence);
			if (result == null) result = caseBase(medicationStatementAdherence);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.MEDICATION_STATEMENT_STATUS_CODES: {
			final MedicationStatementStatusCodes medicationStatementStatusCodes = (MedicationStatementStatusCodes)theEObject;
			T result = caseMedicationStatementStatusCodes(medicationStatementStatusCodes);
			if (result == null) result = caseElement(medicationStatementStatusCodes);
			if (result == null) result = caseBase(medicationStatementStatusCodes);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.MEDICATION_STATUS_CODES: {
			final MedicationStatusCodes medicationStatusCodes = (MedicationStatusCodes)theEObject;
			T result = caseMedicationStatusCodes(medicationStatusCodes);
			if (result == null) result = caseElement(medicationStatusCodes);
			if (result == null) result = caseBase(medicationStatusCodes);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.MEDICINAL_PRODUCT_DEFINITION: {
			final MedicinalProductDefinition medicinalProductDefinition = (MedicinalProductDefinition)theEObject;
			T result = caseMedicinalProductDefinition(medicinalProductDefinition);
			if (result == null) result = caseDomainResource(medicinalProductDefinition);
			if (result == null) result = caseResource(medicinalProductDefinition);
			if (result == null) result = caseBase(medicinalProductDefinition);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.MEDICINAL_PRODUCT_DEFINITION_CHARACTERISTIC: {
			final MedicinalProductDefinitionCharacteristic medicinalProductDefinitionCharacteristic = (MedicinalProductDefinitionCharacteristic)theEObject;
			T result = caseMedicinalProductDefinitionCharacteristic(medicinalProductDefinitionCharacteristic);
			if (result == null) result = caseBackboneElement(medicinalProductDefinitionCharacteristic);
			if (result == null) result = caseElement(medicinalProductDefinitionCharacteristic);
			if (result == null) result = caseBase(medicinalProductDefinitionCharacteristic);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.MEDICINAL_PRODUCT_DEFINITION_CONTACT: {
			final MedicinalProductDefinitionContact medicinalProductDefinitionContact = (MedicinalProductDefinitionContact)theEObject;
			T result = caseMedicinalProductDefinitionContact(medicinalProductDefinitionContact);
			if (result == null) result = caseBackboneElement(medicinalProductDefinitionContact);
			if (result == null) result = caseElement(medicinalProductDefinitionContact);
			if (result == null) result = caseBase(medicinalProductDefinitionContact);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.MEDICINAL_PRODUCT_DEFINITION_CROSS_REFERENCE: {
			final MedicinalProductDefinitionCrossReference medicinalProductDefinitionCrossReference = (MedicinalProductDefinitionCrossReference)theEObject;
			T result = caseMedicinalProductDefinitionCrossReference(medicinalProductDefinitionCrossReference);
			if (result == null) result = caseBackboneElement(medicinalProductDefinitionCrossReference);
			if (result == null) result = caseElement(medicinalProductDefinitionCrossReference);
			if (result == null) result = caseBase(medicinalProductDefinitionCrossReference);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.MEDICINAL_PRODUCT_DEFINITION_NAME: {
			final MedicinalProductDefinitionName medicinalProductDefinitionName = (MedicinalProductDefinitionName)theEObject;
			T result = caseMedicinalProductDefinitionName(medicinalProductDefinitionName);
			if (result == null) result = caseBackboneElement(medicinalProductDefinitionName);
			if (result == null) result = caseElement(medicinalProductDefinitionName);
			if (result == null) result = caseBase(medicinalProductDefinitionName);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.MEDICINAL_PRODUCT_DEFINITION_OPERATION: {
			final MedicinalProductDefinitionOperation medicinalProductDefinitionOperation = (MedicinalProductDefinitionOperation)theEObject;
			T result = caseMedicinalProductDefinitionOperation(medicinalProductDefinitionOperation);
			if (result == null) result = caseBackboneElement(medicinalProductDefinitionOperation);
			if (result == null) result = caseElement(medicinalProductDefinitionOperation);
			if (result == null) result = caseBase(medicinalProductDefinitionOperation);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.MEDICINAL_PRODUCT_DEFINITION_PART: {
			final MedicinalProductDefinitionPart medicinalProductDefinitionPart = (MedicinalProductDefinitionPart)theEObject;
			T result = caseMedicinalProductDefinitionPart(medicinalProductDefinitionPart);
			if (result == null) result = caseBackboneElement(medicinalProductDefinitionPart);
			if (result == null) result = caseElement(medicinalProductDefinitionPart);
			if (result == null) result = caseBase(medicinalProductDefinitionPart);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.MEDICINAL_PRODUCT_DEFINITION_USAGE: {
			final MedicinalProductDefinitionUsage medicinalProductDefinitionUsage = (MedicinalProductDefinitionUsage)theEObject;
			T result = caseMedicinalProductDefinitionUsage(medicinalProductDefinitionUsage);
			if (result == null) result = caseBackboneElement(medicinalProductDefinitionUsage);
			if (result == null) result = caseElement(medicinalProductDefinitionUsage);
			if (result == null) result = caseBase(medicinalProductDefinitionUsage);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.MESSAGE_DEFINITION: {
			final MessageDefinition messageDefinition = (MessageDefinition)theEObject;
			T result = caseMessageDefinition(messageDefinition);
			if (result == null) result = caseCanonicalResource(messageDefinition);
			if (result == null) result = caseDomainResource(messageDefinition);
			if (result == null) result = caseResource(messageDefinition);
			if (result == null) result = caseBase(messageDefinition);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.MESSAGE_DEFINITION_ALLOWED_RESPONSE: {
			final MessageDefinitionAllowedResponse messageDefinitionAllowedResponse = (MessageDefinitionAllowedResponse)theEObject;
			T result = caseMessageDefinitionAllowedResponse(messageDefinitionAllowedResponse);
			if (result == null) result = caseBackboneElement(messageDefinitionAllowedResponse);
			if (result == null) result = caseElement(messageDefinitionAllowedResponse);
			if (result == null) result = caseBase(messageDefinitionAllowedResponse);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.MESSAGE_DEFINITION_FOCUS: {
			final MessageDefinitionFocus messageDefinitionFocus = (MessageDefinitionFocus)theEObject;
			T result = caseMessageDefinitionFocus(messageDefinitionFocus);
			if (result == null) result = caseBackboneElement(messageDefinitionFocus);
			if (result == null) result = caseElement(messageDefinitionFocus);
			if (result == null) result = caseBase(messageDefinitionFocus);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.MESSAGE_HEADER: {
			final MessageHeader messageHeader = (MessageHeader)theEObject;
			T result = caseMessageHeader(messageHeader);
			if (result == null) result = caseDomainResource(messageHeader);
			if (result == null) result = caseResource(messageHeader);
			if (result == null) result = caseBase(messageHeader);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.MESSAGE_HEADER_DESTINATION: {
			final MessageHeaderDestination messageHeaderDestination = (MessageHeaderDestination)theEObject;
			T result = caseMessageHeaderDestination(messageHeaderDestination);
			if (result == null) result = caseBackboneElement(messageHeaderDestination);
			if (result == null) result = caseElement(messageHeaderDestination);
			if (result == null) result = caseBase(messageHeaderDestination);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.MESSAGE_HEADER_RESPONSE: {
			final MessageHeaderResponse messageHeaderResponse = (MessageHeaderResponse)theEObject;
			T result = caseMessageHeaderResponse(messageHeaderResponse);
			if (result == null) result = caseBackboneElement(messageHeaderResponse);
			if (result == null) result = caseElement(messageHeaderResponse);
			if (result == null) result = caseBase(messageHeaderResponse);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.MESSAGEHEADER_RESPONSE_REQUEST: {
			final MessageheaderResponseRequest messageheaderResponseRequest = (MessageheaderResponseRequest)theEObject;
			T result = caseMessageheaderResponseRequest(messageheaderResponseRequest);
			if (result == null) result = caseElement(messageheaderResponseRequest);
			if (result == null) result = caseBase(messageheaderResponseRequest);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.MESSAGE_HEADER_SOURCE: {
			final MessageHeaderSource messageHeaderSource = (MessageHeaderSource)theEObject;
			T result = caseMessageHeaderSource(messageHeaderSource);
			if (result == null) result = caseBackboneElement(messageHeaderSource);
			if (result == null) result = caseElement(messageHeaderSource);
			if (result == null) result = caseBase(messageHeaderSource);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.MESSAGE_SIGNIFICANCE_CATEGORY: {
			final MessageSignificanceCategory messageSignificanceCategory = (MessageSignificanceCategory)theEObject;
			T result = caseMessageSignificanceCategory(messageSignificanceCategory);
			if (result == null) result = caseElement(messageSignificanceCategory);
			if (result == null) result = caseBase(messageSignificanceCategory);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.META: {
			final Meta meta = (Meta)theEObject;
			T result = caseMeta(meta);
			if (result == null) result = caseDataType(meta);
			if (result == null) result = caseElement(meta);
			if (result == null) result = caseBase(meta);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.METADATA_RESOURCE: {
			final MetadataResource metadataResource = (MetadataResource)theEObject;
			T result = caseMetadataResource(metadataResource);
			if (result == null) result = caseCanonicalResource(metadataResource);
			if (result == null) result = caseDomainResource(metadataResource);
			if (result == null) result = caseResource(metadataResource);
			if (result == null) result = caseBase(metadataResource);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.MOLECULAR_SEQUENCE: {
			final MolecularSequence molecularSequence = (MolecularSequence)theEObject;
			T result = caseMolecularSequence(molecularSequence);
			if (result == null) result = caseDomainResource(molecularSequence);
			if (result == null) result = caseResource(molecularSequence);
			if (result == null) result = caseBase(molecularSequence);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.MOLECULAR_SEQUENCE_EDIT: {
			final MolecularSequenceEdit molecularSequenceEdit = (MolecularSequenceEdit)theEObject;
			T result = caseMolecularSequenceEdit(molecularSequenceEdit);
			if (result == null) result = caseBackboneElement(molecularSequenceEdit);
			if (result == null) result = caseElement(molecularSequenceEdit);
			if (result == null) result = caseBase(molecularSequenceEdit);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.MOLECULAR_SEQUENCE_RELATIVE: {
			final MolecularSequenceRelative molecularSequenceRelative = (MolecularSequenceRelative)theEObject;
			T result = caseMolecularSequenceRelative(molecularSequenceRelative);
			if (result == null) result = caseBackboneElement(molecularSequenceRelative);
			if (result == null) result = caseElement(molecularSequenceRelative);
			if (result == null) result = caseBase(molecularSequenceRelative);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.MOLECULAR_SEQUENCE_STARTING_SEQUENCE: {
			final MolecularSequenceStartingSequence molecularSequenceStartingSequence = (MolecularSequenceStartingSequence)theEObject;
			T result = caseMolecularSequenceStartingSequence(molecularSequenceStartingSequence);
			if (result == null) result = caseBackboneElement(molecularSequenceStartingSequence);
			if (result == null) result = caseElement(molecularSequenceStartingSequence);
			if (result == null) result = caseBase(molecularSequenceStartingSequence);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.MONETARY_COMPONENT: {
			final MonetaryComponent monetaryComponent = (MonetaryComponent)theEObject;
			T result = caseMonetaryComponent(monetaryComponent);
			if (result == null) result = caseDataType(monetaryComponent);
			if (result == null) result = caseElement(monetaryComponent);
			if (result == null) result = caseBase(monetaryComponent);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.MONEY: {
			final Money money = (Money)theEObject;
			T result = caseMoney(money);
			if (result == null) result = caseDataType(money);
			if (result == null) result = caseElement(money);
			if (result == null) result = caseBase(money);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.NAME_USE: {
			final NameUse nameUse = (NameUse)theEObject;
			T result = caseNameUse(nameUse);
			if (result == null) result = caseElement(nameUse);
			if (result == null) result = caseBase(nameUse);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.NAMING_SYSTEM: {
			final NamingSystem namingSystem = (NamingSystem)theEObject;
			T result = caseNamingSystem(namingSystem);
			if (result == null) result = caseMetadataResource(namingSystem);
			if (result == null) result = caseCanonicalResource(namingSystem);
			if (result == null) result = caseDomainResource(namingSystem);
			if (result == null) result = caseResource(namingSystem);
			if (result == null) result = caseBase(namingSystem);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.NAMING_SYSTEM_IDENTIFIER_TYPE: {
			final NamingSystemIdentifierType namingSystemIdentifierType = (NamingSystemIdentifierType)theEObject;
			T result = caseNamingSystemIdentifierType(namingSystemIdentifierType);
			if (result == null) result = caseElement(namingSystemIdentifierType);
			if (result == null) result = caseBase(namingSystemIdentifierType);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.NAMING_SYSTEM_TYPE: {
			final NamingSystemType namingSystemType = (NamingSystemType)theEObject;
			T result = caseNamingSystemType(namingSystemType);
			if (result == null) result = caseElement(namingSystemType);
			if (result == null) result = caseBase(namingSystemType);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.NAMING_SYSTEM_UNIQUE_ID: {
			final NamingSystemUniqueId namingSystemUniqueId = (NamingSystemUniqueId)theEObject;
			T result = caseNamingSystemUniqueId(namingSystemUniqueId);
			if (result == null) result = caseBackboneElement(namingSystemUniqueId);
			if (result == null) result = caseElement(namingSystemUniqueId);
			if (result == null) result = caseBase(namingSystemUniqueId);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.NARRATIVE: {
			final Narrative narrative = (Narrative)theEObject;
			T result = caseNarrative(narrative);
			if (result == null) result = caseDataType(narrative);
			if (result == null) result = caseElement(narrative);
			if (result == null) result = caseBase(narrative);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.NARRATIVE_STATUS: {
			final NarrativeStatus narrativeStatus = (NarrativeStatus)theEObject;
			T result = caseNarrativeStatus(narrativeStatus);
			if (result == null) result = caseElement(narrativeStatus);
			if (result == null) result = caseBase(narrativeStatus);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.NOTE_TYPE: {
			final NoteType noteType = (NoteType)theEObject;
			T result = caseNoteType(noteType);
			if (result == null) result = caseElement(noteType);
			if (result == null) result = caseBase(noteType);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.NUTRITION_INTAKE: {
			final NutritionIntake nutritionIntake = (NutritionIntake)theEObject;
			T result = caseNutritionIntake(nutritionIntake);
			if (result == null) result = caseDomainResource(nutritionIntake);
			if (result == null) result = caseResource(nutritionIntake);
			if (result == null) result = caseBase(nutritionIntake);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.NUTRITION_INTAKE_CONSUMED_ITEM: {
			final NutritionIntakeConsumedItem nutritionIntakeConsumedItem = (NutritionIntakeConsumedItem)theEObject;
			T result = caseNutritionIntakeConsumedItem(nutritionIntakeConsumedItem);
			if (result == null) result = caseBackboneElement(nutritionIntakeConsumedItem);
			if (result == null) result = caseElement(nutritionIntakeConsumedItem);
			if (result == null) result = caseBase(nutritionIntakeConsumedItem);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.NUTRITION_INTAKE_INGREDIENT_LABEL: {
			final NutritionIntakeIngredientLabel nutritionIntakeIngredientLabel = (NutritionIntakeIngredientLabel)theEObject;
			T result = caseNutritionIntakeIngredientLabel(nutritionIntakeIngredientLabel);
			if (result == null) result = caseBackboneElement(nutritionIntakeIngredientLabel);
			if (result == null) result = caseElement(nutritionIntakeIngredientLabel);
			if (result == null) result = caseBase(nutritionIntakeIngredientLabel);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.NUTRITION_INTAKE_PERFORMER: {
			final NutritionIntakePerformer nutritionIntakePerformer = (NutritionIntakePerformer)theEObject;
			T result = caseNutritionIntakePerformer(nutritionIntakePerformer);
			if (result == null) result = caseBackboneElement(nutritionIntakePerformer);
			if (result == null) result = caseElement(nutritionIntakePerformer);
			if (result == null) result = caseBase(nutritionIntakePerformer);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.NUTRITION_ORDER: {
			final NutritionOrder nutritionOrder = (NutritionOrder)theEObject;
			T result = caseNutritionOrder(nutritionOrder);
			if (result == null) result = caseDomainResource(nutritionOrder);
			if (result == null) result = caseResource(nutritionOrder);
			if (result == null) result = caseBase(nutritionOrder);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.NUTRITION_ORDER_ADDITIVE: {
			final NutritionOrderAdditive nutritionOrderAdditive = (NutritionOrderAdditive)theEObject;
			T result = caseNutritionOrderAdditive(nutritionOrderAdditive);
			if (result == null) result = caseBackboneElement(nutritionOrderAdditive);
			if (result == null) result = caseElement(nutritionOrderAdditive);
			if (result == null) result = caseBase(nutritionOrderAdditive);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.NUTRITION_ORDER_ADMINISTRATION: {
			final NutritionOrderAdministration nutritionOrderAdministration = (NutritionOrderAdministration)theEObject;
			T result = caseNutritionOrderAdministration(nutritionOrderAdministration);
			if (result == null) result = caseBackboneElement(nutritionOrderAdministration);
			if (result == null) result = caseElement(nutritionOrderAdministration);
			if (result == null) result = caseBase(nutritionOrderAdministration);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.NUTRITION_ORDER_ENTERAL_FORMULA: {
			final NutritionOrderEnteralFormula nutritionOrderEnteralFormula = (NutritionOrderEnteralFormula)theEObject;
			T result = caseNutritionOrderEnteralFormula(nutritionOrderEnteralFormula);
			if (result == null) result = caseBackboneElement(nutritionOrderEnteralFormula);
			if (result == null) result = caseElement(nutritionOrderEnteralFormula);
			if (result == null) result = caseBase(nutritionOrderEnteralFormula);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.NUTRITION_ORDER_NUTRIENT: {
			final NutritionOrderNutrient nutritionOrderNutrient = (NutritionOrderNutrient)theEObject;
			T result = caseNutritionOrderNutrient(nutritionOrderNutrient);
			if (result == null) result = caseBackboneElement(nutritionOrderNutrient);
			if (result == null) result = caseElement(nutritionOrderNutrient);
			if (result == null) result = caseBase(nutritionOrderNutrient);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.NUTRITION_ORDER_ORAL_DIET: {
			final NutritionOrderOralDiet nutritionOrderOralDiet = (NutritionOrderOralDiet)theEObject;
			T result = caseNutritionOrderOralDiet(nutritionOrderOralDiet);
			if (result == null) result = caseBackboneElement(nutritionOrderOralDiet);
			if (result == null) result = caseElement(nutritionOrderOralDiet);
			if (result == null) result = caseBase(nutritionOrderOralDiet);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.NUTRITION_ORDER_SCHEDULE: {
			final NutritionOrderSchedule nutritionOrderSchedule = (NutritionOrderSchedule)theEObject;
			T result = caseNutritionOrderSchedule(nutritionOrderSchedule);
			if (result == null) result = caseBackboneElement(nutritionOrderSchedule);
			if (result == null) result = caseElement(nutritionOrderSchedule);
			if (result == null) result = caseBase(nutritionOrderSchedule);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.NUTRITION_ORDER_SCHEDULE1: {
			final NutritionOrderSchedule1 nutritionOrderSchedule1 = (NutritionOrderSchedule1)theEObject;
			T result = caseNutritionOrderSchedule1(nutritionOrderSchedule1);
			if (result == null) result = caseBackboneElement(nutritionOrderSchedule1);
			if (result == null) result = caseElement(nutritionOrderSchedule1);
			if (result == null) result = caseBase(nutritionOrderSchedule1);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.NUTRITION_ORDER_SCHEDULE2: {
			final NutritionOrderSchedule2 nutritionOrderSchedule2 = (NutritionOrderSchedule2)theEObject;
			T result = caseNutritionOrderSchedule2(nutritionOrderSchedule2);
			if (result == null) result = caseBackboneElement(nutritionOrderSchedule2);
			if (result == null) result = caseElement(nutritionOrderSchedule2);
			if (result == null) result = caseBase(nutritionOrderSchedule2);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.NUTRITION_ORDER_SUPPLEMENT: {
			final NutritionOrderSupplement nutritionOrderSupplement = (NutritionOrderSupplement)theEObject;
			T result = caseNutritionOrderSupplement(nutritionOrderSupplement);
			if (result == null) result = caseBackboneElement(nutritionOrderSupplement);
			if (result == null) result = caseElement(nutritionOrderSupplement);
			if (result == null) result = caseBase(nutritionOrderSupplement);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.NUTRITION_ORDER_TEXTURE: {
			final NutritionOrderTexture nutritionOrderTexture = (NutritionOrderTexture)theEObject;
			T result = caseNutritionOrderTexture(nutritionOrderTexture);
			if (result == null) result = caseBackboneElement(nutritionOrderTexture);
			if (result == null) result = caseElement(nutritionOrderTexture);
			if (result == null) result = caseBase(nutritionOrderTexture);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.NUTRITION_PRODUCT: {
			final NutritionProduct nutritionProduct = (NutritionProduct)theEObject;
			T result = caseNutritionProduct(nutritionProduct);
			if (result == null) result = caseDomainResource(nutritionProduct);
			if (result == null) result = caseResource(nutritionProduct);
			if (result == null) result = caseBase(nutritionProduct);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.NUTRITION_PRODUCT_CHARACTERISTIC: {
			final NutritionProductCharacteristic nutritionProductCharacteristic = (NutritionProductCharacteristic)theEObject;
			T result = caseNutritionProductCharacteristic(nutritionProductCharacteristic);
			if (result == null) result = caseBackboneElement(nutritionProductCharacteristic);
			if (result == null) result = caseElement(nutritionProductCharacteristic);
			if (result == null) result = caseBase(nutritionProductCharacteristic);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.NUTRITION_PRODUCT_INGREDIENT: {
			final NutritionProductIngredient nutritionProductIngredient = (NutritionProductIngredient)theEObject;
			T result = caseNutritionProductIngredient(nutritionProductIngredient);
			if (result == null) result = caseBackboneElement(nutritionProductIngredient);
			if (result == null) result = caseElement(nutritionProductIngredient);
			if (result == null) result = caseBase(nutritionProductIngredient);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.NUTRITION_PRODUCT_INSTANCE: {
			final NutritionProductInstance nutritionProductInstance = (NutritionProductInstance)theEObject;
			T result = caseNutritionProductInstance(nutritionProductInstance);
			if (result == null) result = caseBackboneElement(nutritionProductInstance);
			if (result == null) result = caseElement(nutritionProductInstance);
			if (result == null) result = caseBase(nutritionProductInstance);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.NUTRITION_PRODUCT_NUTRIENT: {
			final NutritionProductNutrient nutritionProductNutrient = (NutritionProductNutrient)theEObject;
			T result = caseNutritionProductNutrient(nutritionProductNutrient);
			if (result == null) result = caseBackboneElement(nutritionProductNutrient);
			if (result == null) result = caseElement(nutritionProductNutrient);
			if (result == null) result = caseBase(nutritionProductNutrient);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.NUTRITION_PRODUCT_STATUS: {
			final NutritionProductStatus nutritionProductStatus = (NutritionProductStatus)theEObject;
			T result = caseNutritionProductStatus(nutritionProductStatus);
			if (result == null) result = caseElement(nutritionProductStatus);
			if (result == null) result = caseBase(nutritionProductStatus);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.OBSERVATION: {
			final Observation observation = (Observation)theEObject;
			T result = caseObservation(observation);
			if (result == null) result = caseDomainResource(observation);
			if (result == null) result = caseResource(observation);
			if (result == null) result = caseBase(observation);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.OBSERVATION_COMPONENT: {
			final ObservationComponent observationComponent = (ObservationComponent)theEObject;
			T result = caseObservationComponent(observationComponent);
			if (result == null) result = caseBackboneElement(observationComponent);
			if (result == null) result = caseElement(observationComponent);
			if (result == null) result = caseBase(observationComponent);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.OBSERVATION_DATA_TYPE: {
			final ObservationDataType observationDataType = (ObservationDataType)theEObject;
			T result = caseObservationDataType(observationDataType);
			if (result == null) result = caseElement(observationDataType);
			if (result == null) result = caseBase(observationDataType);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.OBSERVATION_DEFINITION: {
			final ObservationDefinition observationDefinition = (ObservationDefinition)theEObject;
			T result = caseObservationDefinition(observationDefinition);
			if (result == null) result = caseMetadataResource(observationDefinition);
			if (result == null) result = caseCanonicalResource(observationDefinition);
			if (result == null) result = caseDomainResource(observationDefinition);
			if (result == null) result = caseResource(observationDefinition);
			if (result == null) result = caseBase(observationDefinition);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.OBSERVATION_DEFINITION_COMPONENT: {
			final ObservationDefinitionComponent observationDefinitionComponent = (ObservationDefinitionComponent)theEObject;
			T result = caseObservationDefinitionComponent(observationDefinitionComponent);
			if (result == null) result = caseBackboneElement(observationDefinitionComponent);
			if (result == null) result = caseElement(observationDefinitionComponent);
			if (result == null) result = caseBase(observationDefinitionComponent);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.OBSERVATION_DEFINITION_QUALIFIED_VALUE: {
			final ObservationDefinitionQualifiedValue observationDefinitionQualifiedValue = (ObservationDefinitionQualifiedValue)theEObject;
			T result = caseObservationDefinitionQualifiedValue(observationDefinitionQualifiedValue);
			if (result == null) result = caseBackboneElement(observationDefinitionQualifiedValue);
			if (result == null) result = caseElement(observationDefinitionQualifiedValue);
			if (result == null) result = caseBase(observationDefinitionQualifiedValue);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.OBSERVATION_RANGE_CATEGORY: {
			final ObservationRangeCategory observationRangeCategory = (ObservationRangeCategory)theEObject;
			T result = caseObservationRangeCategory(observationRangeCategory);
			if (result == null) result = caseElement(observationRangeCategory);
			if (result == null) result = caseBase(observationRangeCategory);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.OBSERVATION_REFERENCE_RANGE: {
			final ObservationReferenceRange observationReferenceRange = (ObservationReferenceRange)theEObject;
			T result = caseObservationReferenceRange(observationReferenceRange);
			if (result == null) result = caseBackboneElement(observationReferenceRange);
			if (result == null) result = caseElement(observationReferenceRange);
			if (result == null) result = caseBase(observationReferenceRange);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.OBSERVATION_STATUS: {
			final ObservationStatus observationStatus = (ObservationStatus)theEObject;
			T result = caseObservationStatus(observationStatus);
			if (result == null) result = caseElement(observationStatus);
			if (result == null) result = caseBase(observationStatus);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.OBSERVATION_TRIGGERED_BY: {
			final ObservationTriggeredBy observationTriggeredBy = (ObservationTriggeredBy)theEObject;
			T result = caseObservationTriggeredBy(observationTriggeredBy);
			if (result == null) result = caseBackboneElement(observationTriggeredBy);
			if (result == null) result = caseElement(observationTriggeredBy);
			if (result == null) result = caseBase(observationTriggeredBy);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.OID: {
			final Oid oid = (Oid)theEObject;
			T result = caseOid(oid);
			if (result == null) result = caseElement(oid);
			if (result == null) result = caseBase(oid);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.OPERATION_DEFINITION: {
			final OperationDefinition operationDefinition = (OperationDefinition)theEObject;
			T result = caseOperationDefinition(operationDefinition);
			if (result == null) result = caseCanonicalResource(operationDefinition);
			if (result == null) result = caseDomainResource(operationDefinition);
			if (result == null) result = caseResource(operationDefinition);
			if (result == null) result = caseBase(operationDefinition);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.OPERATION_DEFINITION_BINDING: {
			final OperationDefinitionBinding operationDefinitionBinding = (OperationDefinitionBinding)theEObject;
			T result = caseOperationDefinitionBinding(operationDefinitionBinding);
			if (result == null) result = caseBackboneElement(operationDefinitionBinding);
			if (result == null) result = caseElement(operationDefinitionBinding);
			if (result == null) result = caseBase(operationDefinitionBinding);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.OPERATION_DEFINITION_OVERLOAD: {
			final OperationDefinitionOverload operationDefinitionOverload = (OperationDefinitionOverload)theEObject;
			T result = caseOperationDefinitionOverload(operationDefinitionOverload);
			if (result == null) result = caseBackboneElement(operationDefinitionOverload);
			if (result == null) result = caseElement(operationDefinitionOverload);
			if (result == null) result = caseBase(operationDefinitionOverload);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.OPERATION_DEFINITION_PARAMETER: {
			final OperationDefinitionParameter operationDefinitionParameter = (OperationDefinitionParameter)theEObject;
			T result = caseOperationDefinitionParameter(operationDefinitionParameter);
			if (result == null) result = caseBackboneElement(operationDefinitionParameter);
			if (result == null) result = caseElement(operationDefinitionParameter);
			if (result == null) result = caseBase(operationDefinitionParameter);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.OPERATION_DEFINITION_REFERENCED_FROM: {
			final OperationDefinitionReferencedFrom operationDefinitionReferencedFrom = (OperationDefinitionReferencedFrom)theEObject;
			T result = caseOperationDefinitionReferencedFrom(operationDefinitionReferencedFrom);
			if (result == null) result = caseBackboneElement(operationDefinitionReferencedFrom);
			if (result == null) result = caseElement(operationDefinitionReferencedFrom);
			if (result == null) result = caseBase(operationDefinitionReferencedFrom);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.OPERATION_KIND: {
			final OperationKind operationKind = (OperationKind)theEObject;
			T result = caseOperationKind(operationKind);
			if (result == null) result = caseElement(operationKind);
			if (result == null) result = caseBase(operationKind);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.OPERATION_OUTCOME: {
			final OperationOutcome operationOutcome = (OperationOutcome)theEObject;
			T result = caseOperationOutcome(operationOutcome);
			if (result == null) result = caseDomainResource(operationOutcome);
			if (result == null) result = caseResource(operationOutcome);
			if (result == null) result = caseBase(operationOutcome);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.OPERATION_OUTCOME_CODES: {
			final OperationOutcomeCodes operationOutcomeCodes = (OperationOutcomeCodes)theEObject;
			T result = caseOperationOutcomeCodes(operationOutcomeCodes);
			if (result == null) result = caseElement(operationOutcomeCodes);
			if (result == null) result = caseBase(operationOutcomeCodes);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.OPERATION_OUTCOME_ISSUE: {
			final OperationOutcomeIssue operationOutcomeIssue = (OperationOutcomeIssue)theEObject;
			T result = caseOperationOutcomeIssue(operationOutcomeIssue);
			if (result == null) result = caseBackboneElement(operationOutcomeIssue);
			if (result == null) result = caseElement(operationOutcomeIssue);
			if (result == null) result = caseBase(operationOutcomeIssue);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.OPERATION_PARAMETER_SCOPE: {
			final OperationParameterScope operationParameterScope = (OperationParameterScope)theEObject;
			T result = caseOperationParameterScope(operationParameterScope);
			if (result == null) result = caseElement(operationParameterScope);
			if (result == null) result = caseBase(operationParameterScope);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.OPERATION_PARAMETER_USE: {
			final OperationParameterUse operationParameterUse = (OperationParameterUse)theEObject;
			T result = caseOperationParameterUse(operationParameterUse);
			if (result == null) result = caseElement(operationParameterUse);
			if (result == null) result = caseBase(operationParameterUse);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.ORGANIZATION: {
			final Organization organization = (Organization)theEObject;
			T result = caseOrganization(organization);
			if (result == null) result = caseDomainResource(organization);
			if (result == null) result = caseResource(organization);
			if (result == null) result = caseBase(organization);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.ORGANIZATION_AFFILIATION: {
			final OrganizationAffiliation organizationAffiliation = (OrganizationAffiliation)theEObject;
			T result = caseOrganizationAffiliation(organizationAffiliation);
			if (result == null) result = caseDomainResource(organizationAffiliation);
			if (result == null) result = caseResource(organizationAffiliation);
			if (result == null) result = caseBase(organizationAffiliation);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.ORGANIZATION_QUALIFICATION: {
			final OrganizationQualification organizationQualification = (OrganizationQualification)theEObject;
			T result = caseOrganizationQualification(organizationQualification);
			if (result == null) result = caseBackboneElement(organizationQualification);
			if (result == null) result = caseElement(organizationQualification);
			if (result == null) result = caseBase(organizationQualification);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.ORIENTATION_TYPE: {
			final OrientationType orientationType = (OrientationType)theEObject;
			T result = caseOrientationType(orientationType);
			if (result == null) result = caseElement(orientationType);
			if (result == null) result = caseBase(orientationType);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.PACKAGED_PRODUCT_DEFINITION: {
			final PackagedProductDefinition packagedProductDefinition = (PackagedProductDefinition)theEObject;
			T result = casePackagedProductDefinition(packagedProductDefinition);
			if (result == null) result = caseDomainResource(packagedProductDefinition);
			if (result == null) result = caseResource(packagedProductDefinition);
			if (result == null) result = caseBase(packagedProductDefinition);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.PACKAGED_PRODUCT_DEFINITION_CONTAINED_ITEM: {
			final PackagedProductDefinitionContainedItem packagedProductDefinitionContainedItem = (PackagedProductDefinitionContainedItem)theEObject;
			T result = casePackagedProductDefinitionContainedItem(packagedProductDefinitionContainedItem);
			if (result == null) result = caseBackboneElement(packagedProductDefinitionContainedItem);
			if (result == null) result = caseElement(packagedProductDefinitionContainedItem);
			if (result == null) result = caseBase(packagedProductDefinitionContainedItem);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.PACKAGED_PRODUCT_DEFINITION_LEGAL_STATUS_OF_SUPPLY: {
			final PackagedProductDefinitionLegalStatusOfSupply packagedProductDefinitionLegalStatusOfSupply = (PackagedProductDefinitionLegalStatusOfSupply)theEObject;
			T result = casePackagedProductDefinitionLegalStatusOfSupply(packagedProductDefinitionLegalStatusOfSupply);
			if (result == null) result = caseBackboneElement(packagedProductDefinitionLegalStatusOfSupply);
			if (result == null) result = caseElement(packagedProductDefinitionLegalStatusOfSupply);
			if (result == null) result = caseBase(packagedProductDefinitionLegalStatusOfSupply);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.PACKAGED_PRODUCT_DEFINITION_PACKAGING: {
			final PackagedProductDefinitionPackaging packagedProductDefinitionPackaging = (PackagedProductDefinitionPackaging)theEObject;
			T result = casePackagedProductDefinitionPackaging(packagedProductDefinitionPackaging);
			if (result == null) result = caseBackboneElement(packagedProductDefinitionPackaging);
			if (result == null) result = caseElement(packagedProductDefinitionPackaging);
			if (result == null) result = caseBase(packagedProductDefinitionPackaging);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.PACKAGED_PRODUCT_DEFINITION_PROPERTY: {
			final PackagedProductDefinitionProperty packagedProductDefinitionProperty = (PackagedProductDefinitionProperty)theEObject;
			T result = casePackagedProductDefinitionProperty(packagedProductDefinitionProperty);
			if (result == null) result = caseBackboneElement(packagedProductDefinitionProperty);
			if (result == null) result = caseElement(packagedProductDefinitionProperty);
			if (result == null) result = caseBase(packagedProductDefinitionProperty);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.PARAMETER_DEFINITION: {
			final ParameterDefinition parameterDefinition = (ParameterDefinition)theEObject;
			T result = caseParameterDefinition(parameterDefinition);
			if (result == null) result = caseDataType(parameterDefinition);
			if (result == null) result = caseElement(parameterDefinition);
			if (result == null) result = caseBase(parameterDefinition);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.PARAMETERS: {
			final Parameters parameters = (Parameters)theEObject;
			T result = caseParameters(parameters);
			if (result == null) result = caseResource(parameters);
			if (result == null) result = caseBase(parameters);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.PARAMETERS_PARAMETER: {
			final ParametersParameter parametersParameter = (ParametersParameter)theEObject;
			T result = caseParametersParameter(parametersParameter);
			if (result == null) result = caseBackboneElement(parametersParameter);
			if (result == null) result = caseElement(parametersParameter);
			if (result == null) result = caseBase(parametersParameter);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.PARTICIPANT_RESOURCE_TYPES: {
			final ParticipantResourceTypes participantResourceTypes = (ParticipantResourceTypes)theEObject;
			T result = caseParticipantResourceTypes(participantResourceTypes);
			if (result == null) result = caseElement(participantResourceTypes);
			if (result == null) result = caseBase(participantResourceTypes);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.PARTICIPATION_STATUS: {
			final ParticipationStatus participationStatus = (ParticipationStatus)theEObject;
			T result = caseParticipationStatus(participationStatus);
			if (result == null) result = caseElement(participationStatus);
			if (result == null) result = caseBase(participationStatus);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.PATIENT: {
			final Patient patient = (Patient)theEObject;
			T result = casePatient(patient);
			if (result == null) result = caseDomainResource(patient);
			if (result == null) result = caseResource(patient);
			if (result == null) result = caseBase(patient);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.PATIENT_COMMUNICATION: {
			final PatientCommunication patientCommunication = (PatientCommunication)theEObject;
			T result = casePatientCommunication(patientCommunication);
			if (result == null) result = caseBackboneElement(patientCommunication);
			if (result == null) result = caseElement(patientCommunication);
			if (result == null) result = caseBase(patientCommunication);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.PATIENT_CONTACT: {
			final PatientContact patientContact = (PatientContact)theEObject;
			T result = casePatientContact(patientContact);
			if (result == null) result = caseBackboneElement(patientContact);
			if (result == null) result = caseElement(patientContact);
			if (result == null) result = caseBase(patientContact);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.PATIENT_LINK: {
			final PatientLink patientLink = (PatientLink)theEObject;
			T result = casePatientLink(patientLink);
			if (result == null) result = caseBackboneElement(patientLink);
			if (result == null) result = caseElement(patientLink);
			if (result == null) result = caseBase(patientLink);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.PAYMENT_NOTICE: {
			final PaymentNotice paymentNotice = (PaymentNotice)theEObject;
			T result = casePaymentNotice(paymentNotice);
			if (result == null) result = caseDomainResource(paymentNotice);
			if (result == null) result = caseResource(paymentNotice);
			if (result == null) result = caseBase(paymentNotice);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.PAYMENT_OUTCOME: {
			final PaymentOutcome paymentOutcome = (PaymentOutcome)theEObject;
			T result = casePaymentOutcome(paymentOutcome);
			if (result == null) result = caseElement(paymentOutcome);
			if (result == null) result = caseBase(paymentOutcome);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.PAYMENT_RECONCILIATION: {
			final PaymentReconciliation paymentReconciliation = (PaymentReconciliation)theEObject;
			T result = casePaymentReconciliation(paymentReconciliation);
			if (result == null) result = caseDomainResource(paymentReconciliation);
			if (result == null) result = caseResource(paymentReconciliation);
			if (result == null) result = caseBase(paymentReconciliation);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.PAYMENT_RECONCILIATION_ALLOCATION: {
			final PaymentReconciliationAllocation paymentReconciliationAllocation = (PaymentReconciliationAllocation)theEObject;
			T result = casePaymentReconciliationAllocation(paymentReconciliationAllocation);
			if (result == null) result = caseBackboneElement(paymentReconciliationAllocation);
			if (result == null) result = caseElement(paymentReconciliationAllocation);
			if (result == null) result = caseBase(paymentReconciliationAllocation);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.PAYMENT_RECONCILIATION_PROCESS_NOTE: {
			final PaymentReconciliationProcessNote paymentReconciliationProcessNote = (PaymentReconciliationProcessNote)theEObject;
			T result = casePaymentReconciliationProcessNote(paymentReconciliationProcessNote);
			if (result == null) result = caseBackboneElement(paymentReconciliationProcessNote);
			if (result == null) result = caseElement(paymentReconciliationProcessNote);
			if (result == null) result = caseBase(paymentReconciliationProcessNote);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.PERIOD: {
			final Period period = (Period)theEObject;
			T result = casePeriod(period);
			if (result == null) result = caseDataType(period);
			if (result == null) result = caseElement(period);
			if (result == null) result = caseBase(period);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.PERMISSION: {
			final Permission permission = (Permission)theEObject;
			T result = casePermission(permission);
			if (result == null) result = caseDomainResource(permission);
			if (result == null) result = caseResource(permission);
			if (result == null) result = caseBase(permission);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.PERMISSION_ACTIVITY: {
			final PermissionActivity permissionActivity = (PermissionActivity)theEObject;
			T result = casePermissionActivity(permissionActivity);
			if (result == null) result = caseBackboneElement(permissionActivity);
			if (result == null) result = caseElement(permissionActivity);
			if (result == null) result = caseBase(permissionActivity);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.PERMISSION_DATA: {
			final PermissionData permissionData = (PermissionData)theEObject;
			T result = casePermissionData(permissionData);
			if (result == null) result = caseBackboneElement(permissionData);
			if (result == null) result = caseElement(permissionData);
			if (result == null) result = caseBase(permissionData);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.PERMISSION_JUSTIFICATION: {
			final PermissionJustification permissionJustification = (PermissionJustification)theEObject;
			T result = casePermissionJustification(permissionJustification);
			if (result == null) result = caseBackboneElement(permissionJustification);
			if (result == null) result = caseElement(permissionJustification);
			if (result == null) result = caseBase(permissionJustification);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.PERMISSION_RESOURCE: {
			final PermissionResource permissionResource = (PermissionResource)theEObject;
			T result = casePermissionResource(permissionResource);
			if (result == null) result = caseBackboneElement(permissionResource);
			if (result == null) result = caseElement(permissionResource);
			if (result == null) result = caseBase(permissionResource);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.PERMISSION_RULE: {
			final PermissionRule permissionRule = (PermissionRule)theEObject;
			T result = casePermissionRule(permissionRule);
			if (result == null) result = caseBackboneElement(permissionRule);
			if (result == null) result = caseElement(permissionRule);
			if (result == null) result = caseBase(permissionRule);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.PERMISSION_RULE_COMBINING: {
			final PermissionRuleCombining permissionRuleCombining = (PermissionRuleCombining)theEObject;
			T result = casePermissionRuleCombining(permissionRuleCombining);
			if (result == null) result = caseElement(permissionRuleCombining);
			if (result == null) result = caseBase(permissionRuleCombining);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.PERMISSION_STATUS: {
			final PermissionStatus permissionStatus = (PermissionStatus)theEObject;
			T result = casePermissionStatus(permissionStatus);
			if (result == null) result = caseElement(permissionStatus);
			if (result == null) result = caseBase(permissionStatus);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.PERSON: {
			final Person person = (Person)theEObject;
			T result = casePerson(person);
			if (result == null) result = caseDomainResource(person);
			if (result == null) result = caseResource(person);
			if (result == null) result = caseBase(person);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.PERSON_COMMUNICATION: {
			final PersonCommunication personCommunication = (PersonCommunication)theEObject;
			T result = casePersonCommunication(personCommunication);
			if (result == null) result = caseBackboneElement(personCommunication);
			if (result == null) result = caseElement(personCommunication);
			if (result == null) result = caseBase(personCommunication);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.PERSON_LINK: {
			final PersonLink personLink = (PersonLink)theEObject;
			T result = casePersonLink(personLink);
			if (result == null) result = caseBackboneElement(personLink);
			if (result == null) result = caseElement(personLink);
			if (result == null) result = caseBase(personLink);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.PLAN_DEFINITION: {
			final PlanDefinition planDefinition = (PlanDefinition)theEObject;
			T result = casePlanDefinition(planDefinition);
			if (result == null) result = caseMetadataResource(planDefinition);
			if (result == null) result = caseCanonicalResource(planDefinition);
			if (result == null) result = caseDomainResource(planDefinition);
			if (result == null) result = caseResource(planDefinition);
			if (result == null) result = caseBase(planDefinition);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.PLAN_DEFINITION_ACTION: {
			final PlanDefinitionAction planDefinitionAction = (PlanDefinitionAction)theEObject;
			T result = casePlanDefinitionAction(planDefinitionAction);
			if (result == null) result = caseBackboneElement(planDefinitionAction);
			if (result == null) result = caseElement(planDefinitionAction);
			if (result == null) result = caseBase(planDefinitionAction);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.PLAN_DEFINITION_ACTOR: {
			final PlanDefinitionActor planDefinitionActor = (PlanDefinitionActor)theEObject;
			T result = casePlanDefinitionActor(planDefinitionActor);
			if (result == null) result = caseBackboneElement(planDefinitionActor);
			if (result == null) result = caseElement(planDefinitionActor);
			if (result == null) result = caseBase(planDefinitionActor);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.PLAN_DEFINITION_CONDITION: {
			final PlanDefinitionCondition planDefinitionCondition = (PlanDefinitionCondition)theEObject;
			T result = casePlanDefinitionCondition(planDefinitionCondition);
			if (result == null) result = caseBackboneElement(planDefinitionCondition);
			if (result == null) result = caseElement(planDefinitionCondition);
			if (result == null) result = caseBase(planDefinitionCondition);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.PLAN_DEFINITION_DYNAMIC_VALUE: {
			final PlanDefinitionDynamicValue planDefinitionDynamicValue = (PlanDefinitionDynamicValue)theEObject;
			T result = casePlanDefinitionDynamicValue(planDefinitionDynamicValue);
			if (result == null) result = caseBackboneElement(planDefinitionDynamicValue);
			if (result == null) result = caseElement(planDefinitionDynamicValue);
			if (result == null) result = caseBase(planDefinitionDynamicValue);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.PLAN_DEFINITION_GOAL: {
			final PlanDefinitionGoal planDefinitionGoal = (PlanDefinitionGoal)theEObject;
			T result = casePlanDefinitionGoal(planDefinitionGoal);
			if (result == null) result = caseBackboneElement(planDefinitionGoal);
			if (result == null) result = caseElement(planDefinitionGoal);
			if (result == null) result = caseBase(planDefinitionGoal);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.PLAN_DEFINITION_INPUT: {
			final PlanDefinitionInput planDefinitionInput = (PlanDefinitionInput)theEObject;
			T result = casePlanDefinitionInput(planDefinitionInput);
			if (result == null) result = caseBackboneElement(planDefinitionInput);
			if (result == null) result = caseElement(planDefinitionInput);
			if (result == null) result = caseBase(planDefinitionInput);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.PLAN_DEFINITION_OPTION: {
			final PlanDefinitionOption planDefinitionOption = (PlanDefinitionOption)theEObject;
			T result = casePlanDefinitionOption(planDefinitionOption);
			if (result == null) result = caseBackboneElement(planDefinitionOption);
			if (result == null) result = caseElement(planDefinitionOption);
			if (result == null) result = caseBase(planDefinitionOption);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.PLAN_DEFINITION_OUTPUT: {
			final PlanDefinitionOutput planDefinitionOutput = (PlanDefinitionOutput)theEObject;
			T result = casePlanDefinitionOutput(planDefinitionOutput);
			if (result == null) result = caseBackboneElement(planDefinitionOutput);
			if (result == null) result = caseElement(planDefinitionOutput);
			if (result == null) result = caseBase(planDefinitionOutput);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.PLAN_DEFINITION_PARTICIPANT: {
			final PlanDefinitionParticipant planDefinitionParticipant = (PlanDefinitionParticipant)theEObject;
			T result = casePlanDefinitionParticipant(planDefinitionParticipant);
			if (result == null) result = caseBackboneElement(planDefinitionParticipant);
			if (result == null) result = caseElement(planDefinitionParticipant);
			if (result == null) result = caseBase(planDefinitionParticipant);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.PLAN_DEFINITION_RELATED_ACTION: {
			final PlanDefinitionRelatedAction planDefinitionRelatedAction = (PlanDefinitionRelatedAction)theEObject;
			T result = casePlanDefinitionRelatedAction(planDefinitionRelatedAction);
			if (result == null) result = caseBackboneElement(planDefinitionRelatedAction);
			if (result == null) result = caseElement(planDefinitionRelatedAction);
			if (result == null) result = caseBase(planDefinitionRelatedAction);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.PLAN_DEFINITION_TARGET: {
			final PlanDefinitionTarget planDefinitionTarget = (PlanDefinitionTarget)theEObject;
			T result = casePlanDefinitionTarget(planDefinitionTarget);
			if (result == null) result = caseBackboneElement(planDefinitionTarget);
			if (result == null) result = caseElement(planDefinitionTarget);
			if (result == null) result = caseBase(planDefinitionTarget);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.POSITIVE_INT: {
			final PositiveInt positiveInt = (PositiveInt)theEObject;
			T result = casePositiveInt(positiveInt);
			if (result == null) result = caseElement(positiveInt);
			if (result == null) result = caseBase(positiveInt);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.PRACTITIONER: {
			final Practitioner practitioner = (Practitioner)theEObject;
			T result = casePractitioner(practitioner);
			if (result == null) result = caseDomainResource(practitioner);
			if (result == null) result = caseResource(practitioner);
			if (result == null) result = caseBase(practitioner);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.PRACTITIONER_COMMUNICATION: {
			final PractitionerCommunication practitionerCommunication = (PractitionerCommunication)theEObject;
			T result = casePractitionerCommunication(practitionerCommunication);
			if (result == null) result = caseBackboneElement(practitionerCommunication);
			if (result == null) result = caseElement(practitionerCommunication);
			if (result == null) result = caseBase(practitionerCommunication);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.PRACTITIONER_QUALIFICATION: {
			final PractitionerQualification practitionerQualification = (PractitionerQualification)theEObject;
			T result = casePractitionerQualification(practitionerQualification);
			if (result == null) result = caseBackboneElement(practitionerQualification);
			if (result == null) result = caseElement(practitionerQualification);
			if (result == null) result = caseBase(practitionerQualification);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.PRACTITIONER_ROLE: {
			final PractitionerRole practitionerRole = (PractitionerRole)theEObject;
			T result = casePractitionerRole(practitionerRole);
			if (result == null) result = caseDomainResource(practitionerRole);
			if (result == null) result = caseResource(practitionerRole);
			if (result == null) result = caseBase(practitionerRole);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.PRIMITIVE_TYPE: {
			final PrimitiveType primitiveType = (PrimitiveType)theEObject;
			T result = casePrimitiveType(primitiveType);
			if (result == null) result = caseDataType(primitiveType);
			if (result == null) result = caseElement(primitiveType);
			if (result == null) result = caseBase(primitiveType);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.PROCEDURE: {
			final Procedure procedure = (Procedure)theEObject;
			T result = caseProcedure(procedure);
			if (result == null) result = caseDomainResource(procedure);
			if (result == null) result = caseResource(procedure);
			if (result == null) result = caseBase(procedure);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.PROCEDURE_FOCAL_DEVICE: {
			final ProcedureFocalDevice procedureFocalDevice = (ProcedureFocalDevice)theEObject;
			T result = caseProcedureFocalDevice(procedureFocalDevice);
			if (result == null) result = caseBackboneElement(procedureFocalDevice);
			if (result == null) result = caseElement(procedureFocalDevice);
			if (result == null) result = caseBase(procedureFocalDevice);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.PROCEDURE_PERFORMER: {
			final ProcedurePerformer procedurePerformer = (ProcedurePerformer)theEObject;
			T result = caseProcedurePerformer(procedurePerformer);
			if (result == null) result = caseBackboneElement(procedurePerformer);
			if (result == null) result = caseElement(procedurePerformer);
			if (result == null) result = caseBase(procedurePerformer);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.PRODUCT_SHELF_LIFE: {
			final ProductShelfLife productShelfLife = (ProductShelfLife)theEObject;
			T result = caseProductShelfLife(productShelfLife);
			if (result == null) result = caseBackboneType(productShelfLife);
			if (result == null) result = caseDataType(productShelfLife);
			if (result == null) result = caseElement(productShelfLife);
			if (result == null) result = caseBase(productShelfLife);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.PROPERTY_REPRESENTATION: {
			final PropertyRepresentation propertyRepresentation = (PropertyRepresentation)theEObject;
			T result = casePropertyRepresentation(propertyRepresentation);
			if (result == null) result = caseElement(propertyRepresentation);
			if (result == null) result = caseBase(propertyRepresentation);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.PROPERTY_TYPE: {
			final PropertyType propertyType = (PropertyType)theEObject;
			T result = casePropertyType(propertyType);
			if (result == null) result = caseElement(propertyType);
			if (result == null) result = caseBase(propertyType);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.PROVENANCE: {
			final Provenance provenance = (Provenance)theEObject;
			T result = caseProvenance(provenance);
			if (result == null) result = caseDomainResource(provenance);
			if (result == null) result = caseResource(provenance);
			if (result == null) result = caseBase(provenance);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.PROVENANCE_AGENT: {
			final ProvenanceAgent provenanceAgent = (ProvenanceAgent)theEObject;
			T result = caseProvenanceAgent(provenanceAgent);
			if (result == null) result = caseBackboneElement(provenanceAgent);
			if (result == null) result = caseElement(provenanceAgent);
			if (result == null) result = caseBase(provenanceAgent);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.PROVENANCE_ENTITY: {
			final ProvenanceEntity provenanceEntity = (ProvenanceEntity)theEObject;
			T result = caseProvenanceEntity(provenanceEntity);
			if (result == null) result = caseBackboneElement(provenanceEntity);
			if (result == null) result = caseElement(provenanceEntity);
			if (result == null) result = caseBase(provenanceEntity);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.PROVENANCE_ENTITY_ROLE: {
			final ProvenanceEntityRole provenanceEntityRole = (ProvenanceEntityRole)theEObject;
			T result = caseProvenanceEntityRole(provenanceEntityRole);
			if (result == null) result = caseElement(provenanceEntityRole);
			if (result == null) result = caseBase(provenanceEntityRole);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.PUBLICATION_STATUS: {
			final PublicationStatus publicationStatus = (PublicationStatus)theEObject;
			T result = casePublicationStatus(publicationStatus);
			if (result == null) result = caseElement(publicationStatus);
			if (result == null) result = caseBase(publicationStatus);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.QUANTITY: {
			final Quantity quantity = (Quantity)theEObject;
			T result = caseQuantity(quantity);
			if (result == null) result = caseDataType(quantity);
			if (result == null) result = caseElement(quantity);
			if (result == null) result = caseBase(quantity);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.QUANTITY_COMPARATOR: {
			final QuantityComparator quantityComparator = (QuantityComparator)theEObject;
			T result = caseQuantityComparator(quantityComparator);
			if (result == null) result = caseElement(quantityComparator);
			if (result == null) result = caseBase(quantityComparator);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.QUESTIONNAIRE: {
			final Questionnaire questionnaire = (Questionnaire)theEObject;
			T result = caseQuestionnaire(questionnaire);
			if (result == null) result = caseMetadataResource(questionnaire);
			if (result == null) result = caseCanonicalResource(questionnaire);
			if (result == null) result = caseDomainResource(questionnaire);
			if (result == null) result = caseResource(questionnaire);
			if (result == null) result = caseBase(questionnaire);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.QUESTIONNAIRE_ANSWER_CONSTRAINT: {
			final QuestionnaireAnswerConstraint questionnaireAnswerConstraint = (QuestionnaireAnswerConstraint)theEObject;
			T result = caseQuestionnaireAnswerConstraint(questionnaireAnswerConstraint);
			if (result == null) result = caseElement(questionnaireAnswerConstraint);
			if (result == null) result = caseBase(questionnaireAnswerConstraint);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.QUESTIONNAIRE_ANSWER_OPTION: {
			final QuestionnaireAnswerOption questionnaireAnswerOption = (QuestionnaireAnswerOption)theEObject;
			T result = caseQuestionnaireAnswerOption(questionnaireAnswerOption);
			if (result == null) result = caseBackboneElement(questionnaireAnswerOption);
			if (result == null) result = caseElement(questionnaireAnswerOption);
			if (result == null) result = caseBase(questionnaireAnswerOption);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.QUESTIONNAIRE_ENABLE_WHEN: {
			final QuestionnaireEnableWhen questionnaireEnableWhen = (QuestionnaireEnableWhen)theEObject;
			T result = caseQuestionnaireEnableWhen(questionnaireEnableWhen);
			if (result == null) result = caseBackboneElement(questionnaireEnableWhen);
			if (result == null) result = caseElement(questionnaireEnableWhen);
			if (result == null) result = caseBase(questionnaireEnableWhen);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.QUESTIONNAIRE_INITIAL: {
			final QuestionnaireInitial questionnaireInitial = (QuestionnaireInitial)theEObject;
			T result = caseQuestionnaireInitial(questionnaireInitial);
			if (result == null) result = caseBackboneElement(questionnaireInitial);
			if (result == null) result = caseElement(questionnaireInitial);
			if (result == null) result = caseBase(questionnaireInitial);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.QUESTIONNAIRE_ITEM: {
			final QuestionnaireItem questionnaireItem = (QuestionnaireItem)theEObject;
			T result = caseQuestionnaireItem(questionnaireItem);
			if (result == null) result = caseBackboneElement(questionnaireItem);
			if (result == null) result = caseElement(questionnaireItem);
			if (result == null) result = caseBase(questionnaireItem);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.QUESTIONNAIRE_ITEM_DISABLED_DISPLAY: {
			final QuestionnaireItemDisabledDisplay questionnaireItemDisabledDisplay = (QuestionnaireItemDisabledDisplay)theEObject;
			T result = caseQuestionnaireItemDisabledDisplay(questionnaireItemDisabledDisplay);
			if (result == null) result = caseElement(questionnaireItemDisabledDisplay);
			if (result == null) result = caseBase(questionnaireItemDisabledDisplay);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.QUESTIONNAIRE_ITEM_OPERATOR: {
			final QuestionnaireItemOperator questionnaireItemOperator = (QuestionnaireItemOperator)theEObject;
			T result = caseQuestionnaireItemOperator(questionnaireItemOperator);
			if (result == null) result = caseElement(questionnaireItemOperator);
			if (result == null) result = caseBase(questionnaireItemOperator);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.QUESTIONNAIRE_ITEM_TYPE: {
			final QuestionnaireItemType questionnaireItemType = (QuestionnaireItemType)theEObject;
			T result = caseQuestionnaireItemType(questionnaireItemType);
			if (result == null) result = caseElement(questionnaireItemType);
			if (result == null) result = caseBase(questionnaireItemType);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.QUESTIONNAIRE_RESPONSE: {
			final QuestionnaireResponse questionnaireResponse = (QuestionnaireResponse)theEObject;
			T result = caseQuestionnaireResponse(questionnaireResponse);
			if (result == null) result = caseDomainResource(questionnaireResponse);
			if (result == null) result = caseResource(questionnaireResponse);
			if (result == null) result = caseBase(questionnaireResponse);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.QUESTIONNAIRE_RESPONSE_ANSWER: {
			final QuestionnaireResponseAnswer questionnaireResponseAnswer = (QuestionnaireResponseAnswer)theEObject;
			T result = caseQuestionnaireResponseAnswer(questionnaireResponseAnswer);
			if (result == null) result = caseBackboneElement(questionnaireResponseAnswer);
			if (result == null) result = caseElement(questionnaireResponseAnswer);
			if (result == null) result = caseBase(questionnaireResponseAnswer);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.QUESTIONNAIRE_RESPONSE_ITEM: {
			final QuestionnaireResponseItem questionnaireResponseItem = (QuestionnaireResponseItem)theEObject;
			T result = caseQuestionnaireResponseItem(questionnaireResponseItem);
			if (result == null) result = caseBackboneElement(questionnaireResponseItem);
			if (result == null) result = caseElement(questionnaireResponseItem);
			if (result == null) result = caseBase(questionnaireResponseItem);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.QUESTIONNAIRE_RESPONSE_STATUS: {
			final QuestionnaireResponseStatus questionnaireResponseStatus = (QuestionnaireResponseStatus)theEObject;
			T result = caseQuestionnaireResponseStatus(questionnaireResponseStatus);
			if (result == null) result = caseElement(questionnaireResponseStatus);
			if (result == null) result = caseBase(questionnaireResponseStatus);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.RANGE: {
			final Range range = (Range)theEObject;
			T result = caseRange(range);
			if (result == null) result = caseDataType(range);
			if (result == null) result = caseElement(range);
			if (result == null) result = caseBase(range);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.RATIO: {
			final Ratio ratio = (Ratio)theEObject;
			T result = caseRatio(ratio);
			if (result == null) result = caseDataType(ratio);
			if (result == null) result = caseElement(ratio);
			if (result == null) result = caseBase(ratio);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.RATIO_RANGE: {
			final RatioRange ratioRange = (RatioRange)theEObject;
			T result = caseRatioRange(ratioRange);
			if (result == null) result = caseDataType(ratioRange);
			if (result == null) result = caseElement(ratioRange);
			if (result == null) result = caseBase(ratioRange);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.REFERENCE: {
			final Reference reference = (Reference)theEObject;
			T result = caseReference(reference);
			if (result == null) result = caseDataType(reference);
			if (result == null) result = caseElement(reference);
			if (result == null) result = caseBase(reference);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.REFERENCE_HANDLING_POLICY: {
			final ReferenceHandlingPolicy referenceHandlingPolicy = (ReferenceHandlingPolicy)theEObject;
			T result = caseReferenceHandlingPolicy(referenceHandlingPolicy);
			if (result == null) result = caseElement(referenceHandlingPolicy);
			if (result == null) result = caseBase(referenceHandlingPolicy);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.REFERENCE_VERSION_RULES: {
			final ReferenceVersionRules referenceVersionRules = (ReferenceVersionRules)theEObject;
			T result = caseReferenceVersionRules(referenceVersionRules);
			if (result == null) result = caseElement(referenceVersionRules);
			if (result == null) result = caseBase(referenceVersionRules);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.REGULATED_AUTHORIZATION: {
			final RegulatedAuthorization regulatedAuthorization = (RegulatedAuthorization)theEObject;
			T result = caseRegulatedAuthorization(regulatedAuthorization);
			if (result == null) result = caseDomainResource(regulatedAuthorization);
			if (result == null) result = caseResource(regulatedAuthorization);
			if (result == null) result = caseBase(regulatedAuthorization);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.REGULATED_AUTHORIZATION_CASE: {
			final RegulatedAuthorizationCase regulatedAuthorizationCase = (RegulatedAuthorizationCase)theEObject;
			T result = caseRegulatedAuthorizationCase(regulatedAuthorizationCase);
			if (result == null) result = caseBackboneElement(regulatedAuthorizationCase);
			if (result == null) result = caseElement(regulatedAuthorizationCase);
			if (result == null) result = caseBase(regulatedAuthorizationCase);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.RELATED_ARTIFACT: {
			final RelatedArtifact relatedArtifact = (RelatedArtifact)theEObject;
			T result = caseRelatedArtifact(relatedArtifact);
			if (result == null) result = caseDataType(relatedArtifact);
			if (result == null) result = caseElement(relatedArtifact);
			if (result == null) result = caseBase(relatedArtifact);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.RELATED_ARTIFACT_TYPE: {
			final RelatedArtifactType relatedArtifactType = (RelatedArtifactType)theEObject;
			T result = caseRelatedArtifactType(relatedArtifactType);
			if (result == null) result = caseElement(relatedArtifactType);
			if (result == null) result = caseBase(relatedArtifactType);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.RELATED_ARTIFACT_TYPE_EXPANDED: {
			final RelatedArtifactTypeExpanded relatedArtifactTypeExpanded = (RelatedArtifactTypeExpanded)theEObject;
			T result = caseRelatedArtifactTypeExpanded(relatedArtifactTypeExpanded);
			if (result == null) result = caseElement(relatedArtifactTypeExpanded);
			if (result == null) result = caseBase(relatedArtifactTypeExpanded);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.RELATED_PERSON: {
			final RelatedPerson relatedPerson = (RelatedPerson)theEObject;
			T result = caseRelatedPerson(relatedPerson);
			if (result == null) result = caseDomainResource(relatedPerson);
			if (result == null) result = caseResource(relatedPerson);
			if (result == null) result = caseBase(relatedPerson);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.RELATED_PERSON_COMMUNICATION: {
			final RelatedPersonCommunication relatedPersonCommunication = (RelatedPersonCommunication)theEObject;
			T result = caseRelatedPersonCommunication(relatedPersonCommunication);
			if (result == null) result = caseBackboneElement(relatedPersonCommunication);
			if (result == null) result = caseElement(relatedPersonCommunication);
			if (result == null) result = caseBase(relatedPersonCommunication);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.REMITTANCE_OUTCOME: {
			final RemittanceOutcome remittanceOutcome = (RemittanceOutcome)theEObject;
			T result = caseRemittanceOutcome(remittanceOutcome);
			if (result == null) result = caseElement(remittanceOutcome);
			if (result == null) result = caseBase(remittanceOutcome);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.REPORT_RELATIONSHIP_TYPE: {
			final ReportRelationshipType reportRelationshipType = (ReportRelationshipType)theEObject;
			T result = caseReportRelationshipType(reportRelationshipType);
			if (result == null) result = caseElement(reportRelationshipType);
			if (result == null) result = caseBase(reportRelationshipType);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.REQUEST_INTENT: {
			final RequestIntent requestIntent = (RequestIntent)theEObject;
			T result = caseRequestIntent(requestIntent);
			if (result == null) result = caseElement(requestIntent);
			if (result == null) result = caseBase(requestIntent);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.REQUEST_ORCHESTRATION: {
			final RequestOrchestration requestOrchestration = (RequestOrchestration)theEObject;
			T result = caseRequestOrchestration(requestOrchestration);
			if (result == null) result = caseDomainResource(requestOrchestration);
			if (result == null) result = caseResource(requestOrchestration);
			if (result == null) result = caseBase(requestOrchestration);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.REQUEST_ORCHESTRATION_ACTION: {
			final RequestOrchestrationAction requestOrchestrationAction = (RequestOrchestrationAction)theEObject;
			T result = caseRequestOrchestrationAction(requestOrchestrationAction);
			if (result == null) result = caseBackboneElement(requestOrchestrationAction);
			if (result == null) result = caseElement(requestOrchestrationAction);
			if (result == null) result = caseBase(requestOrchestrationAction);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.REQUEST_ORCHESTRATION_CONDITION: {
			final RequestOrchestrationCondition requestOrchestrationCondition = (RequestOrchestrationCondition)theEObject;
			T result = caseRequestOrchestrationCondition(requestOrchestrationCondition);
			if (result == null) result = caseBackboneElement(requestOrchestrationCondition);
			if (result == null) result = caseElement(requestOrchestrationCondition);
			if (result == null) result = caseBase(requestOrchestrationCondition);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.REQUEST_ORCHESTRATION_DYNAMIC_VALUE: {
			final RequestOrchestrationDynamicValue requestOrchestrationDynamicValue = (RequestOrchestrationDynamicValue)theEObject;
			T result = caseRequestOrchestrationDynamicValue(requestOrchestrationDynamicValue);
			if (result == null) result = caseBackboneElement(requestOrchestrationDynamicValue);
			if (result == null) result = caseElement(requestOrchestrationDynamicValue);
			if (result == null) result = caseBase(requestOrchestrationDynamicValue);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.REQUEST_ORCHESTRATION_INPUT: {
			final RequestOrchestrationInput requestOrchestrationInput = (RequestOrchestrationInput)theEObject;
			T result = caseRequestOrchestrationInput(requestOrchestrationInput);
			if (result == null) result = caseBackboneElement(requestOrchestrationInput);
			if (result == null) result = caseElement(requestOrchestrationInput);
			if (result == null) result = caseBase(requestOrchestrationInput);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.REQUEST_ORCHESTRATION_OUTPUT: {
			final RequestOrchestrationOutput requestOrchestrationOutput = (RequestOrchestrationOutput)theEObject;
			T result = caseRequestOrchestrationOutput(requestOrchestrationOutput);
			if (result == null) result = caseBackboneElement(requestOrchestrationOutput);
			if (result == null) result = caseElement(requestOrchestrationOutput);
			if (result == null) result = caseBase(requestOrchestrationOutput);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.REQUEST_ORCHESTRATION_PARTICIPANT: {
			final RequestOrchestrationParticipant requestOrchestrationParticipant = (RequestOrchestrationParticipant)theEObject;
			T result = caseRequestOrchestrationParticipant(requestOrchestrationParticipant);
			if (result == null) result = caseBackboneElement(requestOrchestrationParticipant);
			if (result == null) result = caseElement(requestOrchestrationParticipant);
			if (result == null) result = caseBase(requestOrchestrationParticipant);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.REQUEST_ORCHESTRATION_RELATED_ACTION: {
			final RequestOrchestrationRelatedAction requestOrchestrationRelatedAction = (RequestOrchestrationRelatedAction)theEObject;
			T result = caseRequestOrchestrationRelatedAction(requestOrchestrationRelatedAction);
			if (result == null) result = caseBackboneElement(requestOrchestrationRelatedAction);
			if (result == null) result = caseElement(requestOrchestrationRelatedAction);
			if (result == null) result = caseBase(requestOrchestrationRelatedAction);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.REQUEST_PRIORITY: {
			final RequestPriority requestPriority = (RequestPriority)theEObject;
			T result = caseRequestPriority(requestPriority);
			if (result == null) result = caseElement(requestPriority);
			if (result == null) result = caseBase(requestPriority);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.REQUEST_RESOURCE_TYPES: {
			final RequestResourceTypes requestResourceTypes = (RequestResourceTypes)theEObject;
			T result = caseRequestResourceTypes(requestResourceTypes);
			if (result == null) result = caseElement(requestResourceTypes);
			if (result == null) result = caseBase(requestResourceTypes);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.REQUEST_STATUS: {
			final RequestStatus requestStatus = (RequestStatus)theEObject;
			T result = caseRequestStatus(requestStatus);
			if (result == null) result = caseElement(requestStatus);
			if (result == null) result = caseBase(requestStatus);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.REQUIREMENTS: {
			final Requirements requirements = (Requirements)theEObject;
			T result = caseRequirements(requirements);
			if (result == null) result = caseCanonicalResource(requirements);
			if (result == null) result = caseDomainResource(requirements);
			if (result == null) result = caseResource(requirements);
			if (result == null) result = caseBase(requirements);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.REQUIREMENTS_STATEMENT: {
			final RequirementsStatement requirementsStatement = (RequirementsStatement)theEObject;
			T result = caseRequirementsStatement(requirementsStatement);
			if (result == null) result = caseBackboneElement(requirementsStatement);
			if (result == null) result = caseElement(requirementsStatement);
			if (result == null) result = caseBase(requirementsStatement);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.RESEARCH_STUDY: {
			final ResearchStudy researchStudy = (ResearchStudy)theEObject;
			T result = caseResearchStudy(researchStudy);
			if (result == null) result = caseDomainResource(researchStudy);
			if (result == null) result = caseResource(researchStudy);
			if (result == null) result = caseBase(researchStudy);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.RESEARCH_STUDY_ASSOCIATED_PARTY: {
			final ResearchStudyAssociatedParty researchStudyAssociatedParty = (ResearchStudyAssociatedParty)theEObject;
			T result = caseResearchStudyAssociatedParty(researchStudyAssociatedParty);
			if (result == null) result = caseBackboneElement(researchStudyAssociatedParty);
			if (result == null) result = caseElement(researchStudyAssociatedParty);
			if (result == null) result = caseBase(researchStudyAssociatedParty);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.RESEARCH_STUDY_COMPARISON_GROUP: {
			final ResearchStudyComparisonGroup researchStudyComparisonGroup = (ResearchStudyComparisonGroup)theEObject;
			T result = caseResearchStudyComparisonGroup(researchStudyComparisonGroup);
			if (result == null) result = caseBackboneElement(researchStudyComparisonGroup);
			if (result == null) result = caseElement(researchStudyComparisonGroup);
			if (result == null) result = caseBase(researchStudyComparisonGroup);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.RESEARCH_STUDY_LABEL: {
			final ResearchStudyLabel researchStudyLabel = (ResearchStudyLabel)theEObject;
			T result = caseResearchStudyLabel(researchStudyLabel);
			if (result == null) result = caseBackboneElement(researchStudyLabel);
			if (result == null) result = caseElement(researchStudyLabel);
			if (result == null) result = caseBase(researchStudyLabel);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.RESEARCH_STUDY_OBJECTIVE: {
			final ResearchStudyObjective researchStudyObjective = (ResearchStudyObjective)theEObject;
			T result = caseResearchStudyObjective(researchStudyObjective);
			if (result == null) result = caseBackboneElement(researchStudyObjective);
			if (result == null) result = caseElement(researchStudyObjective);
			if (result == null) result = caseBase(researchStudyObjective);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.RESEARCH_STUDY_OUTCOME_MEASURE: {
			final ResearchStudyOutcomeMeasure researchStudyOutcomeMeasure = (ResearchStudyOutcomeMeasure)theEObject;
			T result = caseResearchStudyOutcomeMeasure(researchStudyOutcomeMeasure);
			if (result == null) result = caseBackboneElement(researchStudyOutcomeMeasure);
			if (result == null) result = caseElement(researchStudyOutcomeMeasure);
			if (result == null) result = caseBase(researchStudyOutcomeMeasure);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.RESEARCH_STUDY_PROGRESS_STATUS: {
			final ResearchStudyProgressStatus researchStudyProgressStatus = (ResearchStudyProgressStatus)theEObject;
			T result = caseResearchStudyProgressStatus(researchStudyProgressStatus);
			if (result == null) result = caseBackboneElement(researchStudyProgressStatus);
			if (result == null) result = caseElement(researchStudyProgressStatus);
			if (result == null) result = caseBase(researchStudyProgressStatus);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.RESEARCH_STUDY_RECRUITMENT: {
			final ResearchStudyRecruitment researchStudyRecruitment = (ResearchStudyRecruitment)theEObject;
			T result = caseResearchStudyRecruitment(researchStudyRecruitment);
			if (result == null) result = caseBackboneElement(researchStudyRecruitment);
			if (result == null) result = caseElement(researchStudyRecruitment);
			if (result == null) result = caseBase(researchStudyRecruitment);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.RESEARCH_SUBJECT: {
			final ResearchSubject researchSubject = (ResearchSubject)theEObject;
			T result = caseResearchSubject(researchSubject);
			if (result == null) result = caseDomainResource(researchSubject);
			if (result == null) result = caseResource(researchSubject);
			if (result == null) result = caseBase(researchSubject);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.RESEARCH_SUBJECT_PROGRESS: {
			final ResearchSubjectProgress researchSubjectProgress = (ResearchSubjectProgress)theEObject;
			T result = caseResearchSubjectProgress(researchSubjectProgress);
			if (result == null) result = caseBackboneElement(researchSubjectProgress);
			if (result == null) result = caseElement(researchSubjectProgress);
			if (result == null) result = caseBase(researchSubjectProgress);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.RESOURCE: {
			final Resource resource = (Resource)theEObject;
			T result = caseResource(resource);
			if (result == null) result = caseBase(resource);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.RESOURCE_CONTAINER: {
			final ResourceContainer resourceContainer = (ResourceContainer)theEObject;
			T result = caseResourceContainer(resourceContainer);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.RESOURCE_TYPE: {
			final ResourceType resourceType = (ResourceType)theEObject;
			T result = caseResourceType(resourceType);
			if (result == null) result = caseElement(resourceType);
			if (result == null) result = caseBase(resourceType);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.RESOURCE_VERSION_POLICY: {
			final ResourceVersionPolicy resourceVersionPolicy = (ResourceVersionPolicy)theEObject;
			T result = caseResourceVersionPolicy(resourceVersionPolicy);
			if (result == null) result = caseElement(resourceVersionPolicy);
			if (result == null) result = caseBase(resourceVersionPolicy);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.RESPONSE_TYPE: {
			final ResponseType responseType = (ResponseType)theEObject;
			T result = caseResponseType(responseType);
			if (result == null) result = caseElement(responseType);
			if (result == null) result = caseBase(responseType);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.RESTFUL_CAPABILITY_MODE: {
			final RestfulCapabilityMode restfulCapabilityMode = (RestfulCapabilityMode)theEObject;
			T result = caseRestfulCapabilityMode(restfulCapabilityMode);
			if (result == null) result = caseElement(restfulCapabilityMode);
			if (result == null) result = caseBase(restfulCapabilityMode);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.RISK_ASSESSMENT: {
			final RiskAssessment riskAssessment = (RiskAssessment)theEObject;
			T result = caseRiskAssessment(riskAssessment);
			if (result == null) result = caseDomainResource(riskAssessment);
			if (result == null) result = caseResource(riskAssessment);
			if (result == null) result = caseBase(riskAssessment);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.RISK_ASSESSMENT_PREDICTION: {
			final RiskAssessmentPrediction riskAssessmentPrediction = (RiskAssessmentPrediction)theEObject;
			T result = caseRiskAssessmentPrediction(riskAssessmentPrediction);
			if (result == null) result = caseBackboneElement(riskAssessmentPrediction);
			if (result == null) result = caseElement(riskAssessmentPrediction);
			if (result == null) result = caseBase(riskAssessmentPrediction);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.SAMPLED_DATA: {
			final SampledData sampledData = (SampledData)theEObject;
			T result = caseSampledData(sampledData);
			if (result == null) result = caseDataType(sampledData);
			if (result == null) result = caseElement(sampledData);
			if (result == null) result = caseBase(sampledData);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.SAMPLED_DATA_DATA_TYPE: {
			final SampledDataDataType sampledDataDataType = (SampledDataDataType)theEObject;
			T result = caseSampledDataDataType(sampledDataDataType);
			if (result == null) result = caseElement(sampledDataDataType);
			if (result == null) result = caseBase(sampledDataDataType);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.SCHEDULE: {
			final Schedule schedule = (Schedule)theEObject;
			T result = caseSchedule(schedule);
			if (result == null) result = caseDomainResource(schedule);
			if (result == null) result = caseResource(schedule);
			if (result == null) result = caseBase(schedule);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.SEARCH_COMPARATOR: {
			final SearchComparator searchComparator = (SearchComparator)theEObject;
			T result = caseSearchComparator(searchComparator);
			if (result == null) result = caseElement(searchComparator);
			if (result == null) result = caseBase(searchComparator);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.SEARCH_ENTRY_MODE: {
			final SearchEntryMode searchEntryMode = (SearchEntryMode)theEObject;
			T result = caseSearchEntryMode(searchEntryMode);
			if (result == null) result = caseElement(searchEntryMode);
			if (result == null) result = caseBase(searchEntryMode);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.SEARCH_MODIFIER_CODE: {
			final SearchModifierCode searchModifierCode = (SearchModifierCode)theEObject;
			T result = caseSearchModifierCode(searchModifierCode);
			if (result == null) result = caseElement(searchModifierCode);
			if (result == null) result = caseBase(searchModifierCode);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.SEARCH_PARAMETER: {
			final SearchParameter searchParameter = (SearchParameter)theEObject;
			T result = caseSearchParameter(searchParameter);
			if (result == null) result = caseCanonicalResource(searchParameter);
			if (result == null) result = caseDomainResource(searchParameter);
			if (result == null) result = caseResource(searchParameter);
			if (result == null) result = caseBase(searchParameter);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.SEARCH_PARAMETER_COMPONENT: {
			final SearchParameterComponent searchParameterComponent = (SearchParameterComponent)theEObject;
			T result = caseSearchParameterComponent(searchParameterComponent);
			if (result == null) result = caseBackboneElement(searchParameterComponent);
			if (result == null) result = caseElement(searchParameterComponent);
			if (result == null) result = caseBase(searchParameterComponent);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.SEARCH_PARAM_TYPE: {
			final SearchParamType searchParamType = (SearchParamType)theEObject;
			T result = caseSearchParamType(searchParamType);
			if (result == null) result = caseElement(searchParamType);
			if (result == null) result = caseBase(searchParamType);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.SEARCH_PROCESSING_MODE_TYPE: {
			final SearchProcessingModeType searchProcessingModeType = (SearchProcessingModeType)theEObject;
			T result = caseSearchProcessingModeType(searchProcessingModeType);
			if (result == null) result = caseElement(searchProcessingModeType);
			if (result == null) result = caseBase(searchProcessingModeType);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.SEQUENCE_TYPE: {
			final SequenceType sequenceType = (SequenceType)theEObject;
			T result = caseSequenceType(sequenceType);
			if (result == null) result = caseElement(sequenceType);
			if (result == null) result = caseBase(sequenceType);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.SERVICE_REQUEST: {
			final ServiceRequest serviceRequest = (ServiceRequest)theEObject;
			T result = caseServiceRequest(serviceRequest);
			if (result == null) result = caseDomainResource(serviceRequest);
			if (result == null) result = caseResource(serviceRequest);
			if (result == null) result = caseBase(serviceRequest);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.SERVICE_REQUEST_ORDER_DETAIL: {
			final ServiceRequestOrderDetail serviceRequestOrderDetail = (ServiceRequestOrderDetail)theEObject;
			T result = caseServiceRequestOrderDetail(serviceRequestOrderDetail);
			if (result == null) result = caseBackboneElement(serviceRequestOrderDetail);
			if (result == null) result = caseElement(serviceRequestOrderDetail);
			if (result == null) result = caseBase(serviceRequestOrderDetail);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.SERVICE_REQUEST_PARAMETER: {
			final ServiceRequestParameter serviceRequestParameter = (ServiceRequestParameter)theEObject;
			T result = caseServiceRequestParameter(serviceRequestParameter);
			if (result == null) result = caseBackboneElement(serviceRequestParameter);
			if (result == null) result = caseElement(serviceRequestParameter);
			if (result == null) result = caseBase(serviceRequestParameter);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.SERVICE_REQUEST_PATIENT_INSTRUCTION: {
			final ServiceRequestPatientInstruction serviceRequestPatientInstruction = (ServiceRequestPatientInstruction)theEObject;
			T result = caseServiceRequestPatientInstruction(serviceRequestPatientInstruction);
			if (result == null) result = caseBackboneElement(serviceRequestPatientInstruction);
			if (result == null) result = caseElement(serviceRequestPatientInstruction);
			if (result == null) result = caseBase(serviceRequestPatientInstruction);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.SIGNATURE: {
			final Signature signature = (Signature)theEObject;
			T result = caseSignature(signature);
			if (result == null) result = caseDataType(signature);
			if (result == null) result = caseElement(signature);
			if (result == null) result = caseBase(signature);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.SLICING_RULES: {
			final SlicingRules slicingRules = (SlicingRules)theEObject;
			T result = caseSlicingRules(slicingRules);
			if (result == null) result = caseElement(slicingRules);
			if (result == null) result = caseBase(slicingRules);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.SLOT: {
			final Slot slot = (Slot)theEObject;
			T result = caseSlot(slot);
			if (result == null) result = caseDomainResource(slot);
			if (result == null) result = caseResource(slot);
			if (result == null) result = caseBase(slot);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.SLOT_STATUS: {
			final SlotStatus slotStatus = (SlotStatus)theEObject;
			T result = caseSlotStatus(slotStatus);
			if (result == null) result = caseElement(slotStatus);
			if (result == null) result = caseBase(slotStatus);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.SORT_DIRECTION: {
			final SortDirection sortDirection = (SortDirection)theEObject;
			T result = caseSortDirection(sortDirection);
			if (result == null) result = caseElement(sortDirection);
			if (result == null) result = caseBase(sortDirection);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.SPDX_LICENSE: {
			final SPDXLicense spdxLicense = (SPDXLicense)theEObject;
			T result = caseSPDXLicense(spdxLicense);
			if (result == null) result = caseElement(spdxLicense);
			if (result == null) result = caseBase(spdxLicense);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.SPECIMEN: {
			final Specimen specimen = (Specimen)theEObject;
			T result = caseSpecimen(specimen);
			if (result == null) result = caseDomainResource(specimen);
			if (result == null) result = caseResource(specimen);
			if (result == null) result = caseBase(specimen);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.SPECIMEN_COLLECTION: {
			final SpecimenCollection specimenCollection = (SpecimenCollection)theEObject;
			T result = caseSpecimenCollection(specimenCollection);
			if (result == null) result = caseBackboneElement(specimenCollection);
			if (result == null) result = caseElement(specimenCollection);
			if (result == null) result = caseBase(specimenCollection);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.SPECIMEN_COMBINED: {
			final SpecimenCombined specimenCombined = (SpecimenCombined)theEObject;
			T result = caseSpecimenCombined(specimenCombined);
			if (result == null) result = caseElement(specimenCombined);
			if (result == null) result = caseBase(specimenCombined);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.SPECIMEN_CONTAINED_PREFERENCE: {
			final SpecimenContainedPreference specimenContainedPreference = (SpecimenContainedPreference)theEObject;
			T result = caseSpecimenContainedPreference(specimenContainedPreference);
			if (result == null) result = caseElement(specimenContainedPreference);
			if (result == null) result = caseBase(specimenContainedPreference);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.SPECIMEN_CONTAINER: {
			final SpecimenContainer specimenContainer = (SpecimenContainer)theEObject;
			T result = caseSpecimenContainer(specimenContainer);
			if (result == null) result = caseBackboneElement(specimenContainer);
			if (result == null) result = caseElement(specimenContainer);
			if (result == null) result = caseBase(specimenContainer);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.SPECIMEN_DEFINITION: {
			final SpecimenDefinition specimenDefinition = (SpecimenDefinition)theEObject;
			T result = caseSpecimenDefinition(specimenDefinition);
			if (result == null) result = caseMetadataResource(specimenDefinition);
			if (result == null) result = caseCanonicalResource(specimenDefinition);
			if (result == null) result = caseDomainResource(specimenDefinition);
			if (result == null) result = caseResource(specimenDefinition);
			if (result == null) result = caseBase(specimenDefinition);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.SPECIMEN_DEFINITION_ADDITIVE: {
			final SpecimenDefinitionAdditive specimenDefinitionAdditive = (SpecimenDefinitionAdditive)theEObject;
			T result = caseSpecimenDefinitionAdditive(specimenDefinitionAdditive);
			if (result == null) result = caseBackboneElement(specimenDefinitionAdditive);
			if (result == null) result = caseElement(specimenDefinitionAdditive);
			if (result == null) result = caseBase(specimenDefinitionAdditive);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.SPECIMEN_DEFINITION_CONTAINER: {
			final SpecimenDefinitionContainer specimenDefinitionContainer = (SpecimenDefinitionContainer)theEObject;
			T result = caseSpecimenDefinitionContainer(specimenDefinitionContainer);
			if (result == null) result = caseBackboneElement(specimenDefinitionContainer);
			if (result == null) result = caseElement(specimenDefinitionContainer);
			if (result == null) result = caseBase(specimenDefinitionContainer);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.SPECIMEN_DEFINITION_HANDLING: {
			final SpecimenDefinitionHandling specimenDefinitionHandling = (SpecimenDefinitionHandling)theEObject;
			T result = caseSpecimenDefinitionHandling(specimenDefinitionHandling);
			if (result == null) result = caseBackboneElement(specimenDefinitionHandling);
			if (result == null) result = caseElement(specimenDefinitionHandling);
			if (result == null) result = caseBase(specimenDefinitionHandling);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.SPECIMEN_DEFINITION_TYPE_TESTED: {
			final SpecimenDefinitionTypeTested specimenDefinitionTypeTested = (SpecimenDefinitionTypeTested)theEObject;
			T result = caseSpecimenDefinitionTypeTested(specimenDefinitionTypeTested);
			if (result == null) result = caseBackboneElement(specimenDefinitionTypeTested);
			if (result == null) result = caseElement(specimenDefinitionTypeTested);
			if (result == null) result = caseBase(specimenDefinitionTypeTested);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.SPECIMEN_FEATURE: {
			final SpecimenFeature specimenFeature = (SpecimenFeature)theEObject;
			T result = caseSpecimenFeature(specimenFeature);
			if (result == null) result = caseBackboneElement(specimenFeature);
			if (result == null) result = caseElement(specimenFeature);
			if (result == null) result = caseBase(specimenFeature);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.SPECIMEN_PROCESSING: {
			final SpecimenProcessing specimenProcessing = (SpecimenProcessing)theEObject;
			T result = caseSpecimenProcessing(specimenProcessing);
			if (result == null) result = caseBackboneElement(specimenProcessing);
			if (result == null) result = caseElement(specimenProcessing);
			if (result == null) result = caseBase(specimenProcessing);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.SPECIMEN_STATUS: {
			final SpecimenStatus specimenStatus = (SpecimenStatus)theEObject;
			T result = caseSpecimenStatus(specimenStatus);
			if (result == null) result = caseElement(specimenStatus);
			if (result == null) result = caseBase(specimenStatus);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.STRAND_TYPE: {
			final StrandType strandType = (StrandType)theEObject;
			T result = caseStrandType(strandType);
			if (result == null) result = caseElement(strandType);
			if (result == null) result = caseBase(strandType);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.STRING: {
			final org.hl7.emf.fhir.String string = (org.hl7.emf.fhir.String)theEObject;
			T result = caseString(string);
			if (result == null) result = caseElement(string);
			if (result == null) result = caseBase(string);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.STRUCTURE_DEFINITION: {
			final StructureDefinition structureDefinition = (StructureDefinition)theEObject;
			T result = caseStructureDefinition(structureDefinition);
			if (result == null) result = caseCanonicalResource(structureDefinition);
			if (result == null) result = caseDomainResource(structureDefinition);
			if (result == null) result = caseResource(structureDefinition);
			if (result == null) result = caseBase(structureDefinition);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.STRUCTURE_DEFINITION_CONTEXT: {
			final StructureDefinitionContext structureDefinitionContext = (StructureDefinitionContext)theEObject;
			T result = caseStructureDefinitionContext(structureDefinitionContext);
			if (result == null) result = caseBackboneElement(structureDefinitionContext);
			if (result == null) result = caseElement(structureDefinitionContext);
			if (result == null) result = caseBase(structureDefinitionContext);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.STRUCTURE_DEFINITION_DIFFERENTIAL: {
			final StructureDefinitionDifferential structureDefinitionDifferential = (StructureDefinitionDifferential)theEObject;
			T result = caseStructureDefinitionDifferential(structureDefinitionDifferential);
			if (result == null) result = caseBackboneElement(structureDefinitionDifferential);
			if (result == null) result = caseElement(structureDefinitionDifferential);
			if (result == null) result = caseBase(structureDefinitionDifferential);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.STRUCTURE_DEFINITION_KIND: {
			final StructureDefinitionKind structureDefinitionKind = (StructureDefinitionKind)theEObject;
			T result = caseStructureDefinitionKind(structureDefinitionKind);
			if (result == null) result = caseElement(structureDefinitionKind);
			if (result == null) result = caseBase(structureDefinitionKind);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.STRUCTURE_DEFINITION_MAPPING: {
			final StructureDefinitionMapping structureDefinitionMapping = (StructureDefinitionMapping)theEObject;
			T result = caseStructureDefinitionMapping(structureDefinitionMapping);
			if (result == null) result = caseBackboneElement(structureDefinitionMapping);
			if (result == null) result = caseElement(structureDefinitionMapping);
			if (result == null) result = caseBase(structureDefinitionMapping);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.STRUCTURE_DEFINITION_SNAPSHOT: {
			final StructureDefinitionSnapshot structureDefinitionSnapshot = (StructureDefinitionSnapshot)theEObject;
			T result = caseStructureDefinitionSnapshot(structureDefinitionSnapshot);
			if (result == null) result = caseBackboneElement(structureDefinitionSnapshot);
			if (result == null) result = caseElement(structureDefinitionSnapshot);
			if (result == null) result = caseBase(structureDefinitionSnapshot);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.STRUCTURE_MAP: {
			final StructureMap structureMap = (StructureMap)theEObject;
			T result = caseStructureMap(structureMap);
			if (result == null) result = caseCanonicalResource(structureMap);
			if (result == null) result = caseDomainResource(structureMap);
			if (result == null) result = caseResource(structureMap);
			if (result == null) result = caseBase(structureMap);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.STRUCTURE_MAP_CONST: {
			final StructureMapConst structureMapConst = (StructureMapConst)theEObject;
			T result = caseStructureMapConst(structureMapConst);
			if (result == null) result = caseBackboneElement(structureMapConst);
			if (result == null) result = caseElement(structureMapConst);
			if (result == null) result = caseBase(structureMapConst);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.STRUCTURE_MAP_DEPENDENT: {
			final StructureMapDependent structureMapDependent = (StructureMapDependent)theEObject;
			T result = caseStructureMapDependent(structureMapDependent);
			if (result == null) result = caseBackboneElement(structureMapDependent);
			if (result == null) result = caseElement(structureMapDependent);
			if (result == null) result = caseBase(structureMapDependent);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.STRUCTURE_MAP_GROUP: {
			final StructureMapGroup structureMapGroup = (StructureMapGroup)theEObject;
			T result = caseStructureMapGroup(structureMapGroup);
			if (result == null) result = caseBackboneElement(structureMapGroup);
			if (result == null) result = caseElement(structureMapGroup);
			if (result == null) result = caseBase(structureMapGroup);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.STRUCTURE_MAP_GROUP_TYPE_MODE: {
			final StructureMapGroupTypeMode structureMapGroupTypeMode = (StructureMapGroupTypeMode)theEObject;
			T result = caseStructureMapGroupTypeMode(structureMapGroupTypeMode);
			if (result == null) result = caseElement(structureMapGroupTypeMode);
			if (result == null) result = caseBase(structureMapGroupTypeMode);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.STRUCTURE_MAP_INPUT: {
			final StructureMapInput structureMapInput = (StructureMapInput)theEObject;
			T result = caseStructureMapInput(structureMapInput);
			if (result == null) result = caseBackboneElement(structureMapInput);
			if (result == null) result = caseElement(structureMapInput);
			if (result == null) result = caseBase(structureMapInput);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.STRUCTURE_MAP_INPUT_MODE: {
			final StructureMapInputMode structureMapInputMode = (StructureMapInputMode)theEObject;
			T result = caseStructureMapInputMode(structureMapInputMode);
			if (result == null) result = caseElement(structureMapInputMode);
			if (result == null) result = caseBase(structureMapInputMode);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.STRUCTURE_MAP_MODEL_MODE: {
			final StructureMapModelMode structureMapModelMode = (StructureMapModelMode)theEObject;
			T result = caseStructureMapModelMode(structureMapModelMode);
			if (result == null) result = caseElement(structureMapModelMode);
			if (result == null) result = caseBase(structureMapModelMode);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.STRUCTURE_MAP_PARAMETER: {
			final StructureMapParameter structureMapParameter = (StructureMapParameter)theEObject;
			T result = caseStructureMapParameter(structureMapParameter);
			if (result == null) result = caseBackboneElement(structureMapParameter);
			if (result == null) result = caseElement(structureMapParameter);
			if (result == null) result = caseBase(structureMapParameter);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.STRUCTURE_MAP_RULE: {
			final StructureMapRule structureMapRule = (StructureMapRule)theEObject;
			T result = caseStructureMapRule(structureMapRule);
			if (result == null) result = caseBackboneElement(structureMapRule);
			if (result == null) result = caseElement(structureMapRule);
			if (result == null) result = caseBase(structureMapRule);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.STRUCTURE_MAP_SOURCE: {
			final StructureMapSource structureMapSource = (StructureMapSource)theEObject;
			T result = caseStructureMapSource(structureMapSource);
			if (result == null) result = caseBackboneElement(structureMapSource);
			if (result == null) result = caseElement(structureMapSource);
			if (result == null) result = caseBase(structureMapSource);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.STRUCTURE_MAP_SOURCE_LIST_MODE: {
			final StructureMapSourceListMode structureMapSourceListMode = (StructureMapSourceListMode)theEObject;
			T result = caseStructureMapSourceListMode(structureMapSourceListMode);
			if (result == null) result = caseElement(structureMapSourceListMode);
			if (result == null) result = caseBase(structureMapSourceListMode);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.STRUCTURE_MAP_STRUCTURE: {
			final StructureMapStructure structureMapStructure = (StructureMapStructure)theEObject;
			T result = caseStructureMapStructure(structureMapStructure);
			if (result == null) result = caseBackboneElement(structureMapStructure);
			if (result == null) result = caseElement(structureMapStructure);
			if (result == null) result = caseBase(structureMapStructure);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.STRUCTURE_MAP_TARGET: {
			final StructureMapTarget structureMapTarget = (StructureMapTarget)theEObject;
			T result = caseStructureMapTarget(structureMapTarget);
			if (result == null) result = caseBackboneElement(structureMapTarget);
			if (result == null) result = caseElement(structureMapTarget);
			if (result == null) result = caseBase(structureMapTarget);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.STRUCTURE_MAP_TARGET_LIST_MODE: {
			final StructureMapTargetListMode structureMapTargetListMode = (StructureMapTargetListMode)theEObject;
			T result = caseStructureMapTargetListMode(structureMapTargetListMode);
			if (result == null) result = caseElement(structureMapTargetListMode);
			if (result == null) result = caseBase(structureMapTargetListMode);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.STRUCTURE_MAP_TRANSFORM: {
			final StructureMapTransform structureMapTransform = (StructureMapTransform)theEObject;
			T result = caseStructureMapTransform(structureMapTransform);
			if (result == null) result = caseElement(structureMapTransform);
			if (result == null) result = caseBase(structureMapTransform);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.SUBMIT_DATA_UPDATE_TYPE: {
			final SubmitDataUpdateType submitDataUpdateType = (SubmitDataUpdateType)theEObject;
			T result = caseSubmitDataUpdateType(submitDataUpdateType);
			if (result == null) result = caseElement(submitDataUpdateType);
			if (result == null) result = caseBase(submitDataUpdateType);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.SUBSCRIPTION: {
			final Subscription subscription = (Subscription)theEObject;
			T result = caseSubscription(subscription);
			if (result == null) result = caseDomainResource(subscription);
			if (result == null) result = caseResource(subscription);
			if (result == null) result = caseBase(subscription);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.SUBSCRIPTION_FILTER_BY: {
			final SubscriptionFilterBy subscriptionFilterBy = (SubscriptionFilterBy)theEObject;
			T result = caseSubscriptionFilterBy(subscriptionFilterBy);
			if (result == null) result = caseBackboneElement(subscriptionFilterBy);
			if (result == null) result = caseElement(subscriptionFilterBy);
			if (result == null) result = caseBase(subscriptionFilterBy);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.SUBSCRIPTION_NOTIFICATION_TYPE: {
			final SubscriptionNotificationType subscriptionNotificationType = (SubscriptionNotificationType)theEObject;
			T result = caseSubscriptionNotificationType(subscriptionNotificationType);
			if (result == null) result = caseElement(subscriptionNotificationType);
			if (result == null) result = caseBase(subscriptionNotificationType);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.SUBSCRIPTION_PARAMETER: {
			final SubscriptionParameter subscriptionParameter = (SubscriptionParameter)theEObject;
			T result = caseSubscriptionParameter(subscriptionParameter);
			if (result == null) result = caseBackboneElement(subscriptionParameter);
			if (result == null) result = caseElement(subscriptionParameter);
			if (result == null) result = caseBase(subscriptionParameter);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.SUBSCRIPTION_PAYLOAD_CONTENT: {
			final SubscriptionPayloadContent subscriptionPayloadContent = (SubscriptionPayloadContent)theEObject;
			T result = caseSubscriptionPayloadContent(subscriptionPayloadContent);
			if (result == null) result = caseElement(subscriptionPayloadContent);
			if (result == null) result = caseBase(subscriptionPayloadContent);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.SUBSCRIPTION_STATUS: {
			final SubscriptionStatus subscriptionStatus = (SubscriptionStatus)theEObject;
			T result = caseSubscriptionStatus(subscriptionStatus);
			if (result == null) result = caseDomainResource(subscriptionStatus);
			if (result == null) result = caseResource(subscriptionStatus);
			if (result == null) result = caseBase(subscriptionStatus);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.SUBSCRIPTION_STATUS_CODES: {
			final SubscriptionStatusCodes subscriptionStatusCodes = (SubscriptionStatusCodes)theEObject;
			T result = caseSubscriptionStatusCodes(subscriptionStatusCodes);
			if (result == null) result = caseElement(subscriptionStatusCodes);
			if (result == null) result = caseBase(subscriptionStatusCodes);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.SUBSCRIPTION_STATUS_NOTIFICATION_EVENT: {
			final SubscriptionStatusNotificationEvent subscriptionStatusNotificationEvent = (SubscriptionStatusNotificationEvent)theEObject;
			T result = caseSubscriptionStatusNotificationEvent(subscriptionStatusNotificationEvent);
			if (result == null) result = caseBackboneElement(subscriptionStatusNotificationEvent);
			if (result == null) result = caseElement(subscriptionStatusNotificationEvent);
			if (result == null) result = caseBase(subscriptionStatusNotificationEvent);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.SUBSCRIPTION_TOPIC: {
			final SubscriptionTopic subscriptionTopic = (SubscriptionTopic)theEObject;
			T result = caseSubscriptionTopic(subscriptionTopic);
			if (result == null) result = caseCanonicalResource(subscriptionTopic);
			if (result == null) result = caseDomainResource(subscriptionTopic);
			if (result == null) result = caseResource(subscriptionTopic);
			if (result == null) result = caseBase(subscriptionTopic);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.SUBSCRIPTION_TOPIC_CAN_FILTER_BY: {
			final SubscriptionTopicCanFilterBy subscriptionTopicCanFilterBy = (SubscriptionTopicCanFilterBy)theEObject;
			T result = caseSubscriptionTopicCanFilterBy(subscriptionTopicCanFilterBy);
			if (result == null) result = caseBackboneElement(subscriptionTopicCanFilterBy);
			if (result == null) result = caseElement(subscriptionTopicCanFilterBy);
			if (result == null) result = caseBase(subscriptionTopicCanFilterBy);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.SUBSCRIPTION_TOPIC_EVENT_TRIGGER: {
			final SubscriptionTopicEventTrigger subscriptionTopicEventTrigger = (SubscriptionTopicEventTrigger)theEObject;
			T result = caseSubscriptionTopicEventTrigger(subscriptionTopicEventTrigger);
			if (result == null) result = caseBackboneElement(subscriptionTopicEventTrigger);
			if (result == null) result = caseElement(subscriptionTopicEventTrigger);
			if (result == null) result = caseBase(subscriptionTopicEventTrigger);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.SUBSCRIPTION_TOPIC_NOTIFICATION_SHAPE: {
			final SubscriptionTopicNotificationShape subscriptionTopicNotificationShape = (SubscriptionTopicNotificationShape)theEObject;
			T result = caseSubscriptionTopicNotificationShape(subscriptionTopicNotificationShape);
			if (result == null) result = caseBackboneElement(subscriptionTopicNotificationShape);
			if (result == null) result = caseElement(subscriptionTopicNotificationShape);
			if (result == null) result = caseBase(subscriptionTopicNotificationShape);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.SUBSCRIPTION_TOPIC_QUERY_CRITERIA: {
			final SubscriptionTopicQueryCriteria subscriptionTopicQueryCriteria = (SubscriptionTopicQueryCriteria)theEObject;
			T result = caseSubscriptionTopicQueryCriteria(subscriptionTopicQueryCriteria);
			if (result == null) result = caseBackboneElement(subscriptionTopicQueryCriteria);
			if (result == null) result = caseElement(subscriptionTopicQueryCriteria);
			if (result == null) result = caseBase(subscriptionTopicQueryCriteria);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.SUBSCRIPTION_TOPIC_RESOURCE_TRIGGER: {
			final SubscriptionTopicResourceTrigger subscriptionTopicResourceTrigger = (SubscriptionTopicResourceTrigger)theEObject;
			T result = caseSubscriptionTopicResourceTrigger(subscriptionTopicResourceTrigger);
			if (result == null) result = caseBackboneElement(subscriptionTopicResourceTrigger);
			if (result == null) result = caseElement(subscriptionTopicResourceTrigger);
			if (result == null) result = caseBase(subscriptionTopicResourceTrigger);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.SUBSTANCE: {
			final Substance substance = (Substance)theEObject;
			T result = caseSubstance(substance);
			if (result == null) result = caseDomainResource(substance);
			if (result == null) result = caseResource(substance);
			if (result == null) result = caseBase(substance);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.SUBSTANCE_DEFINITION: {
			final SubstanceDefinition substanceDefinition = (SubstanceDefinition)theEObject;
			T result = caseSubstanceDefinition(substanceDefinition);
			if (result == null) result = caseDomainResource(substanceDefinition);
			if (result == null) result = caseResource(substanceDefinition);
			if (result == null) result = caseBase(substanceDefinition);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.SUBSTANCE_DEFINITION_CHARACTERIZATION: {
			final SubstanceDefinitionCharacterization substanceDefinitionCharacterization = (SubstanceDefinitionCharacterization)theEObject;
			T result = caseSubstanceDefinitionCharacterization(substanceDefinitionCharacterization);
			if (result == null) result = caseBackboneElement(substanceDefinitionCharacterization);
			if (result == null) result = caseElement(substanceDefinitionCharacterization);
			if (result == null) result = caseBase(substanceDefinitionCharacterization);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.SUBSTANCE_DEFINITION_CODE: {
			final SubstanceDefinitionCode substanceDefinitionCode = (SubstanceDefinitionCode)theEObject;
			T result = caseSubstanceDefinitionCode(substanceDefinitionCode);
			if (result == null) result = caseBackboneElement(substanceDefinitionCode);
			if (result == null) result = caseElement(substanceDefinitionCode);
			if (result == null) result = caseBase(substanceDefinitionCode);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.SUBSTANCE_DEFINITION_MOIETY: {
			final SubstanceDefinitionMoiety substanceDefinitionMoiety = (SubstanceDefinitionMoiety)theEObject;
			T result = caseSubstanceDefinitionMoiety(substanceDefinitionMoiety);
			if (result == null) result = caseBackboneElement(substanceDefinitionMoiety);
			if (result == null) result = caseElement(substanceDefinitionMoiety);
			if (result == null) result = caseBase(substanceDefinitionMoiety);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.SUBSTANCE_DEFINITION_MOLECULAR_WEIGHT: {
			final SubstanceDefinitionMolecularWeight substanceDefinitionMolecularWeight = (SubstanceDefinitionMolecularWeight)theEObject;
			T result = caseSubstanceDefinitionMolecularWeight(substanceDefinitionMolecularWeight);
			if (result == null) result = caseBackboneElement(substanceDefinitionMolecularWeight);
			if (result == null) result = caseElement(substanceDefinitionMolecularWeight);
			if (result == null) result = caseBase(substanceDefinitionMolecularWeight);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.SUBSTANCE_DEFINITION_NAME: {
			final SubstanceDefinitionName substanceDefinitionName = (SubstanceDefinitionName)theEObject;
			T result = caseSubstanceDefinitionName(substanceDefinitionName);
			if (result == null) result = caseBackboneElement(substanceDefinitionName);
			if (result == null) result = caseElement(substanceDefinitionName);
			if (result == null) result = caseBase(substanceDefinitionName);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.SUBSTANCE_DEFINITION_OFFICIAL: {
			final SubstanceDefinitionOfficial substanceDefinitionOfficial = (SubstanceDefinitionOfficial)theEObject;
			T result = caseSubstanceDefinitionOfficial(substanceDefinitionOfficial);
			if (result == null) result = caseBackboneElement(substanceDefinitionOfficial);
			if (result == null) result = caseElement(substanceDefinitionOfficial);
			if (result == null) result = caseBase(substanceDefinitionOfficial);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.SUBSTANCE_DEFINITION_PROPERTY: {
			final SubstanceDefinitionProperty substanceDefinitionProperty = (SubstanceDefinitionProperty)theEObject;
			T result = caseSubstanceDefinitionProperty(substanceDefinitionProperty);
			if (result == null) result = caseBackboneElement(substanceDefinitionProperty);
			if (result == null) result = caseElement(substanceDefinitionProperty);
			if (result == null) result = caseBase(substanceDefinitionProperty);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.SUBSTANCE_DEFINITION_RELATIONSHIP: {
			final SubstanceDefinitionRelationship substanceDefinitionRelationship = (SubstanceDefinitionRelationship)theEObject;
			T result = caseSubstanceDefinitionRelationship(substanceDefinitionRelationship);
			if (result == null) result = caseBackboneElement(substanceDefinitionRelationship);
			if (result == null) result = caseElement(substanceDefinitionRelationship);
			if (result == null) result = caseBase(substanceDefinitionRelationship);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.SUBSTANCE_DEFINITION_REPRESENTATION: {
			final SubstanceDefinitionRepresentation substanceDefinitionRepresentation = (SubstanceDefinitionRepresentation)theEObject;
			T result = caseSubstanceDefinitionRepresentation(substanceDefinitionRepresentation);
			if (result == null) result = caseBackboneElement(substanceDefinitionRepresentation);
			if (result == null) result = caseElement(substanceDefinitionRepresentation);
			if (result == null) result = caseBase(substanceDefinitionRepresentation);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.SUBSTANCE_DEFINITION_SOURCE_MATERIAL: {
			final SubstanceDefinitionSourceMaterial substanceDefinitionSourceMaterial = (SubstanceDefinitionSourceMaterial)theEObject;
			T result = caseSubstanceDefinitionSourceMaterial(substanceDefinitionSourceMaterial);
			if (result == null) result = caseBackboneElement(substanceDefinitionSourceMaterial);
			if (result == null) result = caseElement(substanceDefinitionSourceMaterial);
			if (result == null) result = caseBase(substanceDefinitionSourceMaterial);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.SUBSTANCE_DEFINITION_STRUCTURE: {
			final SubstanceDefinitionStructure substanceDefinitionStructure = (SubstanceDefinitionStructure)theEObject;
			T result = caseSubstanceDefinitionStructure(substanceDefinitionStructure);
			if (result == null) result = caseBackboneElement(substanceDefinitionStructure);
			if (result == null) result = caseElement(substanceDefinitionStructure);
			if (result == null) result = caseBase(substanceDefinitionStructure);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.SUBSTANCE_INGREDIENT: {
			final SubstanceIngredient substanceIngredient = (SubstanceIngredient)theEObject;
			T result = caseSubstanceIngredient(substanceIngredient);
			if (result == null) result = caseBackboneElement(substanceIngredient);
			if (result == null) result = caseElement(substanceIngredient);
			if (result == null) result = caseBase(substanceIngredient);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.SUBSTANCE_NUCLEIC_ACID: {
			final SubstanceNucleicAcid substanceNucleicAcid = (SubstanceNucleicAcid)theEObject;
			T result = caseSubstanceNucleicAcid(substanceNucleicAcid);
			if (result == null) result = caseDomainResource(substanceNucleicAcid);
			if (result == null) result = caseResource(substanceNucleicAcid);
			if (result == null) result = caseBase(substanceNucleicAcid);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.SUBSTANCE_NUCLEIC_ACID_LINKAGE: {
			final SubstanceNucleicAcidLinkage substanceNucleicAcidLinkage = (SubstanceNucleicAcidLinkage)theEObject;
			T result = caseSubstanceNucleicAcidLinkage(substanceNucleicAcidLinkage);
			if (result == null) result = caseBackboneElement(substanceNucleicAcidLinkage);
			if (result == null) result = caseElement(substanceNucleicAcidLinkage);
			if (result == null) result = caseBase(substanceNucleicAcidLinkage);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.SUBSTANCE_NUCLEIC_ACID_SUBUNIT: {
			final SubstanceNucleicAcidSubunit substanceNucleicAcidSubunit = (SubstanceNucleicAcidSubunit)theEObject;
			T result = caseSubstanceNucleicAcidSubunit(substanceNucleicAcidSubunit);
			if (result == null) result = caseBackboneElement(substanceNucleicAcidSubunit);
			if (result == null) result = caseElement(substanceNucleicAcidSubunit);
			if (result == null) result = caseBase(substanceNucleicAcidSubunit);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.SUBSTANCE_NUCLEIC_ACID_SUGAR: {
			final SubstanceNucleicAcidSugar substanceNucleicAcidSugar = (SubstanceNucleicAcidSugar)theEObject;
			T result = caseSubstanceNucleicAcidSugar(substanceNucleicAcidSugar);
			if (result == null) result = caseBackboneElement(substanceNucleicAcidSugar);
			if (result == null) result = caseElement(substanceNucleicAcidSugar);
			if (result == null) result = caseBase(substanceNucleicAcidSugar);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.SUBSTANCE_POLYMER: {
			final SubstancePolymer substancePolymer = (SubstancePolymer)theEObject;
			T result = caseSubstancePolymer(substancePolymer);
			if (result == null) result = caseDomainResource(substancePolymer);
			if (result == null) result = caseResource(substancePolymer);
			if (result == null) result = caseBase(substancePolymer);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.SUBSTANCE_POLYMER_DEGREE_OF_POLYMERISATION: {
			final SubstancePolymerDegreeOfPolymerisation substancePolymerDegreeOfPolymerisation = (SubstancePolymerDegreeOfPolymerisation)theEObject;
			T result = caseSubstancePolymerDegreeOfPolymerisation(substancePolymerDegreeOfPolymerisation);
			if (result == null) result = caseBackboneElement(substancePolymerDegreeOfPolymerisation);
			if (result == null) result = caseElement(substancePolymerDegreeOfPolymerisation);
			if (result == null) result = caseBase(substancePolymerDegreeOfPolymerisation);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.SUBSTANCE_POLYMER_MONOMER_SET: {
			final SubstancePolymerMonomerSet substancePolymerMonomerSet = (SubstancePolymerMonomerSet)theEObject;
			T result = caseSubstancePolymerMonomerSet(substancePolymerMonomerSet);
			if (result == null) result = caseBackboneElement(substancePolymerMonomerSet);
			if (result == null) result = caseElement(substancePolymerMonomerSet);
			if (result == null) result = caseBase(substancePolymerMonomerSet);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.SUBSTANCE_POLYMER_REPEAT: {
			final SubstancePolymerRepeat substancePolymerRepeat = (SubstancePolymerRepeat)theEObject;
			T result = caseSubstancePolymerRepeat(substancePolymerRepeat);
			if (result == null) result = caseBackboneElement(substancePolymerRepeat);
			if (result == null) result = caseElement(substancePolymerRepeat);
			if (result == null) result = caseBase(substancePolymerRepeat);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.SUBSTANCE_POLYMER_REPEAT_UNIT: {
			final SubstancePolymerRepeatUnit substancePolymerRepeatUnit = (SubstancePolymerRepeatUnit)theEObject;
			T result = caseSubstancePolymerRepeatUnit(substancePolymerRepeatUnit);
			if (result == null) result = caseBackboneElement(substancePolymerRepeatUnit);
			if (result == null) result = caseElement(substancePolymerRepeatUnit);
			if (result == null) result = caseBase(substancePolymerRepeatUnit);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.SUBSTANCE_POLYMER_STARTING_MATERIAL: {
			final SubstancePolymerStartingMaterial substancePolymerStartingMaterial = (SubstancePolymerStartingMaterial)theEObject;
			T result = caseSubstancePolymerStartingMaterial(substancePolymerStartingMaterial);
			if (result == null) result = caseBackboneElement(substancePolymerStartingMaterial);
			if (result == null) result = caseElement(substancePolymerStartingMaterial);
			if (result == null) result = caseBase(substancePolymerStartingMaterial);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.SUBSTANCE_POLYMER_STRUCTURAL_REPRESENTATION: {
			final SubstancePolymerStructuralRepresentation substancePolymerStructuralRepresentation = (SubstancePolymerStructuralRepresentation)theEObject;
			T result = caseSubstancePolymerStructuralRepresentation(substancePolymerStructuralRepresentation);
			if (result == null) result = caseBackboneElement(substancePolymerStructuralRepresentation);
			if (result == null) result = caseElement(substancePolymerStructuralRepresentation);
			if (result == null) result = caseBase(substancePolymerStructuralRepresentation);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.SUBSTANCE_PROTEIN: {
			final SubstanceProtein substanceProtein = (SubstanceProtein)theEObject;
			T result = caseSubstanceProtein(substanceProtein);
			if (result == null) result = caseDomainResource(substanceProtein);
			if (result == null) result = caseResource(substanceProtein);
			if (result == null) result = caseBase(substanceProtein);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.SUBSTANCE_PROTEIN_SUBUNIT: {
			final SubstanceProteinSubunit substanceProteinSubunit = (SubstanceProteinSubunit)theEObject;
			T result = caseSubstanceProteinSubunit(substanceProteinSubunit);
			if (result == null) result = caseBackboneElement(substanceProteinSubunit);
			if (result == null) result = caseElement(substanceProteinSubunit);
			if (result == null) result = caseBase(substanceProteinSubunit);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.SUBSTANCE_REFERENCE_INFORMATION: {
			final SubstanceReferenceInformation substanceReferenceInformation = (SubstanceReferenceInformation)theEObject;
			T result = caseSubstanceReferenceInformation(substanceReferenceInformation);
			if (result == null) result = caseDomainResource(substanceReferenceInformation);
			if (result == null) result = caseResource(substanceReferenceInformation);
			if (result == null) result = caseBase(substanceReferenceInformation);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.SUBSTANCE_REFERENCE_INFORMATION_GENE: {
			final SubstanceReferenceInformationGene substanceReferenceInformationGene = (SubstanceReferenceInformationGene)theEObject;
			T result = caseSubstanceReferenceInformationGene(substanceReferenceInformationGene);
			if (result == null) result = caseBackboneElement(substanceReferenceInformationGene);
			if (result == null) result = caseElement(substanceReferenceInformationGene);
			if (result == null) result = caseBase(substanceReferenceInformationGene);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.SUBSTANCE_REFERENCE_INFORMATION_GENE_ELEMENT: {
			final SubstanceReferenceInformationGeneElement substanceReferenceInformationGeneElement = (SubstanceReferenceInformationGeneElement)theEObject;
			T result = caseSubstanceReferenceInformationGeneElement(substanceReferenceInformationGeneElement);
			if (result == null) result = caseBackboneElement(substanceReferenceInformationGeneElement);
			if (result == null) result = caseElement(substanceReferenceInformationGeneElement);
			if (result == null) result = caseBase(substanceReferenceInformationGeneElement);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.SUBSTANCE_REFERENCE_INFORMATION_TARGET: {
			final SubstanceReferenceInformationTarget substanceReferenceInformationTarget = (SubstanceReferenceInformationTarget)theEObject;
			T result = caseSubstanceReferenceInformationTarget(substanceReferenceInformationTarget);
			if (result == null) result = caseBackboneElement(substanceReferenceInformationTarget);
			if (result == null) result = caseElement(substanceReferenceInformationTarget);
			if (result == null) result = caseBase(substanceReferenceInformationTarget);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.SUBSTANCE_SOURCE_MATERIAL: {
			final SubstanceSourceMaterial substanceSourceMaterial = (SubstanceSourceMaterial)theEObject;
			T result = caseSubstanceSourceMaterial(substanceSourceMaterial);
			if (result == null) result = caseDomainResource(substanceSourceMaterial);
			if (result == null) result = caseResource(substanceSourceMaterial);
			if (result == null) result = caseBase(substanceSourceMaterial);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.SUBSTANCE_SOURCE_MATERIAL_AUTHOR: {
			final SubstanceSourceMaterialAuthor substanceSourceMaterialAuthor = (SubstanceSourceMaterialAuthor)theEObject;
			T result = caseSubstanceSourceMaterialAuthor(substanceSourceMaterialAuthor);
			if (result == null) result = caseBackboneElement(substanceSourceMaterialAuthor);
			if (result == null) result = caseElement(substanceSourceMaterialAuthor);
			if (result == null) result = caseBase(substanceSourceMaterialAuthor);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.SUBSTANCE_SOURCE_MATERIAL_FRACTION_DESCRIPTION: {
			final SubstanceSourceMaterialFractionDescription substanceSourceMaterialFractionDescription = (SubstanceSourceMaterialFractionDescription)theEObject;
			T result = caseSubstanceSourceMaterialFractionDescription(substanceSourceMaterialFractionDescription);
			if (result == null) result = caseBackboneElement(substanceSourceMaterialFractionDescription);
			if (result == null) result = caseElement(substanceSourceMaterialFractionDescription);
			if (result == null) result = caseBase(substanceSourceMaterialFractionDescription);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.SUBSTANCE_SOURCE_MATERIAL_HYBRID: {
			final SubstanceSourceMaterialHybrid substanceSourceMaterialHybrid = (SubstanceSourceMaterialHybrid)theEObject;
			T result = caseSubstanceSourceMaterialHybrid(substanceSourceMaterialHybrid);
			if (result == null) result = caseBackboneElement(substanceSourceMaterialHybrid);
			if (result == null) result = caseElement(substanceSourceMaterialHybrid);
			if (result == null) result = caseBase(substanceSourceMaterialHybrid);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.SUBSTANCE_SOURCE_MATERIAL_ORGANISM: {
			final SubstanceSourceMaterialOrganism substanceSourceMaterialOrganism = (SubstanceSourceMaterialOrganism)theEObject;
			T result = caseSubstanceSourceMaterialOrganism(substanceSourceMaterialOrganism);
			if (result == null) result = caseBackboneElement(substanceSourceMaterialOrganism);
			if (result == null) result = caseElement(substanceSourceMaterialOrganism);
			if (result == null) result = caseBase(substanceSourceMaterialOrganism);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.SUBSTANCE_SOURCE_MATERIAL_ORGANISM_GENERAL: {
			final SubstanceSourceMaterialOrganismGeneral substanceSourceMaterialOrganismGeneral = (SubstanceSourceMaterialOrganismGeneral)theEObject;
			T result = caseSubstanceSourceMaterialOrganismGeneral(substanceSourceMaterialOrganismGeneral);
			if (result == null) result = caseBackboneElement(substanceSourceMaterialOrganismGeneral);
			if (result == null) result = caseElement(substanceSourceMaterialOrganismGeneral);
			if (result == null) result = caseBase(substanceSourceMaterialOrganismGeneral);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.SUBSTANCE_SOURCE_MATERIAL_PART_DESCRIPTION: {
			final SubstanceSourceMaterialPartDescription substanceSourceMaterialPartDescription = (SubstanceSourceMaterialPartDescription)theEObject;
			T result = caseSubstanceSourceMaterialPartDescription(substanceSourceMaterialPartDescription);
			if (result == null) result = caseBackboneElement(substanceSourceMaterialPartDescription);
			if (result == null) result = caseElement(substanceSourceMaterialPartDescription);
			if (result == null) result = caseBase(substanceSourceMaterialPartDescription);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.SUPPLY_DELIVERY: {
			final SupplyDelivery supplyDelivery = (SupplyDelivery)theEObject;
			T result = caseSupplyDelivery(supplyDelivery);
			if (result == null) result = caseDomainResource(supplyDelivery);
			if (result == null) result = caseResource(supplyDelivery);
			if (result == null) result = caseBase(supplyDelivery);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.SUPPLY_DELIVERY_STATUS: {
			final SupplyDeliveryStatus supplyDeliveryStatus = (SupplyDeliveryStatus)theEObject;
			T result = caseSupplyDeliveryStatus(supplyDeliveryStatus);
			if (result == null) result = caseElement(supplyDeliveryStatus);
			if (result == null) result = caseBase(supplyDeliveryStatus);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.SUPPLY_DELIVERY_SUPPLIED_ITEM: {
			final SupplyDeliverySuppliedItem supplyDeliverySuppliedItem = (SupplyDeliverySuppliedItem)theEObject;
			T result = caseSupplyDeliverySuppliedItem(supplyDeliverySuppliedItem);
			if (result == null) result = caseBackboneElement(supplyDeliverySuppliedItem);
			if (result == null) result = caseElement(supplyDeliverySuppliedItem);
			if (result == null) result = caseBase(supplyDeliverySuppliedItem);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.SUPPLY_REQUEST: {
			final SupplyRequest supplyRequest = (SupplyRequest)theEObject;
			T result = caseSupplyRequest(supplyRequest);
			if (result == null) result = caseDomainResource(supplyRequest);
			if (result == null) result = caseResource(supplyRequest);
			if (result == null) result = caseBase(supplyRequest);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.SUPPLY_REQUEST_PARAMETER: {
			final SupplyRequestParameter supplyRequestParameter = (SupplyRequestParameter)theEObject;
			T result = caseSupplyRequestParameter(supplyRequestParameter);
			if (result == null) result = caseBackboneElement(supplyRequestParameter);
			if (result == null) result = caseElement(supplyRequestParameter);
			if (result == null) result = caseBase(supplyRequestParameter);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.SUPPLY_REQUEST_STATUS: {
			final SupplyRequestStatus supplyRequestStatus = (SupplyRequestStatus)theEObject;
			T result = caseSupplyRequestStatus(supplyRequestStatus);
			if (result == null) result = caseElement(supplyRequestStatus);
			if (result == null) result = caseBase(supplyRequestStatus);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.SYSTEM_RESTFUL_INTERACTION: {
			final SystemRestfulInteraction systemRestfulInteraction = (SystemRestfulInteraction)theEObject;
			T result = caseSystemRestfulInteraction(systemRestfulInteraction);
			if (result == null) result = caseElement(systemRestfulInteraction);
			if (result == null) result = caseBase(systemRestfulInteraction);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.TASK: {
			final Task task = (Task)theEObject;
			T result = caseTask(task);
			if (result == null) result = caseDomainResource(task);
			if (result == null) result = caseResource(task);
			if (result == null) result = caseBase(task);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.TASK_INPUT: {
			final TaskInput taskInput = (TaskInput)theEObject;
			T result = caseTaskInput(taskInput);
			if (result == null) result = caseBackboneElement(taskInput);
			if (result == null) result = caseElement(taskInput);
			if (result == null) result = caseBase(taskInput);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.TASK_INTENT: {
			final TaskIntent taskIntent = (TaskIntent)theEObject;
			T result = caseTaskIntent(taskIntent);
			if (result == null) result = caseElement(taskIntent);
			if (result == null) result = caseBase(taskIntent);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.TASK_OUTPUT: {
			final TaskOutput taskOutput = (TaskOutput)theEObject;
			T result = caseTaskOutput(taskOutput);
			if (result == null) result = caseBackboneElement(taskOutput);
			if (result == null) result = caseElement(taskOutput);
			if (result == null) result = caseBase(taskOutput);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.TASK_PERFORMER: {
			final TaskPerformer taskPerformer = (TaskPerformer)theEObject;
			T result = caseTaskPerformer(taskPerformer);
			if (result == null) result = caseBackboneElement(taskPerformer);
			if (result == null) result = caseElement(taskPerformer);
			if (result == null) result = caseBase(taskPerformer);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.TASK_RESTRICTION: {
			final TaskRestriction taskRestriction = (TaskRestriction)theEObject;
			T result = caseTaskRestriction(taskRestriction);
			if (result == null) result = caseBackboneElement(taskRestriction);
			if (result == null) result = caseElement(taskRestriction);
			if (result == null) result = caseBase(taskRestriction);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.TASK_STATUS: {
			final TaskStatus taskStatus = (TaskStatus)theEObject;
			T result = caseTaskStatus(taskStatus);
			if (result == null) result = caseElement(taskStatus);
			if (result == null) result = caseBase(taskStatus);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.TERMINOLOGY_CAPABILITIES: {
			final TerminologyCapabilities terminologyCapabilities = (TerminologyCapabilities)theEObject;
			T result = caseTerminologyCapabilities(terminologyCapabilities);
			if (result == null) result = caseCanonicalResource(terminologyCapabilities);
			if (result == null) result = caseDomainResource(terminologyCapabilities);
			if (result == null) result = caseResource(terminologyCapabilities);
			if (result == null) result = caseBase(terminologyCapabilities);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.TERMINOLOGY_CAPABILITIES_CLOSURE: {
			final TerminologyCapabilitiesClosure terminologyCapabilitiesClosure = (TerminologyCapabilitiesClosure)theEObject;
			T result = caseTerminologyCapabilitiesClosure(terminologyCapabilitiesClosure);
			if (result == null) result = caseBackboneElement(terminologyCapabilitiesClosure);
			if (result == null) result = caseElement(terminologyCapabilitiesClosure);
			if (result == null) result = caseBase(terminologyCapabilitiesClosure);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.TERMINOLOGY_CAPABILITIES_CODE_SYSTEM: {
			final TerminologyCapabilitiesCodeSystem terminologyCapabilitiesCodeSystem = (TerminologyCapabilitiesCodeSystem)theEObject;
			T result = caseTerminologyCapabilitiesCodeSystem(terminologyCapabilitiesCodeSystem);
			if (result == null) result = caseBackboneElement(terminologyCapabilitiesCodeSystem);
			if (result == null) result = caseElement(terminologyCapabilitiesCodeSystem);
			if (result == null) result = caseBase(terminologyCapabilitiesCodeSystem);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.TERMINOLOGY_CAPABILITIES_EXPANSION: {
			final TerminologyCapabilitiesExpansion terminologyCapabilitiesExpansion = (TerminologyCapabilitiesExpansion)theEObject;
			T result = caseTerminologyCapabilitiesExpansion(terminologyCapabilitiesExpansion);
			if (result == null) result = caseBackboneElement(terminologyCapabilitiesExpansion);
			if (result == null) result = caseElement(terminologyCapabilitiesExpansion);
			if (result == null) result = caseBase(terminologyCapabilitiesExpansion);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.TERMINOLOGY_CAPABILITIES_FILTER: {
			final TerminologyCapabilitiesFilter terminologyCapabilitiesFilter = (TerminologyCapabilitiesFilter)theEObject;
			T result = caseTerminologyCapabilitiesFilter(terminologyCapabilitiesFilter);
			if (result == null) result = caseBackboneElement(terminologyCapabilitiesFilter);
			if (result == null) result = caseElement(terminologyCapabilitiesFilter);
			if (result == null) result = caseBase(terminologyCapabilitiesFilter);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.TERMINOLOGY_CAPABILITIES_IMPLEMENTATION: {
			final TerminologyCapabilitiesImplementation terminologyCapabilitiesImplementation = (TerminologyCapabilitiesImplementation)theEObject;
			T result = caseTerminologyCapabilitiesImplementation(terminologyCapabilitiesImplementation);
			if (result == null) result = caseBackboneElement(terminologyCapabilitiesImplementation);
			if (result == null) result = caseElement(terminologyCapabilitiesImplementation);
			if (result == null) result = caseBase(terminologyCapabilitiesImplementation);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.TERMINOLOGY_CAPABILITIES_PARAMETER: {
			final TerminologyCapabilitiesParameter terminologyCapabilitiesParameter = (TerminologyCapabilitiesParameter)theEObject;
			T result = caseTerminologyCapabilitiesParameter(terminologyCapabilitiesParameter);
			if (result == null) result = caseBackboneElement(terminologyCapabilitiesParameter);
			if (result == null) result = caseElement(terminologyCapabilitiesParameter);
			if (result == null) result = caseBase(terminologyCapabilitiesParameter);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.TERMINOLOGY_CAPABILITIES_SOFTWARE: {
			final TerminologyCapabilitiesSoftware terminologyCapabilitiesSoftware = (TerminologyCapabilitiesSoftware)theEObject;
			T result = caseTerminologyCapabilitiesSoftware(terminologyCapabilitiesSoftware);
			if (result == null) result = caseBackboneElement(terminologyCapabilitiesSoftware);
			if (result == null) result = caseElement(terminologyCapabilitiesSoftware);
			if (result == null) result = caseBase(terminologyCapabilitiesSoftware);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.TERMINOLOGY_CAPABILITIES_TRANSLATION: {
			final TerminologyCapabilitiesTranslation terminologyCapabilitiesTranslation = (TerminologyCapabilitiesTranslation)theEObject;
			T result = caseTerminologyCapabilitiesTranslation(terminologyCapabilitiesTranslation);
			if (result == null) result = caseBackboneElement(terminologyCapabilitiesTranslation);
			if (result == null) result = caseElement(terminologyCapabilitiesTranslation);
			if (result == null) result = caseBase(terminologyCapabilitiesTranslation);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.TERMINOLOGY_CAPABILITIES_VALIDATE_CODE: {
			final TerminologyCapabilitiesValidateCode terminologyCapabilitiesValidateCode = (TerminologyCapabilitiesValidateCode)theEObject;
			T result = caseTerminologyCapabilitiesValidateCode(terminologyCapabilitiesValidateCode);
			if (result == null) result = caseBackboneElement(terminologyCapabilitiesValidateCode);
			if (result == null) result = caseElement(terminologyCapabilitiesValidateCode);
			if (result == null) result = caseBase(terminologyCapabilitiesValidateCode);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.TERMINOLOGY_CAPABILITIES_VERSION: {
			final TerminologyCapabilitiesVersion terminologyCapabilitiesVersion = (TerminologyCapabilitiesVersion)theEObject;
			T result = caseTerminologyCapabilitiesVersion(terminologyCapabilitiesVersion);
			if (result == null) result = caseBackboneElement(terminologyCapabilitiesVersion);
			if (result == null) result = caseElement(terminologyCapabilitiesVersion);
			if (result == null) result = caseBase(terminologyCapabilitiesVersion);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.TEST_PLAN: {
			final TestPlan testPlan = (TestPlan)theEObject;
			T result = caseTestPlan(testPlan);
			if (result == null) result = caseCanonicalResource(testPlan);
			if (result == null) result = caseDomainResource(testPlan);
			if (result == null) result = caseResource(testPlan);
			if (result == null) result = caseBase(testPlan);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.TEST_PLAN_ASSERTION: {
			final TestPlanAssertion testPlanAssertion = (TestPlanAssertion)theEObject;
			T result = caseTestPlanAssertion(testPlanAssertion);
			if (result == null) result = caseBackboneElement(testPlanAssertion);
			if (result == null) result = caseElement(testPlanAssertion);
			if (result == null) result = caseBase(testPlanAssertion);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.TEST_PLAN_DEPENDENCY: {
			final TestPlanDependency testPlanDependency = (TestPlanDependency)theEObject;
			T result = caseTestPlanDependency(testPlanDependency);
			if (result == null) result = caseBackboneElement(testPlanDependency);
			if (result == null) result = caseElement(testPlanDependency);
			if (result == null) result = caseBase(testPlanDependency);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.TEST_PLAN_DEPENDENCY1: {
			final TestPlanDependency1 testPlanDependency1 = (TestPlanDependency1)theEObject;
			T result = caseTestPlanDependency1(testPlanDependency1);
			if (result == null) result = caseBackboneElement(testPlanDependency1);
			if (result == null) result = caseElement(testPlanDependency1);
			if (result == null) result = caseBase(testPlanDependency1);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.TEST_PLAN_SCRIPT: {
			final TestPlanScript testPlanScript = (TestPlanScript)theEObject;
			T result = caseTestPlanScript(testPlanScript);
			if (result == null) result = caseBackboneElement(testPlanScript);
			if (result == null) result = caseElement(testPlanScript);
			if (result == null) result = caseBase(testPlanScript);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.TEST_PLAN_TEST_CASE: {
			final TestPlanTestCase testPlanTestCase = (TestPlanTestCase)theEObject;
			T result = caseTestPlanTestCase(testPlanTestCase);
			if (result == null) result = caseBackboneElement(testPlanTestCase);
			if (result == null) result = caseElement(testPlanTestCase);
			if (result == null) result = caseBase(testPlanTestCase);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.TEST_PLAN_TEST_DATA: {
			final TestPlanTestData testPlanTestData = (TestPlanTestData)theEObject;
			T result = caseTestPlanTestData(testPlanTestData);
			if (result == null) result = caseBackboneElement(testPlanTestData);
			if (result == null) result = caseElement(testPlanTestData);
			if (result == null) result = caseBase(testPlanTestData);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.TEST_PLAN_TEST_RUN: {
			final TestPlanTestRun testPlanTestRun = (TestPlanTestRun)theEObject;
			T result = caseTestPlanTestRun(testPlanTestRun);
			if (result == null) result = caseBackboneElement(testPlanTestRun);
			if (result == null) result = caseElement(testPlanTestRun);
			if (result == null) result = caseBase(testPlanTestRun);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.TEST_REPORT: {
			final TestReport testReport = (TestReport)theEObject;
			T result = caseTestReport(testReport);
			if (result == null) result = caseDomainResource(testReport);
			if (result == null) result = caseResource(testReport);
			if (result == null) result = caseBase(testReport);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.TEST_REPORT_ACTION: {
			final TestReportAction testReportAction = (TestReportAction)theEObject;
			T result = caseTestReportAction(testReportAction);
			if (result == null) result = caseBackboneElement(testReportAction);
			if (result == null) result = caseElement(testReportAction);
			if (result == null) result = caseBase(testReportAction);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.TEST_REPORT_ACTION1: {
			final TestReportAction1 testReportAction1 = (TestReportAction1)theEObject;
			T result = caseTestReportAction1(testReportAction1);
			if (result == null) result = caseBackboneElement(testReportAction1);
			if (result == null) result = caseElement(testReportAction1);
			if (result == null) result = caseBase(testReportAction1);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.TEST_REPORT_ACTION2: {
			final TestReportAction2 testReportAction2 = (TestReportAction2)theEObject;
			T result = caseTestReportAction2(testReportAction2);
			if (result == null) result = caseBackboneElement(testReportAction2);
			if (result == null) result = caseElement(testReportAction2);
			if (result == null) result = caseBase(testReportAction2);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.TEST_REPORT_ACTION_RESULT: {
			final TestReportActionResult testReportActionResult = (TestReportActionResult)theEObject;
			T result = caseTestReportActionResult(testReportActionResult);
			if (result == null) result = caseElement(testReportActionResult);
			if (result == null) result = caseBase(testReportActionResult);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.TEST_REPORT_ASSERT: {
			final TestReportAssert testReportAssert = (TestReportAssert)theEObject;
			T result = caseTestReportAssert(testReportAssert);
			if (result == null) result = caseBackboneElement(testReportAssert);
			if (result == null) result = caseElement(testReportAssert);
			if (result == null) result = caseBase(testReportAssert);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.TEST_REPORT_OPERATION: {
			final TestReportOperation testReportOperation = (TestReportOperation)theEObject;
			T result = caseTestReportOperation(testReportOperation);
			if (result == null) result = caseBackboneElement(testReportOperation);
			if (result == null) result = caseElement(testReportOperation);
			if (result == null) result = caseBase(testReportOperation);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.TEST_REPORT_PARTICIPANT: {
			final TestReportParticipant testReportParticipant = (TestReportParticipant)theEObject;
			T result = caseTestReportParticipant(testReportParticipant);
			if (result == null) result = caseBackboneElement(testReportParticipant);
			if (result == null) result = caseElement(testReportParticipant);
			if (result == null) result = caseBase(testReportParticipant);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.TEST_REPORT_PARTICIPANT_TYPE: {
			final TestReportParticipantType testReportParticipantType = (TestReportParticipantType)theEObject;
			T result = caseTestReportParticipantType(testReportParticipantType);
			if (result == null) result = caseElement(testReportParticipantType);
			if (result == null) result = caseBase(testReportParticipantType);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.TEST_REPORT_REQUIREMENT: {
			final TestReportRequirement testReportRequirement = (TestReportRequirement)theEObject;
			T result = caseTestReportRequirement(testReportRequirement);
			if (result == null) result = caseBackboneElement(testReportRequirement);
			if (result == null) result = caseElement(testReportRequirement);
			if (result == null) result = caseBase(testReportRequirement);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.TEST_REPORT_RESULT: {
			final TestReportResult testReportResult = (TestReportResult)theEObject;
			T result = caseTestReportResult(testReportResult);
			if (result == null) result = caseElement(testReportResult);
			if (result == null) result = caseBase(testReportResult);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.TEST_REPORT_SETUP: {
			final TestReportSetup testReportSetup = (TestReportSetup)theEObject;
			T result = caseTestReportSetup(testReportSetup);
			if (result == null) result = caseBackboneElement(testReportSetup);
			if (result == null) result = caseElement(testReportSetup);
			if (result == null) result = caseBase(testReportSetup);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.TEST_REPORT_STATUS: {
			final TestReportStatus testReportStatus = (TestReportStatus)theEObject;
			T result = caseTestReportStatus(testReportStatus);
			if (result == null) result = caseElement(testReportStatus);
			if (result == null) result = caseBase(testReportStatus);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.TEST_REPORT_TEARDOWN: {
			final TestReportTeardown testReportTeardown = (TestReportTeardown)theEObject;
			T result = caseTestReportTeardown(testReportTeardown);
			if (result == null) result = caseBackboneElement(testReportTeardown);
			if (result == null) result = caseElement(testReportTeardown);
			if (result == null) result = caseBase(testReportTeardown);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.TEST_REPORT_TEST: {
			final TestReportTest testReportTest = (TestReportTest)theEObject;
			T result = caseTestReportTest(testReportTest);
			if (result == null) result = caseBackboneElement(testReportTest);
			if (result == null) result = caseElement(testReportTest);
			if (result == null) result = caseBase(testReportTest);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.TEST_SCRIPT: {
			final TestScript testScript = (TestScript)theEObject;
			T result = caseTestScript(testScript);
			if (result == null) result = caseCanonicalResource(testScript);
			if (result == null) result = caseDomainResource(testScript);
			if (result == null) result = caseResource(testScript);
			if (result == null) result = caseBase(testScript);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.TEST_SCRIPT_ACTION: {
			final TestScriptAction testScriptAction = (TestScriptAction)theEObject;
			T result = caseTestScriptAction(testScriptAction);
			if (result == null) result = caseBackboneElement(testScriptAction);
			if (result == null) result = caseElement(testScriptAction);
			if (result == null) result = caseBase(testScriptAction);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.TEST_SCRIPT_ACTION1: {
			final TestScriptAction1 testScriptAction1 = (TestScriptAction1)theEObject;
			T result = caseTestScriptAction1(testScriptAction1);
			if (result == null) result = caseBackboneElement(testScriptAction1);
			if (result == null) result = caseElement(testScriptAction1);
			if (result == null) result = caseBase(testScriptAction1);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.TEST_SCRIPT_ACTION2: {
			final TestScriptAction2 testScriptAction2 = (TestScriptAction2)theEObject;
			T result = caseTestScriptAction2(testScriptAction2);
			if (result == null) result = caseBackboneElement(testScriptAction2);
			if (result == null) result = caseElement(testScriptAction2);
			if (result == null) result = caseBase(testScriptAction2);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.TEST_SCRIPT_ASSERT: {
			final TestScriptAssert testScriptAssert = (TestScriptAssert)theEObject;
			T result = caseTestScriptAssert(testScriptAssert);
			if (result == null) result = caseBackboneElement(testScriptAssert);
			if (result == null) result = caseElement(testScriptAssert);
			if (result == null) result = caseBase(testScriptAssert);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.TEST_SCRIPT_CAPABILITY: {
			final TestScriptCapability testScriptCapability = (TestScriptCapability)theEObject;
			T result = caseTestScriptCapability(testScriptCapability);
			if (result == null) result = caseBackboneElement(testScriptCapability);
			if (result == null) result = caseElement(testScriptCapability);
			if (result == null) result = caseBase(testScriptCapability);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.TEST_SCRIPT_DESTINATION: {
			final TestScriptDestination testScriptDestination = (TestScriptDestination)theEObject;
			T result = caseTestScriptDestination(testScriptDestination);
			if (result == null) result = caseBackboneElement(testScriptDestination);
			if (result == null) result = caseElement(testScriptDestination);
			if (result == null) result = caseBase(testScriptDestination);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.TEST_SCRIPT_FIXTURE: {
			final TestScriptFixture testScriptFixture = (TestScriptFixture)theEObject;
			T result = caseTestScriptFixture(testScriptFixture);
			if (result == null) result = caseBackboneElement(testScriptFixture);
			if (result == null) result = caseElement(testScriptFixture);
			if (result == null) result = caseBase(testScriptFixture);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.TEST_SCRIPT_LINK: {
			final TestScriptLink testScriptLink = (TestScriptLink)theEObject;
			T result = caseTestScriptLink(testScriptLink);
			if (result == null) result = caseBackboneElement(testScriptLink);
			if (result == null) result = caseElement(testScriptLink);
			if (result == null) result = caseBase(testScriptLink);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.TEST_SCRIPT_METADATA: {
			final TestScriptMetadata testScriptMetadata = (TestScriptMetadata)theEObject;
			T result = caseTestScriptMetadata(testScriptMetadata);
			if (result == null) result = caseBackboneElement(testScriptMetadata);
			if (result == null) result = caseElement(testScriptMetadata);
			if (result == null) result = caseBase(testScriptMetadata);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.TEST_SCRIPT_OPERATION: {
			final TestScriptOperation testScriptOperation = (TestScriptOperation)theEObject;
			T result = caseTestScriptOperation(testScriptOperation);
			if (result == null) result = caseBackboneElement(testScriptOperation);
			if (result == null) result = caseElement(testScriptOperation);
			if (result == null) result = caseBase(testScriptOperation);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.TEST_SCRIPT_ORIGIN: {
			final TestScriptOrigin testScriptOrigin = (TestScriptOrigin)theEObject;
			T result = caseTestScriptOrigin(testScriptOrigin);
			if (result == null) result = caseBackboneElement(testScriptOrigin);
			if (result == null) result = caseElement(testScriptOrigin);
			if (result == null) result = caseBase(testScriptOrigin);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.TEST_SCRIPT_REQUEST_HEADER: {
			final TestScriptRequestHeader testScriptRequestHeader = (TestScriptRequestHeader)theEObject;
			T result = caseTestScriptRequestHeader(testScriptRequestHeader);
			if (result == null) result = caseBackboneElement(testScriptRequestHeader);
			if (result == null) result = caseElement(testScriptRequestHeader);
			if (result == null) result = caseBase(testScriptRequestHeader);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.TEST_SCRIPT_REQUEST_METHOD_CODE: {
			final TestScriptRequestMethodCode testScriptRequestMethodCode = (TestScriptRequestMethodCode)theEObject;
			T result = caseTestScriptRequestMethodCode(testScriptRequestMethodCode);
			if (result == null) result = caseElement(testScriptRequestMethodCode);
			if (result == null) result = caseBase(testScriptRequestMethodCode);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.TEST_SCRIPT_REQUIREMENT: {
			final TestScriptRequirement testScriptRequirement = (TestScriptRequirement)theEObject;
			T result = caseTestScriptRequirement(testScriptRequirement);
			if (result == null) result = caseBackboneElement(testScriptRequirement);
			if (result == null) result = caseElement(testScriptRequirement);
			if (result == null) result = caseBase(testScriptRequirement);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.TEST_SCRIPT_SCOPE: {
			final TestScriptScope testScriptScope = (TestScriptScope)theEObject;
			T result = caseTestScriptScope(testScriptScope);
			if (result == null) result = caseBackboneElement(testScriptScope);
			if (result == null) result = caseElement(testScriptScope);
			if (result == null) result = caseBase(testScriptScope);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.TEST_SCRIPT_SETUP: {
			final TestScriptSetup testScriptSetup = (TestScriptSetup)theEObject;
			T result = caseTestScriptSetup(testScriptSetup);
			if (result == null) result = caseBackboneElement(testScriptSetup);
			if (result == null) result = caseElement(testScriptSetup);
			if (result == null) result = caseBase(testScriptSetup);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.TEST_SCRIPT_TEARDOWN: {
			final TestScriptTeardown testScriptTeardown = (TestScriptTeardown)theEObject;
			T result = caseTestScriptTeardown(testScriptTeardown);
			if (result == null) result = caseBackboneElement(testScriptTeardown);
			if (result == null) result = caseElement(testScriptTeardown);
			if (result == null) result = caseBase(testScriptTeardown);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.TEST_SCRIPT_TEST: {
			final TestScriptTest testScriptTest = (TestScriptTest)theEObject;
			T result = caseTestScriptTest(testScriptTest);
			if (result == null) result = caseBackboneElement(testScriptTest);
			if (result == null) result = caseElement(testScriptTest);
			if (result == null) result = caseBase(testScriptTest);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.TEST_SCRIPT_VARIABLE: {
			final TestScriptVariable testScriptVariable = (TestScriptVariable)theEObject;
			T result = caseTestScriptVariable(testScriptVariable);
			if (result == null) result = caseBackboneElement(testScriptVariable);
			if (result == null) result = caseElement(testScriptVariable);
			if (result == null) result = caseBase(testScriptVariable);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.TIME: {
			final Time time = (Time)theEObject;
			T result = caseTime(time);
			if (result == null) result = caseElement(time);
			if (result == null) result = caseBase(time);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.TIMING: {
			final Timing timing = (Timing)theEObject;
			T result = caseTiming(timing);
			if (result == null) result = caseBackboneType(timing);
			if (result == null) result = caseDataType(timing);
			if (result == null) result = caseElement(timing);
			if (result == null) result = caseBase(timing);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.TIMING_REPEAT: {
			final TimingRepeat timingRepeat = (TimingRepeat)theEObject;
			T result = caseTimingRepeat(timingRepeat);
			if (result == null) result = caseBackboneType(timingRepeat);
			if (result == null) result = caseDataType(timingRepeat);
			if (result == null) result = caseElement(timingRepeat);
			if (result == null) result = caseBase(timingRepeat);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.TRANSPORT: {
			final Transport transport = (Transport)theEObject;
			T result = caseTransport(transport);
			if (result == null) result = caseDomainResource(transport);
			if (result == null) result = caseResource(transport);
			if (result == null) result = caseBase(transport);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.TRANSPORT_INPUT: {
			final TransportInput transportInput = (TransportInput)theEObject;
			T result = caseTransportInput(transportInput);
			if (result == null) result = caseBackboneElement(transportInput);
			if (result == null) result = caseElement(transportInput);
			if (result == null) result = caseBase(transportInput);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.TRANSPORT_INTENT: {
			final TransportIntent transportIntent = (TransportIntent)theEObject;
			T result = caseTransportIntent(transportIntent);
			if (result == null) result = caseElement(transportIntent);
			if (result == null) result = caseBase(transportIntent);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.TRANSPORT_OUTPUT: {
			final TransportOutput transportOutput = (TransportOutput)theEObject;
			T result = caseTransportOutput(transportOutput);
			if (result == null) result = caseBackboneElement(transportOutput);
			if (result == null) result = caseElement(transportOutput);
			if (result == null) result = caseBase(transportOutput);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.TRANSPORT_RESTRICTION: {
			final TransportRestriction transportRestriction = (TransportRestriction)theEObject;
			T result = caseTransportRestriction(transportRestriction);
			if (result == null) result = caseBackboneElement(transportRestriction);
			if (result == null) result = caseElement(transportRestriction);
			if (result == null) result = caseBase(transportRestriction);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.TRANSPORT_STATUS: {
			final TransportStatus transportStatus = (TransportStatus)theEObject;
			T result = caseTransportStatus(transportStatus);
			if (result == null) result = caseElement(transportStatus);
			if (result == null) result = caseBase(transportStatus);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.TRIGGER_DEFINITION: {
			final TriggerDefinition triggerDefinition = (TriggerDefinition)theEObject;
			T result = caseTriggerDefinition(triggerDefinition);
			if (result == null) result = caseDataType(triggerDefinition);
			if (result == null) result = caseElement(triggerDefinition);
			if (result == null) result = caseBase(triggerDefinition);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.TRIGGERED_BYTYPE: {
			final TriggeredBytype triggeredBytype = (TriggeredBytype)theEObject;
			T result = caseTriggeredBytype(triggeredBytype);
			if (result == null) result = caseElement(triggeredBytype);
			if (result == null) result = caseBase(triggeredBytype);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.TRIGGER_TYPE: {
			final TriggerType triggerType = (TriggerType)theEObject;
			T result = caseTriggerType(triggerType);
			if (result == null) result = caseElement(triggerType);
			if (result == null) result = caseBase(triggerType);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.TYPE_DERIVATION_RULE: {
			final TypeDerivationRule typeDerivationRule = (TypeDerivationRule)theEObject;
			T result = caseTypeDerivationRule(typeDerivationRule);
			if (result == null) result = caseElement(typeDerivationRule);
			if (result == null) result = caseBase(typeDerivationRule);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.TYPE_RESTFUL_INTERACTION: {
			final TypeRestfulInteraction typeRestfulInteraction = (TypeRestfulInteraction)theEObject;
			T result = caseTypeRestfulInteraction(typeRestfulInteraction);
			if (result == null) result = caseElement(typeRestfulInteraction);
			if (result == null) result = caseBase(typeRestfulInteraction);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.UDI_ENTRY_TYPE: {
			final UDIEntryType udiEntryType = (UDIEntryType)theEObject;
			T result = caseUDIEntryType(udiEntryType);
			if (result == null) result = caseElement(udiEntryType);
			if (result == null) result = caseBase(udiEntryType);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.UNITS_OF_TIME: {
			final UnitsOfTime unitsOfTime = (UnitsOfTime)theEObject;
			T result = caseUnitsOfTime(unitsOfTime);
			if (result == null) result = caseElement(unitsOfTime);
			if (result == null) result = caseBase(unitsOfTime);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.UNSIGNED_INT: {
			final UnsignedInt unsignedInt = (UnsignedInt)theEObject;
			T result = caseUnsignedInt(unsignedInt);
			if (result == null) result = caseElement(unsignedInt);
			if (result == null) result = caseBase(unsignedInt);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.URI: {
			final Uri uri = (Uri)theEObject;
			T result = caseUri(uri);
			if (result == null) result = caseElement(uri);
			if (result == null) result = caseBase(uri);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.URL: {
			final Url url = (Url)theEObject;
			T result = caseUrl(url);
			if (result == null) result = caseElement(url);
			if (result == null) result = caseBase(url);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.USAGE_CONTEXT: {
			final UsageContext usageContext = (UsageContext)theEObject;
			T result = caseUsageContext(usageContext);
			if (result == null) result = caseDataType(usageContext);
			if (result == null) result = caseElement(usageContext);
			if (result == null) result = caseBase(usageContext);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.USE: {
			final Use use = (Use)theEObject;
			T result = caseUse(use);
			if (result == null) result = caseElement(use);
			if (result == null) result = caseBase(use);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.UUID: {
			final Uuid uuid = (Uuid)theEObject;
			T result = caseUuid(uuid);
			if (result == null) result = caseElement(uuid);
			if (result == null) result = caseBase(uuid);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.VALUE_SET: {
			final ValueSet valueSet = (ValueSet)theEObject;
			T result = caseValueSet(valueSet);
			if (result == null) result = caseMetadataResource(valueSet);
			if (result == null) result = caseCanonicalResource(valueSet);
			if (result == null) result = caseDomainResource(valueSet);
			if (result == null) result = caseResource(valueSet);
			if (result == null) result = caseBase(valueSet);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.VALUE_SET_COMPOSE: {
			final ValueSetCompose valueSetCompose = (ValueSetCompose)theEObject;
			T result = caseValueSetCompose(valueSetCompose);
			if (result == null) result = caseBackboneElement(valueSetCompose);
			if (result == null) result = caseElement(valueSetCompose);
			if (result == null) result = caseBase(valueSetCompose);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.VALUE_SET_CONCEPT: {
			final ValueSetConcept valueSetConcept = (ValueSetConcept)theEObject;
			T result = caseValueSetConcept(valueSetConcept);
			if (result == null) result = caseBackboneElement(valueSetConcept);
			if (result == null) result = caseElement(valueSetConcept);
			if (result == null) result = caseBase(valueSetConcept);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.VALUE_SET_CONTAINS: {
			final ValueSetContains valueSetContains = (ValueSetContains)theEObject;
			T result = caseValueSetContains(valueSetContains);
			if (result == null) result = caseBackboneElement(valueSetContains);
			if (result == null) result = caseElement(valueSetContains);
			if (result == null) result = caseBase(valueSetContains);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.VALUE_SET_DESIGNATION: {
			final ValueSetDesignation valueSetDesignation = (ValueSetDesignation)theEObject;
			T result = caseValueSetDesignation(valueSetDesignation);
			if (result == null) result = caseBackboneElement(valueSetDesignation);
			if (result == null) result = caseElement(valueSetDesignation);
			if (result == null) result = caseBase(valueSetDesignation);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.VALUE_SET_EXPANSION: {
			final ValueSetExpansion valueSetExpansion = (ValueSetExpansion)theEObject;
			T result = caseValueSetExpansion(valueSetExpansion);
			if (result == null) result = caseBackboneElement(valueSetExpansion);
			if (result == null) result = caseElement(valueSetExpansion);
			if (result == null) result = caseBase(valueSetExpansion);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.VALUE_SET_FILTER: {
			final ValueSetFilter valueSetFilter = (ValueSetFilter)theEObject;
			T result = caseValueSetFilter(valueSetFilter);
			if (result == null) result = caseBackboneElement(valueSetFilter);
			if (result == null) result = caseElement(valueSetFilter);
			if (result == null) result = caseBase(valueSetFilter);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.VALUE_SET_INCLUDE: {
			final ValueSetInclude valueSetInclude = (ValueSetInclude)theEObject;
			T result = caseValueSetInclude(valueSetInclude);
			if (result == null) result = caseBackboneElement(valueSetInclude);
			if (result == null) result = caseElement(valueSetInclude);
			if (result == null) result = caseBase(valueSetInclude);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.VALUE_SET_PARAMETER: {
			final ValueSetParameter valueSetParameter = (ValueSetParameter)theEObject;
			T result = caseValueSetParameter(valueSetParameter);
			if (result == null) result = caseBackboneElement(valueSetParameter);
			if (result == null) result = caseElement(valueSetParameter);
			if (result == null) result = caseBase(valueSetParameter);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.VALUE_SET_PROPERTY: {
			final ValueSetProperty valueSetProperty = (ValueSetProperty)theEObject;
			T result = caseValueSetProperty(valueSetProperty);
			if (result == null) result = caseBackboneElement(valueSetProperty);
			if (result == null) result = caseElement(valueSetProperty);
			if (result == null) result = caseBase(valueSetProperty);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.VALUE_SET_PROPERTY1: {
			final ValueSetProperty1 valueSetProperty1 = (ValueSetProperty1)theEObject;
			T result = caseValueSetProperty1(valueSetProperty1);
			if (result == null) result = caseBackboneElement(valueSetProperty1);
			if (result == null) result = caseElement(valueSetProperty1);
			if (result == null) result = caseBase(valueSetProperty1);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.VALUE_SET_SCOPE: {
			final ValueSetScope valueSetScope = (ValueSetScope)theEObject;
			T result = caseValueSetScope(valueSetScope);
			if (result == null) result = caseBackboneElement(valueSetScope);
			if (result == null) result = caseElement(valueSetScope);
			if (result == null) result = caseBase(valueSetScope);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.VALUE_SET_SUB_PROPERTY: {
			final ValueSetSubProperty valueSetSubProperty = (ValueSetSubProperty)theEObject;
			T result = caseValueSetSubProperty(valueSetSubProperty);
			if (result == null) result = caseBackboneElement(valueSetSubProperty);
			if (result == null) result = caseElement(valueSetSubProperty);
			if (result == null) result = caseBase(valueSetSubProperty);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.VERIFICATION_RESULT: {
			final VerificationResult verificationResult = (VerificationResult)theEObject;
			T result = caseVerificationResult(verificationResult);
			if (result == null) result = caseDomainResource(verificationResult);
			if (result == null) result = caseResource(verificationResult);
			if (result == null) result = caseBase(verificationResult);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.VERIFICATION_RESULT_ATTESTATION: {
			final VerificationResultAttestation verificationResultAttestation = (VerificationResultAttestation)theEObject;
			T result = caseVerificationResultAttestation(verificationResultAttestation);
			if (result == null) result = caseBackboneElement(verificationResultAttestation);
			if (result == null) result = caseElement(verificationResultAttestation);
			if (result == null) result = caseBase(verificationResultAttestation);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.VERIFICATION_RESULT_PRIMARY_SOURCE: {
			final VerificationResultPrimarySource verificationResultPrimarySource = (VerificationResultPrimarySource)theEObject;
			T result = caseVerificationResultPrimarySource(verificationResultPrimarySource);
			if (result == null) result = caseBackboneElement(verificationResultPrimarySource);
			if (result == null) result = caseElement(verificationResultPrimarySource);
			if (result == null) result = caseBase(verificationResultPrimarySource);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.VERIFICATION_RESULT_STATUS: {
			final VerificationResultStatus verificationResultStatus = (VerificationResultStatus)theEObject;
			T result = caseVerificationResultStatus(verificationResultStatus);
			if (result == null) result = caseElement(verificationResultStatus);
			if (result == null) result = caseBase(verificationResultStatus);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.VERIFICATION_RESULT_VALIDATOR: {
			final VerificationResultValidator verificationResultValidator = (VerificationResultValidator)theEObject;
			T result = caseVerificationResultValidator(verificationResultValidator);
			if (result == null) result = caseBackboneElement(verificationResultValidator);
			if (result == null) result = caseElement(verificationResultValidator);
			if (result == null) result = caseBase(verificationResultValidator);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.VERSION_INDEPENDENT_RESOURCE_TYPES_ALL: {
			final VersionIndependentResourceTypesAll versionIndependentResourceTypesAll = (VersionIndependentResourceTypesAll)theEObject;
			T result = caseVersionIndependentResourceTypesAll(versionIndependentResourceTypesAll);
			if (result == null) result = caseElement(versionIndependentResourceTypesAll);
			if (result == null) result = caseBase(versionIndependentResourceTypesAll);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.VIRTUAL_SERVICE_DETAIL: {
			final VirtualServiceDetail virtualServiceDetail = (VirtualServiceDetail)theEObject;
			T result = caseVirtualServiceDetail(virtualServiceDetail);
			if (result == null) result = caseDataType(virtualServiceDetail);
			if (result == null) result = caseElement(virtualServiceDetail);
			if (result == null) result = caseBase(virtualServiceDetail);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.VISION_BASE: {
			final VisionBase visionBase = (VisionBase)theEObject;
			T result = caseVisionBase(visionBase);
			if (result == null) result = caseElement(visionBase);
			if (result == null) result = caseBase(visionBase);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.VISION_EYES: {
			final VisionEyes visionEyes = (VisionEyes)theEObject;
			T result = caseVisionEyes(visionEyes);
			if (result == null) result = caseElement(visionEyes);
			if (result == null) result = caseBase(visionEyes);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.VISION_PRESCRIPTION: {
			final VisionPrescription visionPrescription = (VisionPrescription)theEObject;
			T result = caseVisionPrescription(visionPrescription);
			if (result == null) result = caseDomainResource(visionPrescription);
			if (result == null) result = caseResource(visionPrescription);
			if (result == null) result = caseBase(visionPrescription);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.VISION_PRESCRIPTION_LENS_SPECIFICATION: {
			final VisionPrescriptionLensSpecification visionPrescriptionLensSpecification = (VisionPrescriptionLensSpecification)theEObject;
			T result = caseVisionPrescriptionLensSpecification(visionPrescriptionLensSpecification);
			if (result == null) result = caseBackboneElement(visionPrescriptionLensSpecification);
			if (result == null) result = caseElement(visionPrescriptionLensSpecification);
			if (result == null) result = caseBase(visionPrescriptionLensSpecification);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		case FhirPackage.VISION_PRESCRIPTION_PRISM: {
			final VisionPrescriptionPrism visionPrescriptionPrism = (VisionPrescriptionPrism)theEObject;
			T result = caseVisionPrescriptionPrism(visionPrescriptionPrism);
			if (result == null) result = caseBackboneElement(visionPrescriptionPrism);
			if (result == null) result = caseElement(visionPrescriptionPrism);
			if (result == null) result = caseBase(visionPrescriptionPrism);
			if (result == null) result = defaultCase(theEObject);
			return result;
		}
		default:
			return defaultCase(theEObject);
		}
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Account</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Account</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseAccount(Account object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Account Balance</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Account Balance</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseAccountBalance(AccountBalance object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Account Coverage</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Account Coverage</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseAccountCoverage(AccountCoverage object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Account Diagnosis</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Account Diagnosis</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseAccountDiagnosis(AccountDiagnosis object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Account Guarantor</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Account Guarantor</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseAccountGuarantor(AccountGuarantor object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Account Procedure</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Account Procedure</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseAccountProcedure(AccountProcedure object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Account Related Account</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Account Related Account</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseAccountRelatedAccount(AccountRelatedAccount object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Account Status</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Account Status</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseAccountStatus(AccountStatus object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Action Cardinality Behavior</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Action Cardinality Behavior</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseActionCardinalityBehavior(ActionCardinalityBehavior object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Action Condition Kind</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Action Condition Kind</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseActionConditionKind(ActionConditionKind object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Action Grouping Behavior</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Action Grouping Behavior</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseActionGroupingBehavior(ActionGroupingBehavior object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Action Participant Type</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Action Participant Type</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseActionParticipantType(ActionParticipantType object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Action Precheck Behavior</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Action Precheck Behavior</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseActionPrecheckBehavior(ActionPrecheckBehavior object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Action Relationship Type</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Action Relationship Type</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseActionRelationshipType(ActionRelationshipType object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Action Required Behavior</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Action Required Behavior</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseActionRequiredBehavior(ActionRequiredBehavior object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Action Selection Behavior</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Action Selection Behavior</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseActionSelectionBehavior(ActionSelectionBehavior object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Activity Definition</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Activity Definition</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseActivityDefinition(ActivityDefinition object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Activity Definition Dynamic Value</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Activity Definition Dynamic Value</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseActivityDefinitionDynamicValue(ActivityDefinitionDynamicValue object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Activity Definition Participant</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Activity Definition Participant</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseActivityDefinitionParticipant(ActivityDefinitionParticipant object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Actor Definition</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Actor Definition</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseActorDefinition(ActorDefinition object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Address</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Address</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseAddress(Address object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Address Type</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Address Type</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseAddressType(AddressType object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Address Use</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Address Use</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseAddressUse(AddressUse object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Administrable Product Definition</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Administrable Product Definition</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseAdministrableProductDefinition(AdministrableProductDefinition object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Administrable Product Definition Property</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Administrable Product Definition Property</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseAdministrableProductDefinitionProperty(AdministrableProductDefinitionProperty object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Administrable Product Definition Route Of Administration</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Administrable Product Definition Route Of Administration</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseAdministrableProductDefinitionRouteOfAdministration(AdministrableProductDefinitionRouteOfAdministration object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Administrable Product Definition Target Species</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Administrable Product Definition Target Species</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseAdministrableProductDefinitionTargetSpecies(AdministrableProductDefinitionTargetSpecies object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Administrable Product Definition Withdrawal Period</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Administrable Product Definition Withdrawal Period</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseAdministrableProductDefinitionWithdrawalPeriod(AdministrableProductDefinitionWithdrawalPeriod object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Administrative Gender</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Administrative Gender</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseAdministrativeGender(AdministrativeGender object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Adverse Event</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Adverse Event</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseAdverseEvent(AdverseEvent object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Adverse Event Actuality</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Adverse Event Actuality</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseAdverseEventActuality(AdverseEventActuality object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Adverse Event Causality</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Adverse Event Causality</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseAdverseEventCausality(AdverseEventCausality object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Adverse Event Contributing Factor</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Adverse Event Contributing Factor</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseAdverseEventContributingFactor(AdverseEventContributingFactor object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Adverse Event Mitigating Action</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Adverse Event Mitigating Action</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseAdverseEventMitigatingAction(AdverseEventMitigatingAction object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Adverse Event Participant</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Adverse Event Participant</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseAdverseEventParticipant(AdverseEventParticipant object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Adverse Event Preventive Action</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Adverse Event Preventive Action</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseAdverseEventPreventiveAction(AdverseEventPreventiveAction object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Adverse Event Status</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Adverse Event Status</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseAdverseEventStatus(AdverseEventStatus object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Adverse Event Supporting Info</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Adverse Event Supporting Info</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseAdverseEventSupportingInfo(AdverseEventSupportingInfo object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Adverse Event Suspect Entity</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Adverse Event Suspect Entity</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseAdverseEventSuspectEntity(AdverseEventSuspectEntity object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Age</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Age</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseAge(Age object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Age Units</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Age Units</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseAgeUnits(AgeUnits object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Aggregation Mode</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Aggregation Mode</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseAggregationMode(AggregationMode object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Allergy Intolerance</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Allergy Intolerance</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseAllergyIntolerance(AllergyIntolerance object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Allergy Intolerance Category</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Allergy Intolerance Category</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseAllergyIntoleranceCategory(AllergyIntoleranceCategory object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Allergy Intolerance Criticality</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Allergy Intolerance Criticality</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseAllergyIntoleranceCriticality(AllergyIntoleranceCriticality object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Allergy Intolerance Participant</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Allergy Intolerance Participant</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseAllergyIntoleranceParticipant(AllergyIntoleranceParticipant object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Allergy Intolerance Reaction</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Allergy Intolerance Reaction</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseAllergyIntoleranceReaction(AllergyIntoleranceReaction object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Allergy Intolerance Severity</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Allergy Intolerance Severity</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseAllergyIntoleranceSeverity(AllergyIntoleranceSeverity object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>All Resource Types</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>All Resource Types</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseAllResourceTypes(AllResourceTypes object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Annotation</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Annotation</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseAnnotation(Annotation object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Appointment</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Appointment</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseAppointment(Appointment object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Appointment Monthly Template</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Appointment Monthly Template</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseAppointmentMonthlyTemplate(AppointmentMonthlyTemplate object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Appointment Participant</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Appointment Participant</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseAppointmentParticipant(AppointmentParticipant object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Appointment Recurrence Template</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Appointment Recurrence Template</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseAppointmentRecurrenceTemplate(AppointmentRecurrenceTemplate object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Appointment Response</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Appointment Response</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseAppointmentResponse(AppointmentResponse object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Appointment Response Status</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Appointment Response Status</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseAppointmentResponseStatus(AppointmentResponseStatus object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Appointment Status</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Appointment Status</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseAppointmentStatus(AppointmentStatus object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Appointment Weekly Template</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Appointment Weekly Template</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseAppointmentWeeklyTemplate(AppointmentWeeklyTemplate object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Appointment Yearly Template</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Appointment Yearly Template</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseAppointmentYearlyTemplate(AppointmentYearlyTemplate object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Artifact Assessment</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Artifact Assessment</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseArtifactAssessment(ArtifactAssessment object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Artifact Assessment Content</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Artifact Assessment Content</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseArtifactAssessmentContent(ArtifactAssessmentContent object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Artifact Assessment Disposition</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Artifact Assessment Disposition</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseArtifactAssessmentDisposition(ArtifactAssessmentDisposition object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Artifact Assessment Information Type</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Artifact Assessment Information Type</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseArtifactAssessmentInformationType(ArtifactAssessmentInformationType object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Artifact Assessment Workflow Status</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Artifact Assessment Workflow Status</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseArtifactAssessmentWorkflowStatus(ArtifactAssessmentWorkflowStatus object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Assertion Direction Type</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Assertion Direction Type</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseAssertionDirectionType(AssertionDirectionType object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Assertion Manual Completion Type</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Assertion Manual Completion Type</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseAssertionManualCompletionType(AssertionManualCompletionType object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Assertion Operator Type</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Assertion Operator Type</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseAssertionOperatorType(AssertionOperatorType object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Assertion Response Types</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Assertion Response Types</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseAssertionResponseTypes(AssertionResponseTypes object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Attachment</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Attachment</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseAttachment(Attachment object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Audit Event</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Audit Event</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseAuditEvent(AuditEvent object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Audit Event Action</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Audit Event Action</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseAuditEventAction(AuditEventAction object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Audit Event Agent</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Audit Event Agent</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseAuditEventAgent(AuditEventAgent object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Audit Event Detail</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Audit Event Detail</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseAuditEventDetail(AuditEventDetail object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Audit Event Entity</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Audit Event Entity</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseAuditEventEntity(AuditEventEntity object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Audit Event Outcome</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Audit Event Outcome</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseAuditEventOutcome(AuditEventOutcome object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Audit Event Severity</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Audit Event Severity</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseAuditEventSeverity(AuditEventSeverity object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Audit Event Source</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Audit Event Source</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseAuditEventSource(AuditEventSource object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Availability</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Availability</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseAvailability(Availability object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Availability Available Time</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Availability Available Time</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseAvailabilityAvailableTime(AvailabilityAvailableTime object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Availability Not Available Time</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Availability Not Available Time</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseAvailabilityNotAvailableTime(AvailabilityNotAvailableTime object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Backbone Element</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Backbone Element</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseBackboneElement(BackboneElement object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Backbone Type</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Backbone Type</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseBackboneType(BackboneType object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Base</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Base</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseBase(Base object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Base64 Binary</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Base64 Binary</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseBase64Binary(Base64Binary object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Basic</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Basic</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseBasic(Basic object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Binary</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Binary</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseBinary(Binary object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Binding Strength</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Binding Strength</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseBindingStrength(BindingStrength object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Biologically Derived Product</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Biologically Derived Product</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseBiologicallyDerivedProduct(BiologicallyDerivedProduct object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Biologically Derived Product Collection</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Biologically Derived Product Collection</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseBiologicallyDerivedProductCollection(BiologicallyDerivedProductCollection object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Biologically Derived Product Dispense</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Biologically Derived Product Dispense</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseBiologicallyDerivedProductDispense(BiologicallyDerivedProductDispense object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Biologically Derived Product Dispense Codes</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Biologically Derived Product Dispense Codes</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseBiologicallyDerivedProductDispenseCodes(BiologicallyDerivedProductDispenseCodes object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Biologically Derived Product Dispense Performer</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Biologically Derived Product Dispense Performer</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseBiologicallyDerivedProductDispensePerformer(BiologicallyDerivedProductDispensePerformer object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Biologically Derived Product Property</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Biologically Derived Product Property</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseBiologicallyDerivedProductProperty(BiologicallyDerivedProductProperty object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Body Structure</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Body Structure</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseBodyStructure(BodyStructure object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Body Structure Body Landmark Orientation</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Body Structure Body Landmark Orientation</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseBodyStructureBodyLandmarkOrientation(BodyStructureBodyLandmarkOrientation object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Body Structure Distance From Landmark</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Body Structure Distance From Landmark</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseBodyStructureDistanceFromLandmark(BodyStructureDistanceFromLandmark object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Body Structure Included Structure</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Body Structure Included Structure</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseBodyStructureIncludedStructure(BodyStructureIncludedStructure object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Boolean</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Boolean</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseBoolean(org.hl7.emf.fhir.Boolean object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Bundle</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Bundle</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseBundle(Bundle object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Bundle Entry</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Bundle Entry</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseBundleEntry(BundleEntry object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Bundle Link</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Bundle Link</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseBundleLink(BundleLink object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Bundle Request</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Bundle Request</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseBundleRequest(BundleRequest object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Bundle Response</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Bundle Response</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseBundleResponse(BundleResponse object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Bundle Search</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Bundle Search</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseBundleSearch(BundleSearch object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Bundle Type</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Bundle Type</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseBundleType(BundleType object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Canonical</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Canonical</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseCanonical(Canonical object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Canonical Resource</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Canonical Resource</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseCanonicalResource(CanonicalResource object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Capability Statement</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Capability Statement</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseCapabilityStatement(CapabilityStatement object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Capability Statement Document</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Capability Statement Document</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseCapabilityStatementDocument(CapabilityStatementDocument object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Capability Statement Endpoint</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Capability Statement Endpoint</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseCapabilityStatementEndpoint(CapabilityStatementEndpoint object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Capability Statement Implementation</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Capability Statement Implementation</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseCapabilityStatementImplementation(CapabilityStatementImplementation object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Capability Statement Interaction</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Capability Statement Interaction</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseCapabilityStatementInteraction(CapabilityStatementInteraction object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Capability Statement Interaction1</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Capability Statement Interaction1</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseCapabilityStatementInteraction1(CapabilityStatementInteraction1 object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Capability Statement Kind</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Capability Statement Kind</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseCapabilityStatementKind(CapabilityStatementKind object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Capability Statement Messaging</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Capability Statement Messaging</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseCapabilityStatementMessaging(CapabilityStatementMessaging object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Capability Statement Operation</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Capability Statement Operation</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseCapabilityStatementOperation(CapabilityStatementOperation object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Capability Statement Resource</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Capability Statement Resource</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseCapabilityStatementResource(CapabilityStatementResource object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Capability Statement Rest</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Capability Statement Rest</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseCapabilityStatementRest(CapabilityStatementRest object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Capability Statement Search Param</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Capability Statement Search Param</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseCapabilityStatementSearchParam(CapabilityStatementSearchParam object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Capability Statement Security</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Capability Statement Security</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseCapabilityStatementSecurity(CapabilityStatementSecurity object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Capability Statement Software</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Capability Statement Software</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseCapabilityStatementSoftware(CapabilityStatementSoftware object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Capability Statement Supported Message</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Capability Statement Supported Message</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseCapabilityStatementSupportedMessage(CapabilityStatementSupportedMessage object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Care Plan</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Care Plan</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseCarePlan(CarePlan object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Care Plan Activity</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Care Plan Activity</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseCarePlanActivity(CarePlanActivity object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Care Plan Intent</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Care Plan Intent</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseCarePlanIntent(CarePlanIntent object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Care Team</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Care Team</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseCareTeam(CareTeam object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Care Team Participant</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Care Team Participant</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseCareTeamParticipant(CareTeamParticipant object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Care Team Status</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Care Team Status</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseCareTeamStatus(CareTeamStatus object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Characteristic Combination</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Characteristic Combination</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseCharacteristicCombination(CharacteristicCombination object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Charge Item</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Charge Item</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseChargeItem(ChargeItem object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Charge Item Definition</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Charge Item Definition</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseChargeItemDefinition(ChargeItemDefinition object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Charge Item Definition Applicability</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Charge Item Definition Applicability</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseChargeItemDefinitionApplicability(ChargeItemDefinitionApplicability object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Charge Item Definition Property Group</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Charge Item Definition Property Group</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseChargeItemDefinitionPropertyGroup(ChargeItemDefinitionPropertyGroup object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Charge Item Performer</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Charge Item Performer</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseChargeItemPerformer(ChargeItemPerformer object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Charge Item Status</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Charge Item Status</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseChargeItemStatus(ChargeItemStatus object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Citation</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Citation</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseCitation(Citation object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Citation Abstract</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Citation Abstract</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseCitationAbstract(CitationAbstract object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Citation Cited Artifact</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Citation Cited Artifact</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseCitationCitedArtifact(CitationCitedArtifact object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Citation Classification</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Citation Classification</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseCitationClassification(CitationClassification object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Citation Classification1</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Citation Classification1</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseCitationClassification1(CitationClassification1 object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Citation Contribution Instance</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Citation Contribution Instance</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseCitationContributionInstance(CitationContributionInstance object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Citation Contributorship</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Citation Contributorship</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseCitationContributorship(CitationContributorship object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Citation Entry</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Citation Entry</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseCitationEntry(CitationEntry object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Citation Part</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Citation Part</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseCitationPart(CitationPart object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Citation Publication Form</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Citation Publication Form</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseCitationPublicationForm(CitationPublicationForm object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Citation Published In</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Citation Published In</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseCitationPublishedIn(CitationPublishedIn object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Citation Relates To</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Citation Relates To</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseCitationRelatesTo(CitationRelatesTo object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Citation Status Date</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Citation Status Date</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseCitationStatusDate(CitationStatusDate object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Citation Status Date1</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Citation Status Date1</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseCitationStatusDate1(CitationStatusDate1 object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Citation Summary</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Citation Summary</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseCitationSummary(CitationSummary object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Citation Summary1</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Citation Summary1</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseCitationSummary1(CitationSummary1 object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Citation Title</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Citation Title</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseCitationTitle(CitationTitle object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Citation Version</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Citation Version</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseCitationVersion(CitationVersion object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Citation Web Location</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Citation Web Location</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseCitationWebLocation(CitationWebLocation object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Claim</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Claim</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseClaim(Claim object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Claim Accident</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Claim Accident</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseClaimAccident(ClaimAccident object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Claim Body Site</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Claim Body Site</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseClaimBodySite(ClaimBodySite object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Claim Care Team</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Claim Care Team</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseClaimCareTeam(ClaimCareTeam object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Claim Detail</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Claim Detail</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseClaimDetail(ClaimDetail object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Claim Diagnosis</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Claim Diagnosis</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseClaimDiagnosis(ClaimDiagnosis object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Claim Event</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Claim Event</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseClaimEvent(ClaimEvent object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Claim Insurance</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Claim Insurance</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseClaimInsurance(ClaimInsurance object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Claim Item</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Claim Item</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseClaimItem(ClaimItem object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Claim Payee</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Claim Payee</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseClaimPayee(ClaimPayee object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Claim Procedure</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Claim Procedure</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseClaimProcedure(ClaimProcedure object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Claim Processing Codes</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Claim Processing Codes</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseClaimProcessingCodes(ClaimProcessingCodes object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Claim Related</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Claim Related</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseClaimRelated(ClaimRelated object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Claim Response</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Claim Response</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseClaimResponse(ClaimResponse object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Claim Response Add Item</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Claim Response Add Item</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseClaimResponseAddItem(ClaimResponseAddItem object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Claim Response Adjudication</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Claim Response Adjudication</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseClaimResponseAdjudication(ClaimResponseAdjudication object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Claim Response Body Site</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Claim Response Body Site</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseClaimResponseBodySite(ClaimResponseBodySite object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Claim Response Detail</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Claim Response Detail</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseClaimResponseDetail(ClaimResponseDetail object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Claim Response Detail1</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Claim Response Detail1</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseClaimResponseDetail1(ClaimResponseDetail1 object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Claim Response Error</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Claim Response Error</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseClaimResponseError(ClaimResponseError object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Claim Response Event</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Claim Response Event</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseClaimResponseEvent(ClaimResponseEvent object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Claim Response Insurance</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Claim Response Insurance</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseClaimResponseInsurance(ClaimResponseInsurance object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Claim Response Item</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Claim Response Item</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseClaimResponseItem(ClaimResponseItem object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Claim Response Payment</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Claim Response Payment</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseClaimResponsePayment(ClaimResponsePayment object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Claim Response Process Note</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Claim Response Process Note</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseClaimResponseProcessNote(ClaimResponseProcessNote object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Claim Response Review Outcome</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Claim Response Review Outcome</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseClaimResponseReviewOutcome(ClaimResponseReviewOutcome object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Claim Response Sub Detail</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Claim Response Sub Detail</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseClaimResponseSubDetail(ClaimResponseSubDetail object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Claim Response Sub Detail1</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Claim Response Sub Detail1</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseClaimResponseSubDetail1(ClaimResponseSubDetail1 object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Claim Response Total</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Claim Response Total</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseClaimResponseTotal(ClaimResponseTotal object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Claim Sub Detail</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Claim Sub Detail</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseClaimSubDetail(ClaimSubDetail object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Claim Supporting Info</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Claim Supporting Info</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseClaimSupportingInfo(ClaimSupportingInfo object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Clinical Impression</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Clinical Impression</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseClinicalImpression(ClinicalImpression object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Clinical Impression Finding</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Clinical Impression Finding</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseClinicalImpressionFinding(ClinicalImpressionFinding object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Clinical Use Definition</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Clinical Use Definition</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseClinicalUseDefinition(ClinicalUseDefinition object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Clinical Use Definition Contraindication</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Clinical Use Definition Contraindication</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseClinicalUseDefinitionContraindication(ClinicalUseDefinitionContraindication object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Clinical Use Definition Indication</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Clinical Use Definition Indication</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseClinicalUseDefinitionIndication(ClinicalUseDefinitionIndication object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Clinical Use Definition Interactant</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Clinical Use Definition Interactant</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseClinicalUseDefinitionInteractant(ClinicalUseDefinitionInteractant object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Clinical Use Definition Interaction</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Clinical Use Definition Interaction</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseClinicalUseDefinitionInteraction(ClinicalUseDefinitionInteraction object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Clinical Use Definition Other Therapy</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Clinical Use Definition Other Therapy</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseClinicalUseDefinitionOtherTherapy(ClinicalUseDefinitionOtherTherapy object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Clinical Use Definition Type</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Clinical Use Definition Type</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseClinicalUseDefinitionType(ClinicalUseDefinitionType object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Clinical Use Definition Undesirable Effect</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Clinical Use Definition Undesirable Effect</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseClinicalUseDefinitionUndesirableEffect(ClinicalUseDefinitionUndesirableEffect object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Clinical Use Definition Warning</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Clinical Use Definition Warning</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseClinicalUseDefinitionWarning(ClinicalUseDefinitionWarning object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Code</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Code</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseCode(Code object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Codeable Concept</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Codeable Concept</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseCodeableConcept(CodeableConcept object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Codeable Reference</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Codeable Reference</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseCodeableReference(CodeableReference object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Code Search Support</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Code Search Support</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseCodeSearchSupport(CodeSearchSupport object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Code System</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Code System</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseCodeSystem(CodeSystem object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Code System Concept</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Code System Concept</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseCodeSystemConcept(CodeSystemConcept object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Code System Content Mode</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Code System Content Mode</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseCodeSystemContentMode(CodeSystemContentMode object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Code System Designation</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Code System Designation</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseCodeSystemDesignation(CodeSystemDesignation object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Code System Filter</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Code System Filter</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseCodeSystemFilter(CodeSystemFilter object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Code System Hierarchy Meaning</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Code System Hierarchy Meaning</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseCodeSystemHierarchyMeaning(CodeSystemHierarchyMeaning object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Code System Property</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Code System Property</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseCodeSystemProperty(CodeSystemProperty object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Code System Property1</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Code System Property1</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseCodeSystemProperty1(CodeSystemProperty1 object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Coding</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Coding</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseCoding(Coding object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Color Codes Or RGB</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Color Codes Or RGB</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseColorCodesOrRGB(ColorCodesOrRGB object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Common Languages</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Common Languages</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseCommonLanguages(CommonLanguages object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Communication</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Communication</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseCommunication(Communication object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Communication Payload</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Communication Payload</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseCommunicationPayload(CommunicationPayload object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Communication Request</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Communication Request</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseCommunicationRequest(CommunicationRequest object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Communication Request Payload</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Communication Request Payload</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseCommunicationRequestPayload(CommunicationRequestPayload object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Compartment Definition</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Compartment Definition</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseCompartmentDefinition(CompartmentDefinition object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Compartment Definition Resource</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Compartment Definition Resource</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseCompartmentDefinitionResource(CompartmentDefinitionResource object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Compartment Type</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Compartment Type</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseCompartmentType(CompartmentType object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Composition</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Composition</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseComposition(Composition object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Composition Attester</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Composition Attester</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseCompositionAttester(CompositionAttester object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Composition Event</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Composition Event</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseCompositionEvent(CompositionEvent object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Composition Section</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Composition Section</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseCompositionSection(CompositionSection object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Composition Status</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Composition Status</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseCompositionStatus(CompositionStatus object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Concept Map</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Concept Map</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseConceptMap(ConceptMap object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Concept Map Additional Attribute</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Concept Map Additional Attribute</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseConceptMapAdditionalAttribute(ConceptMapAdditionalAttribute object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Concept Map Attribute Type</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Concept Map Attribute Type</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseConceptMapAttributeType(ConceptMapAttributeType object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Concept Map Depends On</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Concept Map Depends On</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseConceptMapDependsOn(ConceptMapDependsOn object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Concept Map Element</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Concept Map Element</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseConceptMapElement(ConceptMapElement object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Concept Map Group</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Concept Map Group</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseConceptMapGroup(ConceptMapGroup object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Concept Map Group Unmapped Mode</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Concept Map Group Unmapped Mode</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseConceptMapGroupUnmappedMode(ConceptMapGroupUnmappedMode object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Concept Map Property</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Concept Map Property</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseConceptMapProperty(ConceptMapProperty object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Concept Map Property1</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Concept Map Property1</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseConceptMapProperty1(ConceptMapProperty1 object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Concept Map Property Type</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Concept Map Property Type</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseConceptMapPropertyType(ConceptMapPropertyType object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Concept Map Relationship</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Concept Map Relationship</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseConceptMapRelationship(ConceptMapRelationship object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Concept Map Target</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Concept Map Target</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseConceptMapTarget(ConceptMapTarget object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Concept Map Unmapped</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Concept Map Unmapped</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseConceptMapUnmapped(ConceptMapUnmapped object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Concrete FHIR Types</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Concrete FHIR Types</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseConcreteFHIRTypes(ConcreteFHIRTypes object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Condition</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Condition</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseCondition(Condition object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Conditional Delete Status</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Conditional Delete Status</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseConditionalDeleteStatus(ConditionalDeleteStatus object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Conditional Read Status</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Conditional Read Status</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseConditionalReadStatus(ConditionalReadStatus object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Condition Definition</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Condition Definition</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseConditionDefinition(ConditionDefinition object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Condition Definition Medication</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Condition Definition Medication</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseConditionDefinitionMedication(ConditionDefinitionMedication object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Condition Definition Observation</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Condition Definition Observation</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseConditionDefinitionObservation(ConditionDefinitionObservation object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Condition Definition Plan</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Condition Definition Plan</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseConditionDefinitionPlan(ConditionDefinitionPlan object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Condition Definition Precondition</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Condition Definition Precondition</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseConditionDefinitionPrecondition(ConditionDefinitionPrecondition object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Condition Definition Questionnaire</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Condition Definition Questionnaire</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseConditionDefinitionQuestionnaire(ConditionDefinitionQuestionnaire object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Condition Participant</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Condition Participant</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseConditionParticipant(ConditionParticipant object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Condition Precondition Type</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Condition Precondition Type</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseConditionPreconditionType(ConditionPreconditionType object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Condition Questionnaire Purpose</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Condition Questionnaire Purpose</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseConditionQuestionnairePurpose(ConditionQuestionnairePurpose object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Condition Stage</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Condition Stage</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseConditionStage(ConditionStage object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Conformance Expectation</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Conformance Expectation</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseConformanceExpectation(ConformanceExpectation object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Consent</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Consent</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseConsent(Consent object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Consent Actor</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Consent Actor</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseConsentActor(ConsentActor object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Consent Data</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Consent Data</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseConsentData(ConsentData object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Consent Data Meaning</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Consent Data Meaning</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseConsentDataMeaning(ConsentDataMeaning object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Consent Policy Basis</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Consent Policy Basis</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseConsentPolicyBasis(ConsentPolicyBasis object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Consent Provision</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Consent Provision</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseConsentProvision(ConsentProvision object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Consent Provision Type</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Consent Provision Type</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseConsentProvisionType(ConsentProvisionType object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Consent State</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Consent State</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseConsentState(ConsentState object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Consent Verification</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Consent Verification</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseConsentVerification(ConsentVerification object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Constraint Severity</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Constraint Severity</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseConstraintSeverity(ConstraintSeverity object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Contact Detail</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Contact Detail</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseContactDetail(ContactDetail object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Contact Point</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Contact Point</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseContactPoint(ContactPoint object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Contact Point System</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Contact Point System</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseContactPointSystem(ContactPointSystem object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Contact Point Use</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Contact Point Use</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseContactPointUse(ContactPointUse object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Contract</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Contract</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseContract(Contract object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Contract Action</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Contract Action</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseContractAction(ContractAction object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Contract Answer</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Contract Answer</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseContractAnswer(ContractAnswer object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Contract Asset</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Contract Asset</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseContractAsset(ContractAsset object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Contract Content Definition</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Contract Content Definition</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseContractContentDefinition(ContractContentDefinition object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Contract Context</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Contract Context</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseContractContext(ContractContext object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Contract Friendly</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Contract Friendly</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseContractFriendly(ContractFriendly object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Contract Legal</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Contract Legal</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseContractLegal(ContractLegal object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Contract Offer</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Contract Offer</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseContractOffer(ContractOffer object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Contract Party</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Contract Party</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseContractParty(ContractParty object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Contract Resource Publication Status Codes</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Contract Resource Publication Status Codes</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseContractResourcePublicationStatusCodes(ContractResourcePublicationStatusCodes object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Contract Resource Status Codes</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Contract Resource Status Codes</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseContractResourceStatusCodes(ContractResourceStatusCodes object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Contract Rule</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Contract Rule</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseContractRule(ContractRule object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Contract Security Label</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Contract Security Label</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseContractSecurityLabel(ContractSecurityLabel object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Contract Signer</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Contract Signer</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseContractSigner(ContractSigner object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Contract Subject</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Contract Subject</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseContractSubject(ContractSubject object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Contract Term</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Contract Term</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseContractTerm(ContractTerm object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Contract Valued Item</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Contract Valued Item</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseContractValuedItem(ContractValuedItem object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Contributor</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Contributor</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseContributor(Contributor object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Contributor Type</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Contributor Type</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseContributorType(ContributorType object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Count</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Count</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseCount(Count object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Coverage</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Coverage</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseCoverage(Coverage object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Coverage Class</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Coverage Class</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseCoverageClass(CoverageClass object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Coverage Cost To Beneficiary</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Coverage Cost To Beneficiary</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseCoverageCostToBeneficiary(CoverageCostToBeneficiary object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Coverage Eligibility Request</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Coverage Eligibility Request</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseCoverageEligibilityRequest(CoverageEligibilityRequest object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Coverage Eligibility Request Diagnosis</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Coverage Eligibility Request Diagnosis</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseCoverageEligibilityRequestDiagnosis(CoverageEligibilityRequestDiagnosis object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Coverage Eligibility Request Event</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Coverage Eligibility Request Event</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseCoverageEligibilityRequestEvent(CoverageEligibilityRequestEvent object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Coverage Eligibility Request Insurance</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Coverage Eligibility Request Insurance</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseCoverageEligibilityRequestInsurance(CoverageEligibilityRequestInsurance object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Coverage Eligibility Request Item</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Coverage Eligibility Request Item</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseCoverageEligibilityRequestItem(CoverageEligibilityRequestItem object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Coverage Eligibility Request Supporting Info</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Coverage Eligibility Request Supporting Info</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseCoverageEligibilityRequestSupportingInfo(CoverageEligibilityRequestSupportingInfo object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Coverage Eligibility Response</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Coverage Eligibility Response</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseCoverageEligibilityResponse(CoverageEligibilityResponse object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Coverage Eligibility Response Benefit</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Coverage Eligibility Response Benefit</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseCoverageEligibilityResponseBenefit(CoverageEligibilityResponseBenefit object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Coverage Eligibility Response Error</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Coverage Eligibility Response Error</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseCoverageEligibilityResponseError(CoverageEligibilityResponseError object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Coverage Eligibility Response Event</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Coverage Eligibility Response Event</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseCoverageEligibilityResponseEvent(CoverageEligibilityResponseEvent object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Coverage Eligibility Response Insurance</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Coverage Eligibility Response Insurance</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseCoverageEligibilityResponseInsurance(CoverageEligibilityResponseInsurance object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Coverage Eligibility Response Item</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Coverage Eligibility Response Item</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseCoverageEligibilityResponseItem(CoverageEligibilityResponseItem object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Coverage Exception</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Coverage Exception</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseCoverageException(CoverageException object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Coverage Payment By</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Coverage Payment By</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseCoveragePaymentBy(CoveragePaymentBy object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Criteria Not Exists Behavior</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Criteria Not Exists Behavior</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseCriteriaNotExistsBehavior(CriteriaNotExistsBehavior object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Data Requirement</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Data Requirement</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseDataRequirement(DataRequirement object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Data Requirement Code Filter</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Data Requirement Code Filter</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseDataRequirementCodeFilter(DataRequirementCodeFilter object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Data Requirement Date Filter</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Data Requirement Date Filter</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseDataRequirementDateFilter(DataRequirementDateFilter object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Data Requirement Sort</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Data Requirement Sort</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseDataRequirementSort(DataRequirementSort object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Data Requirement Value Filter</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Data Requirement Value Filter</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseDataRequirementValueFilter(DataRequirementValueFilter object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Data Type</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Data Type</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseDataType(DataType object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Date</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Date</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseDate(Date object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Date Time</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Date Time</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseDateTime(DateTime object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Decimal</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Decimal</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseDecimal(Decimal object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Definition Resource Types</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Definition Resource Types</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseDefinitionResourceTypes(DefinitionResourceTypes object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Detected Issue</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Detected Issue</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseDetectedIssue(DetectedIssue object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Detected Issue Evidence</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Detected Issue Evidence</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseDetectedIssueEvidence(DetectedIssueEvidence object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Detected Issue Mitigation</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Detected Issue Mitigation</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseDetectedIssueMitigation(DetectedIssueMitigation object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Detected Issue Severity</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Detected Issue Severity</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseDetectedIssueSeverity(DetectedIssueSeverity object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Detected Issue Status</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Detected Issue Status</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseDetectedIssueStatus(DetectedIssueStatus object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Device</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Device</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseDevice(Device object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Device Association</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Device Association</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseDeviceAssociation(DeviceAssociation object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Device Association Operation</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Device Association Operation</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseDeviceAssociationOperation(DeviceAssociationOperation object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Device Conforms To</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Device Conforms To</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseDeviceConformsTo(DeviceConformsTo object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Device Corrective Action Scope</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Device Corrective Action Scope</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseDeviceCorrectiveActionScope(DeviceCorrectiveActionScope object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Device Definition</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Device Definition</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseDeviceDefinition(DeviceDefinition object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Device Definition Charge Item</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Device Definition Charge Item</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseDeviceDefinitionChargeItem(DeviceDefinitionChargeItem object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Device Definition Classification</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Device Definition Classification</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseDeviceDefinitionClassification(DeviceDefinitionClassification object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Device Definition Conforms To</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Device Definition Conforms To</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseDeviceDefinitionConformsTo(DeviceDefinitionConformsTo object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Device Definition Corrective Action</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Device Definition Corrective Action</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseDeviceDefinitionCorrectiveAction(DeviceDefinitionCorrectiveAction object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Device Definition Device Name</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Device Definition Device Name</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseDeviceDefinitionDeviceName(DeviceDefinitionDeviceName object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Device Definition Distributor</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Device Definition Distributor</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseDeviceDefinitionDistributor(DeviceDefinitionDistributor object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Device Definition Guideline</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Device Definition Guideline</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseDeviceDefinitionGuideline(DeviceDefinitionGuideline object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Device Definition Has Part</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Device Definition Has Part</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseDeviceDefinitionHasPart(DeviceDefinitionHasPart object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Device Definition Link</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Device Definition Link</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseDeviceDefinitionLink(DeviceDefinitionLink object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Device Definition Market Distribution</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Device Definition Market Distribution</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseDeviceDefinitionMarketDistribution(DeviceDefinitionMarketDistribution object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Device Definition Material</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Device Definition Material</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseDeviceDefinitionMaterial(DeviceDefinitionMaterial object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Device Definition Packaging</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Device Definition Packaging</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseDeviceDefinitionPackaging(DeviceDefinitionPackaging object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Device Definition Property</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Device Definition Property</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseDeviceDefinitionProperty(DeviceDefinitionProperty object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Device Definition Regulatory Identifier</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Device Definition Regulatory Identifier</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseDeviceDefinitionRegulatoryIdentifier(DeviceDefinitionRegulatoryIdentifier object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Device Definition Regulatory Identifier Type</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Device Definition Regulatory Identifier Type</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseDeviceDefinitionRegulatoryIdentifierType(DeviceDefinitionRegulatoryIdentifierType object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Device Definition Udi Device Identifier</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Device Definition Udi Device Identifier</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseDeviceDefinitionUdiDeviceIdentifier(DeviceDefinitionUdiDeviceIdentifier object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Device Definition Version</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Device Definition Version</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseDeviceDefinitionVersion(DeviceDefinitionVersion object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Device Dispense</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Device Dispense</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseDeviceDispense(DeviceDispense object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Device Dispense Performer</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Device Dispense Performer</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseDeviceDispensePerformer(DeviceDispensePerformer object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Device Dispense Status Codes</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Device Dispense Status Codes</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseDeviceDispenseStatusCodes(DeviceDispenseStatusCodes object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Device Metric</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Device Metric</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseDeviceMetric(DeviceMetric object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Device Metric Calibration</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Device Metric Calibration</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseDeviceMetricCalibration(DeviceMetricCalibration object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Device Metric Calibration State</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Device Metric Calibration State</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseDeviceMetricCalibrationState(DeviceMetricCalibrationState object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Device Metric Calibration Type</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Device Metric Calibration Type</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseDeviceMetricCalibrationType(DeviceMetricCalibrationType object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Device Metric Category</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Device Metric Category</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseDeviceMetricCategory(DeviceMetricCategory object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Device Metric Operational Status</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Device Metric Operational Status</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseDeviceMetricOperationalStatus(DeviceMetricOperationalStatus object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Device Name</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Device Name</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseDeviceName(DeviceName object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Device Name Type</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Device Name Type</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseDeviceNameType(DeviceNameType object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Device Production Identifier In UDI</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Device Production Identifier In UDI</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseDeviceProductionIdentifierInUDI(DeviceProductionIdentifierInUDI object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Device Property</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Device Property</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseDeviceProperty(DeviceProperty object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Device Request</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Device Request</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseDeviceRequest(DeviceRequest object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Device Request Parameter</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Device Request Parameter</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseDeviceRequestParameter(DeviceRequestParameter object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Device Udi Carrier</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Device Udi Carrier</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseDeviceUdiCarrier(DeviceUdiCarrier object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Device Usage</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Device Usage</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseDeviceUsage(DeviceUsage object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Device Usage Adherence</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Device Usage Adherence</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseDeviceUsageAdherence(DeviceUsageAdherence object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Device Usage Status</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Device Usage Status</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseDeviceUsageStatus(DeviceUsageStatus object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Device Version</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Device Version</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseDeviceVersion(DeviceVersion object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Diagnostic Report</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Diagnostic Report</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseDiagnosticReport(DiagnosticReport object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Diagnostic Report Media</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Diagnostic Report Media</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseDiagnosticReportMedia(DiagnosticReportMedia object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Diagnostic Report Status</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Diagnostic Report Status</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseDiagnosticReportStatus(DiagnosticReportStatus object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Diagnostic Report Supporting Info</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Diagnostic Report Supporting Info</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseDiagnosticReportSupportingInfo(DiagnosticReportSupportingInfo object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Discriminator Type</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Discriminator Type</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseDiscriminatorType(DiscriminatorType object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Distance</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Distance</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseDistance(Distance object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Document Mode</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Document Mode</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseDocumentMode(DocumentMode object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Document Reference</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Document Reference</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseDocumentReference(DocumentReference object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Document Reference Attester</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Document Reference Attester</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseDocumentReferenceAttester(DocumentReferenceAttester object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Document Reference Content</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Document Reference Content</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseDocumentReferenceContent(DocumentReferenceContent object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Document Reference Profile</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Document Reference Profile</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseDocumentReferenceProfile(DocumentReferenceProfile object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Document Reference Relates To</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Document Reference Relates To</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseDocumentReferenceRelatesTo(DocumentReferenceRelatesTo object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Document Reference Status</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Document Reference Status</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseDocumentReferenceStatus(DocumentReferenceStatus object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Document Root</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Document Root</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseDocumentRoot(DocumentRoot object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Domain Resource</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Domain Resource</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseDomainResource(DomainResource object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Dosage</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Dosage</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseDosage(Dosage object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Dosage Dose And Rate</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Dosage Dose And Rate</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseDosageDoseAndRate(DosageDoseAndRate object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Duration</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Duration</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseDuration(Duration object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Element</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Element</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseElement(Element object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Element Definition</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Element Definition</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseElementDefinition(ElementDefinition object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Element Definition Additional</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Element Definition Additional</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseElementDefinitionAdditional(ElementDefinitionAdditional object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Element Definition Base</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Element Definition Base</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseElementDefinitionBase(ElementDefinitionBase object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Element Definition Binding</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Element Definition Binding</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseElementDefinitionBinding(ElementDefinitionBinding object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Element Definition Constraint</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Element Definition Constraint</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseElementDefinitionConstraint(ElementDefinitionConstraint object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Element Definition Discriminator</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Element Definition Discriminator</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseElementDefinitionDiscriminator(ElementDefinitionDiscriminator object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Element Definition Example</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Element Definition Example</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseElementDefinitionExample(ElementDefinitionExample object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Element Definition Mapping</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Element Definition Mapping</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseElementDefinitionMapping(ElementDefinitionMapping object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Element Definition Slicing</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Element Definition Slicing</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseElementDefinitionSlicing(ElementDefinitionSlicing object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Element Definition Type</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Element Definition Type</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseElementDefinitionType(ElementDefinitionType object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Eligibility Outcome</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Eligibility Outcome</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseEligibilityOutcome(EligibilityOutcome object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Eligibility Request Purpose</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Eligibility Request Purpose</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseEligibilityRequestPurpose(EligibilityRequestPurpose object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Eligibility Response Purpose</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Eligibility Response Purpose</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseEligibilityResponsePurpose(EligibilityResponsePurpose object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Enable When Behavior</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Enable When Behavior</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseEnableWhenBehavior(EnableWhenBehavior object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Encounter</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Encounter</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseEncounter(Encounter object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Encounter Admission</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Encounter Admission</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseEncounterAdmission(EncounterAdmission object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Encounter Diagnosis</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Encounter Diagnosis</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseEncounterDiagnosis(EncounterDiagnosis object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Encounter History</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Encounter History</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseEncounterHistory(EncounterHistory object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Encounter History Location</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Encounter History Location</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseEncounterHistoryLocation(EncounterHistoryLocation object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Encounter Location</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Encounter Location</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseEncounterLocation(EncounterLocation object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Encounter Location Status</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Encounter Location Status</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseEncounterLocationStatus(EncounterLocationStatus object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Encounter Participant</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Encounter Participant</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseEncounterParticipant(EncounterParticipant object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Encounter Reason</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Encounter Reason</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseEncounterReason(EncounterReason object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Encounter Status</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Encounter Status</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseEncounterStatus(EncounterStatus object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Endpoint</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Endpoint</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseEndpoint(Endpoint object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Endpoint Payload</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Endpoint Payload</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseEndpointPayload(EndpointPayload object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Endpoint Status</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Endpoint Status</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseEndpointStatus(EndpointStatus object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Enrollment Outcome</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Enrollment Outcome</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseEnrollmentOutcome(EnrollmentOutcome object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Enrollment Request</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Enrollment Request</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseEnrollmentRequest(EnrollmentRequest object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Enrollment Response</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Enrollment Response</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseEnrollmentResponse(EnrollmentResponse object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Episode Of Care</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Episode Of Care</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseEpisodeOfCare(EpisodeOfCare object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Episode Of Care Diagnosis</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Episode Of Care Diagnosis</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseEpisodeOfCareDiagnosis(EpisodeOfCareDiagnosis object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Episode Of Care Reason</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Episode Of Care Reason</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseEpisodeOfCareReason(EpisodeOfCareReason object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Episode Of Care Status</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Episode Of Care Status</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseEpisodeOfCareStatus(EpisodeOfCareStatus object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Episode Of Care Status History</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Episode Of Care Status History</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseEpisodeOfCareStatusHistory(EpisodeOfCareStatusHistory object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Event Capability Mode</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Event Capability Mode</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseEventCapabilityMode(EventCapabilityMode object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Event Definition</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Event Definition</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseEventDefinition(EventDefinition object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Event Resource Types</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Event Resource Types</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseEventResourceTypes(EventResourceTypes object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Event Status</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Event Status</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseEventStatus(EventStatus object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Event Timing</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Event Timing</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseEventTiming(EventTiming object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Evidence</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Evidence</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseEvidence(Evidence object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Evidence Attribute Estimate</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Evidence Attribute Estimate</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseEvidenceAttributeEstimate(EvidenceAttributeEstimate object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Evidence Certainty</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Evidence Certainty</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseEvidenceCertainty(EvidenceCertainty object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Evidence Model Characteristic</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Evidence Model Characteristic</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseEvidenceModelCharacteristic(EvidenceModelCharacteristic object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Evidence Report</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Evidence Report</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseEvidenceReport(EvidenceReport object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Evidence Report Characteristic</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Evidence Report Characteristic</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseEvidenceReportCharacteristic(EvidenceReportCharacteristic object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Evidence Report Relates To</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Evidence Report Relates To</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseEvidenceReportRelatesTo(EvidenceReportRelatesTo object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Evidence Report Section</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Evidence Report Section</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseEvidenceReportSection(EvidenceReportSection object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Evidence Report Subject</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Evidence Report Subject</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseEvidenceReportSubject(EvidenceReportSubject object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Evidence Report Target</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Evidence Report Target</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseEvidenceReportTarget(EvidenceReportTarget object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Evidence Sample Size</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Evidence Sample Size</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseEvidenceSampleSize(EvidenceSampleSize object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Evidence Statistic</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Evidence Statistic</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseEvidenceStatistic(EvidenceStatistic object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Evidence Variable</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Evidence Variable</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseEvidenceVariable(EvidenceVariable object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Evidence Variable1</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Evidence Variable1</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseEvidenceVariable1(EvidenceVariable1 object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Evidence Variable Category</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Evidence Variable Category</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseEvidenceVariableCategory(EvidenceVariableCategory object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Evidence Variable Characteristic</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Evidence Variable Characteristic</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseEvidenceVariableCharacteristic(EvidenceVariableCharacteristic object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Evidence Variable Definition</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Evidence Variable Definition</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseEvidenceVariableDefinition(EvidenceVariableDefinition object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Evidence Variable Definition By Combination</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Evidence Variable Definition By Combination</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseEvidenceVariableDefinitionByCombination(EvidenceVariableDefinitionByCombination object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Evidence Variable Definition By Type And Value</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Evidence Variable Definition By Type And Value</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseEvidenceVariableDefinitionByTypeAndValue(EvidenceVariableDefinitionByTypeAndValue object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Evidence Variable Handling</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Evidence Variable Handling</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseEvidenceVariableHandling(EvidenceVariableHandling object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Evidence Variable Time From Event</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Evidence Variable Time From Event</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseEvidenceVariableTimeFromEvent(EvidenceVariableTimeFromEvent object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Example Scenario</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Example Scenario</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseExampleScenario(ExampleScenario object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Example Scenario Actor</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Example Scenario Actor</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseExampleScenarioActor(ExampleScenarioActor object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Example Scenario Actor Type</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Example Scenario Actor Type</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseExampleScenarioActorType(ExampleScenarioActorType object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Example Scenario Alternative</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Example Scenario Alternative</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseExampleScenarioAlternative(ExampleScenarioAlternative object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Example Scenario Contained Instance</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Example Scenario Contained Instance</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseExampleScenarioContainedInstance(ExampleScenarioContainedInstance object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Example Scenario Instance</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Example Scenario Instance</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseExampleScenarioInstance(ExampleScenarioInstance object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Example Scenario Operation</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Example Scenario Operation</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseExampleScenarioOperation(ExampleScenarioOperation object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Example Scenario Process</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Example Scenario Process</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseExampleScenarioProcess(ExampleScenarioProcess object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Example Scenario Step</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Example Scenario Step</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseExampleScenarioStep(ExampleScenarioStep object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Example Scenario Version</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Example Scenario Version</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseExampleScenarioVersion(ExampleScenarioVersion object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Explanation Of Benefit</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Explanation Of Benefit</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseExplanationOfBenefit(ExplanationOfBenefit object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Explanation Of Benefit Accident</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Explanation Of Benefit Accident</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseExplanationOfBenefitAccident(ExplanationOfBenefitAccident object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Explanation Of Benefit Add Item</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Explanation Of Benefit Add Item</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseExplanationOfBenefitAddItem(ExplanationOfBenefitAddItem object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Explanation Of Benefit Adjudication</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Explanation Of Benefit Adjudication</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseExplanationOfBenefitAdjudication(ExplanationOfBenefitAdjudication object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Explanation Of Benefit Benefit Balance</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Explanation Of Benefit Benefit Balance</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseExplanationOfBenefitBenefitBalance(ExplanationOfBenefitBenefitBalance object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Explanation Of Benefit Body Site</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Explanation Of Benefit Body Site</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseExplanationOfBenefitBodySite(ExplanationOfBenefitBodySite object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Explanation Of Benefit Body Site1</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Explanation Of Benefit Body Site1</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseExplanationOfBenefitBodySite1(ExplanationOfBenefitBodySite1 object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Explanation Of Benefit Care Team</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Explanation Of Benefit Care Team</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseExplanationOfBenefitCareTeam(ExplanationOfBenefitCareTeam object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Explanation Of Benefit Detail</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Explanation Of Benefit Detail</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseExplanationOfBenefitDetail(ExplanationOfBenefitDetail object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Explanation Of Benefit Detail1</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Explanation Of Benefit Detail1</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseExplanationOfBenefitDetail1(ExplanationOfBenefitDetail1 object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Explanation Of Benefit Diagnosis</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Explanation Of Benefit Diagnosis</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseExplanationOfBenefitDiagnosis(ExplanationOfBenefitDiagnosis object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Explanation Of Benefit Event</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Explanation Of Benefit Event</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseExplanationOfBenefitEvent(ExplanationOfBenefitEvent object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Explanation Of Benefit Financial</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Explanation Of Benefit Financial</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseExplanationOfBenefitFinancial(ExplanationOfBenefitFinancial object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Explanation Of Benefit Insurance</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Explanation Of Benefit Insurance</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseExplanationOfBenefitInsurance(ExplanationOfBenefitInsurance object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Explanation Of Benefit Item</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Explanation Of Benefit Item</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseExplanationOfBenefitItem(ExplanationOfBenefitItem object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Explanation Of Benefit Payee</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Explanation Of Benefit Payee</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseExplanationOfBenefitPayee(ExplanationOfBenefitPayee object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Explanation Of Benefit Payment</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Explanation Of Benefit Payment</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseExplanationOfBenefitPayment(ExplanationOfBenefitPayment object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Explanation Of Benefit Procedure</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Explanation Of Benefit Procedure</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseExplanationOfBenefitProcedure(ExplanationOfBenefitProcedure object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Explanation Of Benefit Process Note</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Explanation Of Benefit Process Note</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseExplanationOfBenefitProcessNote(ExplanationOfBenefitProcessNote object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Explanation Of Benefit Related</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Explanation Of Benefit Related</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseExplanationOfBenefitRelated(ExplanationOfBenefitRelated object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Explanation Of Benefit Review Outcome</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Explanation Of Benefit Review Outcome</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseExplanationOfBenefitReviewOutcome(ExplanationOfBenefitReviewOutcome object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Explanation Of Benefit Status</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Explanation Of Benefit Status</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseExplanationOfBenefitStatus(ExplanationOfBenefitStatus object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Explanation Of Benefit Sub Detail</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Explanation Of Benefit Sub Detail</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseExplanationOfBenefitSubDetail(ExplanationOfBenefitSubDetail object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Explanation Of Benefit Sub Detail1</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Explanation Of Benefit Sub Detail1</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseExplanationOfBenefitSubDetail1(ExplanationOfBenefitSubDetail1 object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Explanation Of Benefit Supporting Info</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Explanation Of Benefit Supporting Info</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseExplanationOfBenefitSupportingInfo(ExplanationOfBenefitSupportingInfo object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Explanation Of Benefit Total</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Explanation Of Benefit Total</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseExplanationOfBenefitTotal(ExplanationOfBenefitTotal object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Expression</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Expression</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseExpression(Expression object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Extended Contact Detail</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Extended Contact Detail</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseExtendedContactDetail(ExtendedContactDetail object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Extension</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Extension</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseExtension(Extension object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Extension Context Type</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Extension Context Type</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseExtensionContextType(ExtensionContextType object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Family History Status</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Family History Status</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseFamilyHistoryStatus(FamilyHistoryStatus object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Family Member History</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Family Member History</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseFamilyMemberHistory(FamilyMemberHistory object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Family Member History Condition</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Family Member History Condition</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseFamilyMemberHistoryCondition(FamilyMemberHistoryCondition object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Family Member History Participant</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Family Member History Participant</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseFamilyMemberHistoryParticipant(FamilyMemberHistoryParticipant object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Family Member History Procedure</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Family Member History Procedure</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseFamilyMemberHistoryProcedure(FamilyMemberHistoryProcedure object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>FHIR Device Status</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>FHIR Device Status</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseFHIRDeviceStatus(FHIRDeviceStatus object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>FHIR Path Types</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>FHIR Path Types</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseFHIRPathTypes(FHIRPathTypes object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>FHIR Substance Status</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>FHIR Substance Status</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseFHIRSubstanceStatus(FHIRSubstanceStatus object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>FHIR Types</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>FHIR Types</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseFHIRTypes(FHIRTypes object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>FHIR Version</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>FHIR Version</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseFHIRVersion(FHIRVersion object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Filter Operator</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Filter Operator</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseFilterOperator(FilterOperator object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Financial Resource Status Codes</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Financial Resource Status Codes</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseFinancialResourceStatusCodes(FinancialResourceStatusCodes object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Flag</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Flag</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseFlag(Flag object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Flag Status</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Flag Status</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseFlagStatus(FlagStatus object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Formulary Item</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Formulary Item</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseFormularyItem(FormularyItem object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Formulary Item Status Codes</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Formulary Item Status Codes</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseFormularyItemStatusCodes(FormularyItemStatusCodes object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Genomic Study</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Genomic Study</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseGenomicStudy(GenomicStudy object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Genomic Study Analysis</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Genomic Study Analysis</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseGenomicStudyAnalysis(GenomicStudyAnalysis object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Genomic Study Device</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Genomic Study Device</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseGenomicStudyDevice(GenomicStudyDevice object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Genomic Study Input</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Genomic Study Input</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseGenomicStudyInput(GenomicStudyInput object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Genomic Study Output</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Genomic Study Output</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseGenomicStudyOutput(GenomicStudyOutput object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Genomic Study Performer</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Genomic Study Performer</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseGenomicStudyPerformer(GenomicStudyPerformer object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Genomic Study Status</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Genomic Study Status</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseGenomicStudyStatus(GenomicStudyStatus object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Goal</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Goal</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseGoal(Goal object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Goal Lifecycle Status</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Goal Lifecycle Status</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseGoalLifecycleStatus(GoalLifecycleStatus object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Goal Target</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Goal Target</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseGoalTarget(GoalTarget object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Graph Compartment Rule</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Graph Compartment Rule</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseGraphCompartmentRule(GraphCompartmentRule object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Graph Compartment Use</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Graph Compartment Use</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseGraphCompartmentUse(GraphCompartmentUse object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Graph Definition</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Graph Definition</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseGraphDefinition(GraphDefinition object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Graph Definition Compartment</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Graph Definition Compartment</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseGraphDefinitionCompartment(GraphDefinitionCompartment object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Graph Definition Link</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Graph Definition Link</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseGraphDefinitionLink(GraphDefinitionLink object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Graph Definition Node</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Graph Definition Node</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseGraphDefinitionNode(GraphDefinitionNode object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Group</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Group</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseGroup(Group object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Group Characteristic</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Group Characteristic</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseGroupCharacteristic(GroupCharacteristic object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Group Member</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Group Member</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseGroupMember(GroupMember object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Group Membership Basis</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Group Membership Basis</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseGroupMembershipBasis(GroupMembershipBasis object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Group Type</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Group Type</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseGroupType(GroupType object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Guidance Response</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Guidance Response</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseGuidanceResponse(GuidanceResponse object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Guidance Response Status</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Guidance Response Status</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseGuidanceResponseStatus(GuidanceResponseStatus object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Guide Page Generation</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Guide Page Generation</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseGuidePageGeneration(GuidePageGeneration object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Healthcare Service</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Healthcare Service</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseHealthcareService(HealthcareService object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Healthcare Service Eligibility</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Healthcare Service Eligibility</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseHealthcareServiceEligibility(HealthcareServiceEligibility object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>HTTP Verb</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>HTTP Verb</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseHTTPVerb(HTTPVerb object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Human Name</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Human Name</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseHumanName(HumanName object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Id</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Id</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseId(Id object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Identifier</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Identifier</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseIdentifier(Identifier object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Identifier Use</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Identifier Use</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseIdentifierUse(IdentifierUse object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Identity Assurance Level</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Identity Assurance Level</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseIdentityAssuranceLevel(IdentityAssuranceLevel object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Imaging Selection</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Imaging Selection</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseImagingSelection(ImagingSelection object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Imaging Selection DGraphic Type</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Imaging Selection DGraphic Type</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseImagingSelectionDGraphicType(ImagingSelectionDGraphicType object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Imaging Selection Image Region2 D</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Imaging Selection Image Region2 D</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseImagingSelectionImageRegion2D(ImagingSelectionImageRegion2D object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Imaging Selection Image Region3 D</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Imaging Selection Image Region3 D</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseImagingSelectionImageRegion3D(ImagingSelectionImageRegion3D object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Imaging Selection Instance</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Imaging Selection Instance</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseImagingSelectionInstance(ImagingSelectionInstance object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Imaging Selection Performer</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Imaging Selection Performer</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseImagingSelectionPerformer(ImagingSelectionPerformer object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Imaging Selection Status</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Imaging Selection Status</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseImagingSelectionStatus(ImagingSelectionStatus object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Imaging Study</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Imaging Study</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseImagingStudy(ImagingStudy object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Imaging Study Instance</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Imaging Study Instance</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseImagingStudyInstance(ImagingStudyInstance object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Imaging Study Performer</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Imaging Study Performer</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseImagingStudyPerformer(ImagingStudyPerformer object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Imaging Study Series</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Imaging Study Series</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseImagingStudySeries(ImagingStudySeries object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Imaging Study Status</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Imaging Study Status</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseImagingStudyStatus(ImagingStudyStatus object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Immunization</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Immunization</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseImmunization(Immunization object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Immunization Evaluation</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Immunization Evaluation</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseImmunizationEvaluation(ImmunizationEvaluation object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Immunization Evaluation Status Codes</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Immunization Evaluation Status Codes</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseImmunizationEvaluationStatusCodes(ImmunizationEvaluationStatusCodes object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Immunization Performer</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Immunization Performer</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseImmunizationPerformer(ImmunizationPerformer object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Immunization Program Eligibility</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Immunization Program Eligibility</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseImmunizationProgramEligibility(ImmunizationProgramEligibility object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Immunization Protocol Applied</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Immunization Protocol Applied</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseImmunizationProtocolApplied(ImmunizationProtocolApplied object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Immunization Reaction</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Immunization Reaction</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseImmunizationReaction(ImmunizationReaction object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Immunization Recommendation</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Immunization Recommendation</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseImmunizationRecommendation(ImmunizationRecommendation object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Immunization Recommendation Date Criterion</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Immunization Recommendation Date Criterion</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseImmunizationRecommendationDateCriterion(ImmunizationRecommendationDateCriterion object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Immunization Recommendation Recommendation</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Immunization Recommendation Recommendation</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseImmunizationRecommendationRecommendation(ImmunizationRecommendationRecommendation object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Immunization Status Codes</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Immunization Status Codes</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseImmunizationStatusCodes(ImmunizationStatusCodes object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Implementation Guide</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Implementation Guide</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseImplementationGuide(ImplementationGuide object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Implementation Guide Definition</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Implementation Guide Definition</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseImplementationGuideDefinition(ImplementationGuideDefinition object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Implementation Guide Depends On</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Implementation Guide Depends On</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseImplementationGuideDependsOn(ImplementationGuideDependsOn object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Implementation Guide Global</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Implementation Guide Global</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseImplementationGuideGlobal(ImplementationGuideGlobal object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Implementation Guide Grouping</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Implementation Guide Grouping</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseImplementationGuideGrouping(ImplementationGuideGrouping object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Implementation Guide Manifest</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Implementation Guide Manifest</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseImplementationGuideManifest(ImplementationGuideManifest object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Implementation Guide Page</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Implementation Guide Page</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseImplementationGuidePage(ImplementationGuidePage object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Implementation Guide Page1</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Implementation Guide Page1</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseImplementationGuidePage1(ImplementationGuidePage1 object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Implementation Guide Parameter</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Implementation Guide Parameter</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseImplementationGuideParameter(ImplementationGuideParameter object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Implementation Guide Resource</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Implementation Guide Resource</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseImplementationGuideResource(ImplementationGuideResource object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Implementation Guide Resource1</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Implementation Guide Resource1</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseImplementationGuideResource1(ImplementationGuideResource1 object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Implementation Guide Template</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Implementation Guide Template</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseImplementationGuideTemplate(ImplementationGuideTemplate object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Ingredient</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Ingredient</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseIngredient(Ingredient object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Ingredient Manufacturer</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Ingredient Manufacturer</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseIngredientManufacturer(IngredientManufacturer object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Ingredient Manufacturer Role</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Ingredient Manufacturer Role</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseIngredientManufacturerRole(IngredientManufacturerRole object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Ingredient Reference Strength</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Ingredient Reference Strength</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseIngredientReferenceStrength(IngredientReferenceStrength object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Ingredient Strength</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Ingredient Strength</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseIngredientStrength(IngredientStrength object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Ingredient Substance</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Ingredient Substance</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseIngredientSubstance(IngredientSubstance object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Instant</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Instant</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseInstant(Instant object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Insurance Plan</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Insurance Plan</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseInsurancePlan(InsurancePlan object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Insurance Plan Benefit</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Insurance Plan Benefit</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseInsurancePlanBenefit(InsurancePlanBenefit object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Insurance Plan Benefit1</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Insurance Plan Benefit1</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseInsurancePlanBenefit1(InsurancePlanBenefit1 object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Insurance Plan Cost</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Insurance Plan Cost</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseInsurancePlanCost(InsurancePlanCost object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Insurance Plan Coverage</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Insurance Plan Coverage</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseInsurancePlanCoverage(InsurancePlanCoverage object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Insurance Plan General Cost</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Insurance Plan General Cost</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseInsurancePlanGeneralCost(InsurancePlanGeneralCost object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Insurance Plan Limit</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Insurance Plan Limit</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseInsurancePlanLimit(InsurancePlanLimit object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Insurance Plan Plan</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Insurance Plan Plan</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseInsurancePlanPlan(InsurancePlanPlan object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Insurance Plan Specific Cost</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Insurance Plan Specific Cost</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseInsurancePlanSpecificCost(InsurancePlanSpecificCost object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Integer</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Integer</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseInteger(org.hl7.emf.fhir.Integer object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Integer64</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Integer64</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseInteger64(Integer64 object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Interaction Trigger</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Interaction Trigger</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseInteractionTrigger(InteractionTrigger object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Inventory Count Type</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Inventory Count Type</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseInventoryCountType(InventoryCountType object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Inventory Item</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Inventory Item</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseInventoryItem(InventoryItem object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Inventory Item Association</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Inventory Item Association</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseInventoryItemAssociation(InventoryItemAssociation object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Inventory Item Characteristic</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Inventory Item Characteristic</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseInventoryItemCharacteristic(InventoryItemCharacteristic object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Inventory Item Description</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Inventory Item Description</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseInventoryItemDescription(InventoryItemDescription object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Inventory Item Instance</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Inventory Item Instance</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseInventoryItemInstance(InventoryItemInstance object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Inventory Item Name</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Inventory Item Name</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseInventoryItemName(InventoryItemName object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Inventory Item Responsible Organization</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Inventory Item Responsible Organization</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseInventoryItemResponsibleOrganization(InventoryItemResponsibleOrganization object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Inventory Item Status Codes</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Inventory Item Status Codes</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseInventoryItemStatusCodes(InventoryItemStatusCodes object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Inventory Report</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Inventory Report</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseInventoryReport(InventoryReport object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Inventory Report Inventory Listing</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Inventory Report Inventory Listing</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseInventoryReportInventoryListing(InventoryReportInventoryListing object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Inventory Report Item</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Inventory Report Item</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseInventoryReportItem(InventoryReportItem object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Inventory Report Status</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Inventory Report Status</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseInventoryReportStatus(InventoryReportStatus object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Invoice</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Invoice</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseInvoice(Invoice object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Invoice Line Item</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Invoice Line Item</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseInvoiceLineItem(InvoiceLineItem object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Invoice Participant</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Invoice Participant</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseInvoiceParticipant(InvoiceParticipant object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Invoice Status</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Invoice Status</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseInvoiceStatus(InvoiceStatus object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Issue Severity</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Issue Severity</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseIssueSeverity(IssueSeverity object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Issue Type</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Issue Type</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseIssueType(IssueType object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Jurisdiction Value Set</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Jurisdiction Value Set</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseJurisdictionValueSet(JurisdictionValueSet object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Kind</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Kind</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseKind(Kind object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Library</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Library</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseLibrary(Library object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Linkage</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Linkage</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseLinkage(Linkage object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Linkage Item</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Linkage Item</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseLinkageItem(LinkageItem object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Linkage Type</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Linkage Type</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseLinkageType(LinkageType object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Link Relation Types</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Link Relation Types</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseLinkRelationTypes(LinkRelationTypes object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Link Type</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Link Type</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseLinkType(LinkType object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>List</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>List</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseList(List object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>List Entry</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>List Entry</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseListEntry(ListEntry object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>List Mode</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>List Mode</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseListMode(ListMode object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>List Status</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>List Status</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseListStatus(ListStatus object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Location</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Location</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseLocation(Location object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Location Mode</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Location Mode</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseLocationMode(LocationMode object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Location Position</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Location Position</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseLocationPosition(LocationPosition object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Location Status</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Location Status</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseLocationStatus(LocationStatus object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Manufactured Item Definition</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Manufactured Item Definition</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseManufacturedItemDefinition(ManufacturedItemDefinition object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Manufactured Item Definition Component</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Manufactured Item Definition Component</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseManufacturedItemDefinitionComponent(ManufacturedItemDefinitionComponent object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Manufactured Item Definition Constituent</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Manufactured Item Definition Constituent</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseManufacturedItemDefinitionConstituent(ManufacturedItemDefinitionConstituent object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Manufactured Item Definition Property</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Manufactured Item Definition Property</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseManufacturedItemDefinitionProperty(ManufacturedItemDefinitionProperty object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Markdown</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Markdown</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseMarkdown(Markdown object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Marketing Status</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Marketing Status</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseMarketingStatus(MarketingStatus object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Measure</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Measure</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseMeasure(Measure object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Measure Component</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Measure Component</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseMeasureComponent(MeasureComponent object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Measure Group</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Measure Group</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseMeasureGroup(MeasureGroup object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Measure Population</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Measure Population</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseMeasurePopulation(MeasurePopulation object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Measure Report</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Measure Report</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseMeasureReport(MeasureReport object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Measure Report Component</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Measure Report Component</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseMeasureReportComponent(MeasureReportComponent object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Measure Report Group</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Measure Report Group</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseMeasureReportGroup(MeasureReportGroup object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Measure Report Population</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Measure Report Population</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseMeasureReportPopulation(MeasureReportPopulation object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Measure Report Population1</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Measure Report Population1</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseMeasureReportPopulation1(MeasureReportPopulation1 object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Measure Report Status</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Measure Report Status</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseMeasureReportStatus(MeasureReportStatus object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Measure Report Stratifier</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Measure Report Stratifier</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseMeasureReportStratifier(MeasureReportStratifier object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Measure Report Stratum</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Measure Report Stratum</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseMeasureReportStratum(MeasureReportStratum object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Measure Report Type</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Measure Report Type</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseMeasureReportType(MeasureReportType object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Measure Stratifier</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Measure Stratifier</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseMeasureStratifier(MeasureStratifier object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Measure Supplemental Data</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Measure Supplemental Data</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseMeasureSupplementalData(MeasureSupplementalData object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Measure Term</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Measure Term</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseMeasureTerm(MeasureTerm object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Medication</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Medication</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseMedication(Medication object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Medication Administration</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Medication Administration</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseMedicationAdministration(MedicationAdministration object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Medication Administration Dosage</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Medication Administration Dosage</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseMedicationAdministrationDosage(MedicationAdministrationDosage object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Medication Administration Performer</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Medication Administration Performer</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseMedicationAdministrationPerformer(MedicationAdministrationPerformer object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Medication Administration Status Codes</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Medication Administration Status Codes</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseMedicationAdministrationStatusCodes(MedicationAdministrationStatusCodes object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Medication Batch</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Medication Batch</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseMedicationBatch(MedicationBatch object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Medication Dispense</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Medication Dispense</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseMedicationDispense(MedicationDispense object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Medication Dispense Performer</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Medication Dispense Performer</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseMedicationDispensePerformer(MedicationDispensePerformer object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Medication Dispense Status Codes</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Medication Dispense Status Codes</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseMedicationDispenseStatusCodes(MedicationDispenseStatusCodes object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Medication Dispense Substitution</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Medication Dispense Substitution</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseMedicationDispenseSubstitution(MedicationDispenseSubstitution object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Medication Ingredient</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Medication Ingredient</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseMedicationIngredient(MedicationIngredient object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Medication Knowledge</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Medication Knowledge</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseMedicationKnowledge(MedicationKnowledge object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Medication Knowledge Cost</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Medication Knowledge Cost</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseMedicationKnowledgeCost(MedicationKnowledgeCost object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Medication Knowledge Definitional</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Medication Knowledge Definitional</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseMedicationKnowledgeDefinitional(MedicationKnowledgeDefinitional object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Medication Knowledge Dosage</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Medication Knowledge Dosage</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseMedicationKnowledgeDosage(MedicationKnowledgeDosage object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Medication Knowledge Dosing Guideline</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Medication Knowledge Dosing Guideline</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseMedicationKnowledgeDosingGuideline(MedicationKnowledgeDosingGuideline object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Medication Knowledge Drug Characteristic</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Medication Knowledge Drug Characteristic</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseMedicationKnowledgeDrugCharacteristic(MedicationKnowledgeDrugCharacteristic object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Medication Knowledge Environmental Setting</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Medication Knowledge Environmental Setting</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseMedicationKnowledgeEnvironmentalSetting(MedicationKnowledgeEnvironmentalSetting object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Medication Knowledge Indication Guideline</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Medication Knowledge Indication Guideline</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseMedicationKnowledgeIndicationGuideline(MedicationKnowledgeIndicationGuideline object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Medication Knowledge Ingredient</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Medication Knowledge Ingredient</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseMedicationKnowledgeIngredient(MedicationKnowledgeIngredient object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Medication Knowledge Max Dispense</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Medication Knowledge Max Dispense</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseMedicationKnowledgeMaxDispense(MedicationKnowledgeMaxDispense object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Medication Knowledge Medicine Classification</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Medication Knowledge Medicine Classification</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseMedicationKnowledgeMedicineClassification(MedicationKnowledgeMedicineClassification object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Medication Knowledge Monitoring Program</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Medication Knowledge Monitoring Program</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseMedicationKnowledgeMonitoringProgram(MedicationKnowledgeMonitoringProgram object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Medication Knowledge Monograph</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Medication Knowledge Monograph</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseMedicationKnowledgeMonograph(MedicationKnowledgeMonograph object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Medication Knowledge Packaging</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Medication Knowledge Packaging</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseMedicationKnowledgePackaging(MedicationKnowledgePackaging object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Medication Knowledge Patient Characteristic</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Medication Knowledge Patient Characteristic</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseMedicationKnowledgePatientCharacteristic(MedicationKnowledgePatientCharacteristic object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Medication Knowledge Regulatory</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Medication Knowledge Regulatory</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseMedicationKnowledgeRegulatory(MedicationKnowledgeRegulatory object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Medication Knowledge Related Medication Knowledge</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Medication Knowledge Related Medication Knowledge</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseMedicationKnowledgeRelatedMedicationKnowledge(MedicationKnowledgeRelatedMedicationKnowledge object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Medication Knowledge Status Codes</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Medication Knowledge Status Codes</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseMedicationKnowledgeStatusCodes(MedicationKnowledgeStatusCodes object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Medication Knowledge Storage Guideline</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Medication Knowledge Storage Guideline</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseMedicationKnowledgeStorageGuideline(MedicationKnowledgeStorageGuideline object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Medication Knowledge Substitution</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Medication Knowledge Substitution</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseMedicationKnowledgeSubstitution(MedicationKnowledgeSubstitution object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Medication Request</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Medication Request</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseMedicationRequest(MedicationRequest object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Medication Request Dispense Request</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Medication Request Dispense Request</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseMedicationRequestDispenseRequest(MedicationRequestDispenseRequest object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Medication Request Initial Fill</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Medication Request Initial Fill</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseMedicationRequestInitialFill(MedicationRequestInitialFill object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Medication Request Intent</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Medication Request Intent</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseMedicationRequestIntent(MedicationRequestIntent object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Medicationrequest Status</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Medicationrequest Status</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseMedicationrequestStatus(MedicationrequestStatus object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Medication Request Substitution</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Medication Request Substitution</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseMedicationRequestSubstitution(MedicationRequestSubstitution object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Medication Statement</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Medication Statement</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseMedicationStatement(MedicationStatement object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Medication Statement Adherence</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Medication Statement Adherence</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseMedicationStatementAdherence(MedicationStatementAdherence object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Medication Statement Status Codes</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Medication Statement Status Codes</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseMedicationStatementStatusCodes(MedicationStatementStatusCodes object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Medication Status Codes</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Medication Status Codes</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseMedicationStatusCodes(MedicationStatusCodes object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Medicinal Product Definition</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Medicinal Product Definition</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseMedicinalProductDefinition(MedicinalProductDefinition object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Medicinal Product Definition Characteristic</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Medicinal Product Definition Characteristic</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseMedicinalProductDefinitionCharacteristic(MedicinalProductDefinitionCharacteristic object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Medicinal Product Definition Contact</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Medicinal Product Definition Contact</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseMedicinalProductDefinitionContact(MedicinalProductDefinitionContact object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Medicinal Product Definition Cross Reference</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Medicinal Product Definition Cross Reference</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseMedicinalProductDefinitionCrossReference(MedicinalProductDefinitionCrossReference object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Medicinal Product Definition Name</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Medicinal Product Definition Name</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseMedicinalProductDefinitionName(MedicinalProductDefinitionName object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Medicinal Product Definition Operation</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Medicinal Product Definition Operation</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseMedicinalProductDefinitionOperation(MedicinalProductDefinitionOperation object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Medicinal Product Definition Part</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Medicinal Product Definition Part</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseMedicinalProductDefinitionPart(MedicinalProductDefinitionPart object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Medicinal Product Definition Usage</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Medicinal Product Definition Usage</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseMedicinalProductDefinitionUsage(MedicinalProductDefinitionUsage object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Message Definition</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Message Definition</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseMessageDefinition(MessageDefinition object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Message Definition Allowed Response</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Message Definition Allowed Response</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseMessageDefinitionAllowedResponse(MessageDefinitionAllowedResponse object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Message Definition Focus</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Message Definition Focus</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseMessageDefinitionFocus(MessageDefinitionFocus object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Message Header</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Message Header</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseMessageHeader(MessageHeader object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Message Header Destination</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Message Header Destination</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseMessageHeaderDestination(MessageHeaderDestination object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Message Header Response</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Message Header Response</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseMessageHeaderResponse(MessageHeaderResponse object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Messageheader Response Request</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Messageheader Response Request</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseMessageheaderResponseRequest(MessageheaderResponseRequest object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Message Header Source</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Message Header Source</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseMessageHeaderSource(MessageHeaderSource object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Message Significance Category</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Message Significance Category</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseMessageSignificanceCategory(MessageSignificanceCategory object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Meta</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Meta</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseMeta(Meta object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Metadata Resource</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Metadata Resource</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseMetadataResource(MetadataResource object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Molecular Sequence</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Molecular Sequence</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseMolecularSequence(MolecularSequence object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Molecular Sequence Edit</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Molecular Sequence Edit</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseMolecularSequenceEdit(MolecularSequenceEdit object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Molecular Sequence Relative</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Molecular Sequence Relative</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseMolecularSequenceRelative(MolecularSequenceRelative object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Molecular Sequence Starting Sequence</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Molecular Sequence Starting Sequence</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseMolecularSequenceStartingSequence(MolecularSequenceStartingSequence object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Monetary Component</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Monetary Component</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseMonetaryComponent(MonetaryComponent object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Money</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Money</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseMoney(Money object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Name Use</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Name Use</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseNameUse(NameUse object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Naming System</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Naming System</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseNamingSystem(NamingSystem object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Naming System Identifier Type</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Naming System Identifier Type</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseNamingSystemIdentifierType(NamingSystemIdentifierType object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Naming System Type</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Naming System Type</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseNamingSystemType(NamingSystemType object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Naming System Unique Id</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Naming System Unique Id</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseNamingSystemUniqueId(NamingSystemUniqueId object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Narrative</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Narrative</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseNarrative(Narrative object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Narrative Status</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Narrative Status</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseNarrativeStatus(NarrativeStatus object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Note Type</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Note Type</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseNoteType(NoteType object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Nutrition Intake</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Nutrition Intake</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseNutritionIntake(NutritionIntake object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Nutrition Intake Consumed Item</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Nutrition Intake Consumed Item</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseNutritionIntakeConsumedItem(NutritionIntakeConsumedItem object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Nutrition Intake Ingredient Label</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Nutrition Intake Ingredient Label</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseNutritionIntakeIngredientLabel(NutritionIntakeIngredientLabel object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Nutrition Intake Performer</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Nutrition Intake Performer</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseNutritionIntakePerformer(NutritionIntakePerformer object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Nutrition Order</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Nutrition Order</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseNutritionOrder(NutritionOrder object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Nutrition Order Additive</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Nutrition Order Additive</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseNutritionOrderAdditive(NutritionOrderAdditive object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Nutrition Order Administration</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Nutrition Order Administration</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseNutritionOrderAdministration(NutritionOrderAdministration object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Nutrition Order Enteral Formula</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Nutrition Order Enteral Formula</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseNutritionOrderEnteralFormula(NutritionOrderEnteralFormula object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Nutrition Order Nutrient</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Nutrition Order Nutrient</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseNutritionOrderNutrient(NutritionOrderNutrient object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Nutrition Order Oral Diet</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Nutrition Order Oral Diet</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseNutritionOrderOralDiet(NutritionOrderOralDiet object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Nutrition Order Schedule</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Nutrition Order Schedule</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseNutritionOrderSchedule(NutritionOrderSchedule object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Nutrition Order Schedule1</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Nutrition Order Schedule1</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseNutritionOrderSchedule1(NutritionOrderSchedule1 object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Nutrition Order Schedule2</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Nutrition Order Schedule2</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseNutritionOrderSchedule2(NutritionOrderSchedule2 object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Nutrition Order Supplement</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Nutrition Order Supplement</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseNutritionOrderSupplement(NutritionOrderSupplement object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Nutrition Order Texture</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Nutrition Order Texture</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseNutritionOrderTexture(NutritionOrderTexture object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Nutrition Product</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Nutrition Product</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseNutritionProduct(NutritionProduct object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Nutrition Product Characteristic</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Nutrition Product Characteristic</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseNutritionProductCharacteristic(NutritionProductCharacteristic object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Nutrition Product Ingredient</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Nutrition Product Ingredient</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseNutritionProductIngredient(NutritionProductIngredient object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Nutrition Product Instance</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Nutrition Product Instance</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseNutritionProductInstance(NutritionProductInstance object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Nutrition Product Nutrient</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Nutrition Product Nutrient</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseNutritionProductNutrient(NutritionProductNutrient object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Nutrition Product Status</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Nutrition Product Status</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseNutritionProductStatus(NutritionProductStatus object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Observation</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Observation</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseObservation(Observation object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Observation Component</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Observation Component</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseObservationComponent(ObservationComponent object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Observation Data Type</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Observation Data Type</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseObservationDataType(ObservationDataType object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Observation Definition</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Observation Definition</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseObservationDefinition(ObservationDefinition object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Observation Definition Component</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Observation Definition Component</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseObservationDefinitionComponent(ObservationDefinitionComponent object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Observation Definition Qualified Value</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Observation Definition Qualified Value</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseObservationDefinitionQualifiedValue(ObservationDefinitionQualifiedValue object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Observation Range Category</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Observation Range Category</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseObservationRangeCategory(ObservationRangeCategory object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Observation Reference Range</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Observation Reference Range</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseObservationReferenceRange(ObservationReferenceRange object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Observation Status</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Observation Status</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseObservationStatus(ObservationStatus object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Observation Triggered By</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Observation Triggered By</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseObservationTriggeredBy(ObservationTriggeredBy object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Oid</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Oid</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseOid(Oid object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Operation Definition</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Operation Definition</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseOperationDefinition(OperationDefinition object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Operation Definition Binding</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Operation Definition Binding</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseOperationDefinitionBinding(OperationDefinitionBinding object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Operation Definition Overload</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Operation Definition Overload</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseOperationDefinitionOverload(OperationDefinitionOverload object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Operation Definition Parameter</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Operation Definition Parameter</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseOperationDefinitionParameter(OperationDefinitionParameter object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Operation Definition Referenced From</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Operation Definition Referenced From</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseOperationDefinitionReferencedFrom(OperationDefinitionReferencedFrom object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Operation Kind</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Operation Kind</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseOperationKind(OperationKind object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Operation Outcome</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Operation Outcome</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseOperationOutcome(OperationOutcome object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Operation Outcome Codes</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Operation Outcome Codes</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseOperationOutcomeCodes(OperationOutcomeCodes object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Operation Outcome Issue</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Operation Outcome Issue</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseOperationOutcomeIssue(OperationOutcomeIssue object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Operation Parameter Scope</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Operation Parameter Scope</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseOperationParameterScope(OperationParameterScope object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Operation Parameter Use</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Operation Parameter Use</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseOperationParameterUse(OperationParameterUse object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Organization</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Organization</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseOrganization(Organization object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Organization Affiliation</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Organization Affiliation</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseOrganizationAffiliation(OrganizationAffiliation object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Organization Qualification</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Organization Qualification</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseOrganizationQualification(OrganizationQualification object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Orientation Type</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Orientation Type</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseOrientationType(OrientationType object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Packaged Product Definition</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Packaged Product Definition</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T casePackagedProductDefinition(PackagedProductDefinition object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Packaged Product Definition Contained Item</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Packaged Product Definition Contained Item</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T casePackagedProductDefinitionContainedItem(PackagedProductDefinitionContainedItem object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Packaged Product Definition Legal Status Of Supply</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Packaged Product Definition Legal Status Of Supply</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T casePackagedProductDefinitionLegalStatusOfSupply(PackagedProductDefinitionLegalStatusOfSupply object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Packaged Product Definition Packaging</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Packaged Product Definition Packaging</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T casePackagedProductDefinitionPackaging(PackagedProductDefinitionPackaging object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Packaged Product Definition Property</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Packaged Product Definition Property</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T casePackagedProductDefinitionProperty(PackagedProductDefinitionProperty object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Parameter Definition</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Parameter Definition</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseParameterDefinition(ParameterDefinition object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Parameters</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Parameters</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseParameters(Parameters object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Parameters Parameter</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Parameters Parameter</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseParametersParameter(ParametersParameter object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Participant Resource Types</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Participant Resource Types</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseParticipantResourceTypes(ParticipantResourceTypes object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Participation Status</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Participation Status</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseParticipationStatus(ParticipationStatus object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Patient</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Patient</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T casePatient(Patient object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Patient Communication</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Patient Communication</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T casePatientCommunication(PatientCommunication object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Patient Contact</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Patient Contact</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T casePatientContact(PatientContact object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Patient Link</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Patient Link</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T casePatientLink(PatientLink object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Payment Notice</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Payment Notice</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T casePaymentNotice(PaymentNotice object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Payment Outcome</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Payment Outcome</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T casePaymentOutcome(PaymentOutcome object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Payment Reconciliation</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Payment Reconciliation</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T casePaymentReconciliation(PaymentReconciliation object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Payment Reconciliation Allocation</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Payment Reconciliation Allocation</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T casePaymentReconciliationAllocation(PaymentReconciliationAllocation object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Payment Reconciliation Process Note</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Payment Reconciliation Process Note</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T casePaymentReconciliationProcessNote(PaymentReconciliationProcessNote object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Period</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Period</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T casePeriod(Period object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Permission</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Permission</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T casePermission(Permission object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Permission Activity</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Permission Activity</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T casePermissionActivity(PermissionActivity object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Permission Data</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Permission Data</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T casePermissionData(PermissionData object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Permission Justification</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Permission Justification</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T casePermissionJustification(PermissionJustification object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Permission Resource</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Permission Resource</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T casePermissionResource(PermissionResource object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Permission Rule</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Permission Rule</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T casePermissionRule(PermissionRule object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Permission Rule Combining</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Permission Rule Combining</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T casePermissionRuleCombining(PermissionRuleCombining object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Permission Status</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Permission Status</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T casePermissionStatus(PermissionStatus object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Person</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Person</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T casePerson(Person object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Person Communication</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Person Communication</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T casePersonCommunication(PersonCommunication object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Person Link</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Person Link</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T casePersonLink(PersonLink object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Plan Definition</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Plan Definition</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T casePlanDefinition(PlanDefinition object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Plan Definition Action</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Plan Definition Action</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T casePlanDefinitionAction(PlanDefinitionAction object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Plan Definition Actor</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Plan Definition Actor</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T casePlanDefinitionActor(PlanDefinitionActor object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Plan Definition Condition</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Plan Definition Condition</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T casePlanDefinitionCondition(PlanDefinitionCondition object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Plan Definition Dynamic Value</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Plan Definition Dynamic Value</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T casePlanDefinitionDynamicValue(PlanDefinitionDynamicValue object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Plan Definition Goal</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Plan Definition Goal</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T casePlanDefinitionGoal(PlanDefinitionGoal object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Plan Definition Input</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Plan Definition Input</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T casePlanDefinitionInput(PlanDefinitionInput object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Plan Definition Option</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Plan Definition Option</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T casePlanDefinitionOption(PlanDefinitionOption object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Plan Definition Output</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Plan Definition Output</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T casePlanDefinitionOutput(PlanDefinitionOutput object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Plan Definition Participant</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Plan Definition Participant</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T casePlanDefinitionParticipant(PlanDefinitionParticipant object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Plan Definition Related Action</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Plan Definition Related Action</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T casePlanDefinitionRelatedAction(PlanDefinitionRelatedAction object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Plan Definition Target</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Plan Definition Target</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T casePlanDefinitionTarget(PlanDefinitionTarget object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Positive Int</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Positive Int</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T casePositiveInt(PositiveInt object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Practitioner</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Practitioner</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T casePractitioner(Practitioner object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Practitioner Communication</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Practitioner Communication</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T casePractitionerCommunication(PractitionerCommunication object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Practitioner Qualification</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Practitioner Qualification</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T casePractitionerQualification(PractitionerQualification object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Practitioner Role</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Practitioner Role</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T casePractitionerRole(PractitionerRole object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Primitive Type</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Primitive Type</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T casePrimitiveType(PrimitiveType object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Procedure</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Procedure</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseProcedure(Procedure object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Procedure Focal Device</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Procedure Focal Device</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseProcedureFocalDevice(ProcedureFocalDevice object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Procedure Performer</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Procedure Performer</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseProcedurePerformer(ProcedurePerformer object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Product Shelf Life</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Product Shelf Life</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseProductShelfLife(ProductShelfLife object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Property Representation</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Property Representation</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T casePropertyRepresentation(PropertyRepresentation object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Property Type</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Property Type</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T casePropertyType(PropertyType object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Provenance</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Provenance</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseProvenance(Provenance object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Provenance Agent</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Provenance Agent</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseProvenanceAgent(ProvenanceAgent object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Provenance Entity</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Provenance Entity</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseProvenanceEntity(ProvenanceEntity object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Provenance Entity Role</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Provenance Entity Role</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseProvenanceEntityRole(ProvenanceEntityRole object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Publication Status</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Publication Status</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T casePublicationStatus(PublicationStatus object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Quantity</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Quantity</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseQuantity(Quantity object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Quantity Comparator</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Quantity Comparator</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseQuantityComparator(QuantityComparator object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Questionnaire</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Questionnaire</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseQuestionnaire(Questionnaire object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Questionnaire Answer Constraint</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Questionnaire Answer Constraint</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseQuestionnaireAnswerConstraint(QuestionnaireAnswerConstraint object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Questionnaire Answer Option</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Questionnaire Answer Option</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseQuestionnaireAnswerOption(QuestionnaireAnswerOption object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Questionnaire Enable When</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Questionnaire Enable When</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseQuestionnaireEnableWhen(QuestionnaireEnableWhen object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Questionnaire Initial</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Questionnaire Initial</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseQuestionnaireInitial(QuestionnaireInitial object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Questionnaire Item</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Questionnaire Item</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseQuestionnaireItem(QuestionnaireItem object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Questionnaire Item Disabled Display</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Questionnaire Item Disabled Display</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseQuestionnaireItemDisabledDisplay(QuestionnaireItemDisabledDisplay object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Questionnaire Item Operator</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Questionnaire Item Operator</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseQuestionnaireItemOperator(QuestionnaireItemOperator object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Questionnaire Item Type</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Questionnaire Item Type</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseQuestionnaireItemType(QuestionnaireItemType object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Questionnaire Response</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Questionnaire Response</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseQuestionnaireResponse(QuestionnaireResponse object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Questionnaire Response Answer</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Questionnaire Response Answer</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseQuestionnaireResponseAnswer(QuestionnaireResponseAnswer object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Questionnaire Response Item</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Questionnaire Response Item</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseQuestionnaireResponseItem(QuestionnaireResponseItem object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Questionnaire Response Status</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Questionnaire Response Status</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseQuestionnaireResponseStatus(QuestionnaireResponseStatus object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Range</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Range</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseRange(Range object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Ratio</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Ratio</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseRatio(Ratio object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Ratio Range</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Ratio Range</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseRatioRange(RatioRange object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Reference</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Reference</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseReference(Reference object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Reference Handling Policy</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Reference Handling Policy</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseReferenceHandlingPolicy(ReferenceHandlingPolicy object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Reference Version Rules</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Reference Version Rules</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseReferenceVersionRules(ReferenceVersionRules object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Regulated Authorization</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Regulated Authorization</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseRegulatedAuthorization(RegulatedAuthorization object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Regulated Authorization Case</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Regulated Authorization Case</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseRegulatedAuthorizationCase(RegulatedAuthorizationCase object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Related Artifact</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Related Artifact</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseRelatedArtifact(RelatedArtifact object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Related Artifact Type</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Related Artifact Type</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseRelatedArtifactType(RelatedArtifactType object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Related Artifact Type Expanded</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Related Artifact Type Expanded</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseRelatedArtifactTypeExpanded(RelatedArtifactTypeExpanded object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Related Person</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Related Person</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseRelatedPerson(RelatedPerson object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Related Person Communication</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Related Person Communication</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseRelatedPersonCommunication(RelatedPersonCommunication object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Remittance Outcome</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Remittance Outcome</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseRemittanceOutcome(RemittanceOutcome object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Report Relationship Type</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Report Relationship Type</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseReportRelationshipType(ReportRelationshipType object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Request Intent</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Request Intent</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseRequestIntent(RequestIntent object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Request Orchestration</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Request Orchestration</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseRequestOrchestration(RequestOrchestration object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Request Orchestration Action</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Request Orchestration Action</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseRequestOrchestrationAction(RequestOrchestrationAction object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Request Orchestration Condition</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Request Orchestration Condition</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseRequestOrchestrationCondition(RequestOrchestrationCondition object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Request Orchestration Dynamic Value</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Request Orchestration Dynamic Value</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseRequestOrchestrationDynamicValue(RequestOrchestrationDynamicValue object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Request Orchestration Input</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Request Orchestration Input</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseRequestOrchestrationInput(RequestOrchestrationInput object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Request Orchestration Output</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Request Orchestration Output</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseRequestOrchestrationOutput(RequestOrchestrationOutput object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Request Orchestration Participant</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Request Orchestration Participant</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseRequestOrchestrationParticipant(RequestOrchestrationParticipant object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Request Orchestration Related Action</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Request Orchestration Related Action</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseRequestOrchestrationRelatedAction(RequestOrchestrationRelatedAction object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Request Priority</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Request Priority</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseRequestPriority(RequestPriority object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Request Resource Types</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Request Resource Types</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseRequestResourceTypes(RequestResourceTypes object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Request Status</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Request Status</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseRequestStatus(RequestStatus object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Requirements</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Requirements</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseRequirements(Requirements object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Requirements Statement</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Requirements Statement</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseRequirementsStatement(RequirementsStatement object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Research Study</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Research Study</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseResearchStudy(ResearchStudy object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Research Study Associated Party</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Research Study Associated Party</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseResearchStudyAssociatedParty(ResearchStudyAssociatedParty object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Research Study Comparison Group</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Research Study Comparison Group</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseResearchStudyComparisonGroup(ResearchStudyComparisonGroup object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Research Study Label</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Research Study Label</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseResearchStudyLabel(ResearchStudyLabel object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Research Study Objective</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Research Study Objective</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseResearchStudyObjective(ResearchStudyObjective object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Research Study Outcome Measure</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Research Study Outcome Measure</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseResearchStudyOutcomeMeasure(ResearchStudyOutcomeMeasure object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Research Study Progress Status</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Research Study Progress Status</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseResearchStudyProgressStatus(ResearchStudyProgressStatus object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Research Study Recruitment</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Research Study Recruitment</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseResearchStudyRecruitment(ResearchStudyRecruitment object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Research Subject</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Research Subject</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseResearchSubject(ResearchSubject object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Research Subject Progress</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Research Subject Progress</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseResearchSubjectProgress(ResearchSubjectProgress object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Resource</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Resource</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseResource(Resource object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Resource Container</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Resource Container</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseResourceContainer(ResourceContainer object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Resource Type</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Resource Type</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseResourceType(ResourceType object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Resource Version Policy</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Resource Version Policy</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseResourceVersionPolicy(ResourceVersionPolicy object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Response Type</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Response Type</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseResponseType(ResponseType object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Restful Capability Mode</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Restful Capability Mode</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseRestfulCapabilityMode(RestfulCapabilityMode object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Risk Assessment</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Risk Assessment</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseRiskAssessment(RiskAssessment object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Risk Assessment Prediction</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Risk Assessment Prediction</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseRiskAssessmentPrediction(RiskAssessmentPrediction object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Sampled Data</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Sampled Data</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseSampledData(SampledData object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Sampled Data Data Type</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Sampled Data Data Type</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseSampledDataDataType(SampledDataDataType object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Schedule</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Schedule</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseSchedule(Schedule object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Search Comparator</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Search Comparator</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseSearchComparator(SearchComparator object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Search Entry Mode</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Search Entry Mode</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseSearchEntryMode(SearchEntryMode object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Search Modifier Code</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Search Modifier Code</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseSearchModifierCode(SearchModifierCode object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Search Parameter</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Search Parameter</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseSearchParameter(SearchParameter object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Search Parameter Component</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Search Parameter Component</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseSearchParameterComponent(SearchParameterComponent object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Search Param Type</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Search Param Type</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseSearchParamType(SearchParamType object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Search Processing Mode Type</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Search Processing Mode Type</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseSearchProcessingModeType(SearchProcessingModeType object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Sequence Type</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Sequence Type</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseSequenceType(SequenceType object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Service Request</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Service Request</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseServiceRequest(ServiceRequest object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Service Request Order Detail</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Service Request Order Detail</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseServiceRequestOrderDetail(ServiceRequestOrderDetail object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Service Request Parameter</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Service Request Parameter</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseServiceRequestParameter(ServiceRequestParameter object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Service Request Patient Instruction</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Service Request Patient Instruction</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseServiceRequestPatientInstruction(ServiceRequestPatientInstruction object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Signature</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Signature</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseSignature(Signature object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Slicing Rules</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Slicing Rules</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseSlicingRules(SlicingRules object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Slot</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Slot</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseSlot(Slot object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Slot Status</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Slot Status</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseSlotStatus(SlotStatus object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Sort Direction</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Sort Direction</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseSortDirection(SortDirection object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>SPDX License</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>SPDX License</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseSPDXLicense(SPDXLicense object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Specimen</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Specimen</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseSpecimen(Specimen object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Specimen Collection</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Specimen Collection</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseSpecimenCollection(SpecimenCollection object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Specimen Combined</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Specimen Combined</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseSpecimenCombined(SpecimenCombined object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Specimen Contained Preference</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Specimen Contained Preference</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseSpecimenContainedPreference(SpecimenContainedPreference object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Specimen Container</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Specimen Container</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseSpecimenContainer(SpecimenContainer object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Specimen Definition</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Specimen Definition</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseSpecimenDefinition(SpecimenDefinition object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Specimen Definition Additive</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Specimen Definition Additive</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseSpecimenDefinitionAdditive(SpecimenDefinitionAdditive object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Specimen Definition Container</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Specimen Definition Container</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseSpecimenDefinitionContainer(SpecimenDefinitionContainer object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Specimen Definition Handling</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Specimen Definition Handling</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseSpecimenDefinitionHandling(SpecimenDefinitionHandling object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Specimen Definition Type Tested</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Specimen Definition Type Tested</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseSpecimenDefinitionTypeTested(SpecimenDefinitionTypeTested object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Specimen Feature</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Specimen Feature</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseSpecimenFeature(SpecimenFeature object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Specimen Processing</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Specimen Processing</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseSpecimenProcessing(SpecimenProcessing object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Specimen Status</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Specimen Status</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseSpecimenStatus(SpecimenStatus object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Strand Type</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Strand Type</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseStrandType(StrandType object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>String</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>String</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseString(org.hl7.emf.fhir.String object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Structure Definition</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Structure Definition</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseStructureDefinition(StructureDefinition object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Structure Definition Context</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Structure Definition Context</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseStructureDefinitionContext(StructureDefinitionContext object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Structure Definition Differential</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Structure Definition Differential</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseStructureDefinitionDifferential(StructureDefinitionDifferential object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Structure Definition Kind</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Structure Definition Kind</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseStructureDefinitionKind(StructureDefinitionKind object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Structure Definition Mapping</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Structure Definition Mapping</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseStructureDefinitionMapping(StructureDefinitionMapping object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Structure Definition Snapshot</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Structure Definition Snapshot</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseStructureDefinitionSnapshot(StructureDefinitionSnapshot object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Structure Map</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Structure Map</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseStructureMap(StructureMap object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Structure Map Const</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Structure Map Const</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseStructureMapConst(StructureMapConst object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Structure Map Dependent</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Structure Map Dependent</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseStructureMapDependent(StructureMapDependent object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Structure Map Group</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Structure Map Group</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseStructureMapGroup(StructureMapGroup object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Structure Map Group Type Mode</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Structure Map Group Type Mode</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseStructureMapGroupTypeMode(StructureMapGroupTypeMode object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Structure Map Input</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Structure Map Input</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseStructureMapInput(StructureMapInput object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Structure Map Input Mode</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Structure Map Input Mode</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseStructureMapInputMode(StructureMapInputMode object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Structure Map Model Mode</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Structure Map Model Mode</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseStructureMapModelMode(StructureMapModelMode object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Structure Map Parameter</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Structure Map Parameter</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseStructureMapParameter(StructureMapParameter object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Structure Map Rule</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Structure Map Rule</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseStructureMapRule(StructureMapRule object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Structure Map Source</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Structure Map Source</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseStructureMapSource(StructureMapSource object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Structure Map Source List Mode</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Structure Map Source List Mode</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseStructureMapSourceListMode(StructureMapSourceListMode object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Structure Map Structure</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Structure Map Structure</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseStructureMapStructure(StructureMapStructure object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Structure Map Target</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Structure Map Target</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseStructureMapTarget(StructureMapTarget object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Structure Map Target List Mode</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Structure Map Target List Mode</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseStructureMapTargetListMode(StructureMapTargetListMode object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Structure Map Transform</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Structure Map Transform</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseStructureMapTransform(StructureMapTransform object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Submit Data Update Type</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Submit Data Update Type</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseSubmitDataUpdateType(SubmitDataUpdateType object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Subscription</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Subscription</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseSubscription(Subscription object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Subscription Filter By</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Subscription Filter By</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseSubscriptionFilterBy(SubscriptionFilterBy object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Subscription Notification Type</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Subscription Notification Type</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseSubscriptionNotificationType(SubscriptionNotificationType object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Subscription Parameter</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Subscription Parameter</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseSubscriptionParameter(SubscriptionParameter object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Subscription Payload Content</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Subscription Payload Content</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseSubscriptionPayloadContent(SubscriptionPayloadContent object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Subscription Status</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Subscription Status</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseSubscriptionStatus(SubscriptionStatus object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Subscription Status Codes</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Subscription Status Codes</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseSubscriptionStatusCodes(SubscriptionStatusCodes object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Subscription Status Notification Event</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Subscription Status Notification Event</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseSubscriptionStatusNotificationEvent(SubscriptionStatusNotificationEvent object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Subscription Topic</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Subscription Topic</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseSubscriptionTopic(SubscriptionTopic object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Subscription Topic Can Filter By</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Subscription Topic Can Filter By</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseSubscriptionTopicCanFilterBy(SubscriptionTopicCanFilterBy object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Subscription Topic Event Trigger</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Subscription Topic Event Trigger</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseSubscriptionTopicEventTrigger(SubscriptionTopicEventTrigger object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Subscription Topic Notification Shape</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Subscription Topic Notification Shape</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseSubscriptionTopicNotificationShape(SubscriptionTopicNotificationShape object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Subscription Topic Query Criteria</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Subscription Topic Query Criteria</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseSubscriptionTopicQueryCriteria(SubscriptionTopicQueryCriteria object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Subscription Topic Resource Trigger</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Subscription Topic Resource Trigger</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseSubscriptionTopicResourceTrigger(SubscriptionTopicResourceTrigger object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Substance</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Substance</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseSubstance(Substance object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Substance Definition</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Substance Definition</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseSubstanceDefinition(SubstanceDefinition object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Substance Definition Characterization</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Substance Definition Characterization</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseSubstanceDefinitionCharacterization(SubstanceDefinitionCharacterization object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Substance Definition Code</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Substance Definition Code</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseSubstanceDefinitionCode(SubstanceDefinitionCode object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Substance Definition Moiety</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Substance Definition Moiety</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseSubstanceDefinitionMoiety(SubstanceDefinitionMoiety object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Substance Definition Molecular Weight</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Substance Definition Molecular Weight</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseSubstanceDefinitionMolecularWeight(SubstanceDefinitionMolecularWeight object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Substance Definition Name</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Substance Definition Name</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseSubstanceDefinitionName(SubstanceDefinitionName object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Substance Definition Official</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Substance Definition Official</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseSubstanceDefinitionOfficial(SubstanceDefinitionOfficial object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Substance Definition Property</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Substance Definition Property</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseSubstanceDefinitionProperty(SubstanceDefinitionProperty object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Substance Definition Relationship</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Substance Definition Relationship</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseSubstanceDefinitionRelationship(SubstanceDefinitionRelationship object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Substance Definition Representation</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Substance Definition Representation</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseSubstanceDefinitionRepresentation(SubstanceDefinitionRepresentation object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Substance Definition Source Material</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Substance Definition Source Material</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseSubstanceDefinitionSourceMaterial(SubstanceDefinitionSourceMaterial object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Substance Definition Structure</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Substance Definition Structure</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseSubstanceDefinitionStructure(SubstanceDefinitionStructure object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Substance Ingredient</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Substance Ingredient</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseSubstanceIngredient(SubstanceIngredient object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Substance Nucleic Acid</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Substance Nucleic Acid</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseSubstanceNucleicAcid(SubstanceNucleicAcid object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Substance Nucleic Acid Linkage</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Substance Nucleic Acid Linkage</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseSubstanceNucleicAcidLinkage(SubstanceNucleicAcidLinkage object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Substance Nucleic Acid Subunit</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Substance Nucleic Acid Subunit</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseSubstanceNucleicAcidSubunit(SubstanceNucleicAcidSubunit object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Substance Nucleic Acid Sugar</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Substance Nucleic Acid Sugar</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseSubstanceNucleicAcidSugar(SubstanceNucleicAcidSugar object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Substance Polymer</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Substance Polymer</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseSubstancePolymer(SubstancePolymer object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Substance Polymer Degree Of Polymerisation</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Substance Polymer Degree Of Polymerisation</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseSubstancePolymerDegreeOfPolymerisation(SubstancePolymerDegreeOfPolymerisation object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Substance Polymer Monomer Set</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Substance Polymer Monomer Set</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseSubstancePolymerMonomerSet(SubstancePolymerMonomerSet object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Substance Polymer Repeat</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Substance Polymer Repeat</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseSubstancePolymerRepeat(SubstancePolymerRepeat object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Substance Polymer Repeat Unit</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Substance Polymer Repeat Unit</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseSubstancePolymerRepeatUnit(SubstancePolymerRepeatUnit object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Substance Polymer Starting Material</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Substance Polymer Starting Material</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseSubstancePolymerStartingMaterial(SubstancePolymerStartingMaterial object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Substance Polymer Structural Representation</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Substance Polymer Structural Representation</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseSubstancePolymerStructuralRepresentation(SubstancePolymerStructuralRepresentation object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Substance Protein</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Substance Protein</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseSubstanceProtein(SubstanceProtein object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Substance Protein Subunit</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Substance Protein Subunit</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseSubstanceProteinSubunit(SubstanceProteinSubunit object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Substance Reference Information</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Substance Reference Information</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseSubstanceReferenceInformation(SubstanceReferenceInformation object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Substance Reference Information Gene</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Substance Reference Information Gene</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseSubstanceReferenceInformationGene(SubstanceReferenceInformationGene object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Substance Reference Information Gene Element</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Substance Reference Information Gene Element</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseSubstanceReferenceInformationGeneElement(SubstanceReferenceInformationGeneElement object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Substance Reference Information Target</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Substance Reference Information Target</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseSubstanceReferenceInformationTarget(SubstanceReferenceInformationTarget object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Substance Source Material</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Substance Source Material</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseSubstanceSourceMaterial(SubstanceSourceMaterial object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Substance Source Material Author</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Substance Source Material Author</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseSubstanceSourceMaterialAuthor(SubstanceSourceMaterialAuthor object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Substance Source Material Fraction Description</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Substance Source Material Fraction Description</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseSubstanceSourceMaterialFractionDescription(SubstanceSourceMaterialFractionDescription object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Substance Source Material Hybrid</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Substance Source Material Hybrid</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseSubstanceSourceMaterialHybrid(SubstanceSourceMaterialHybrid object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Substance Source Material Organism</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Substance Source Material Organism</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseSubstanceSourceMaterialOrganism(SubstanceSourceMaterialOrganism object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Substance Source Material Organism General</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Substance Source Material Organism General</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseSubstanceSourceMaterialOrganismGeneral(SubstanceSourceMaterialOrganismGeneral object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Substance Source Material Part Description</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Substance Source Material Part Description</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseSubstanceSourceMaterialPartDescription(SubstanceSourceMaterialPartDescription object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Supply Delivery</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Supply Delivery</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseSupplyDelivery(SupplyDelivery object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Supply Delivery Status</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Supply Delivery Status</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseSupplyDeliveryStatus(SupplyDeliveryStatus object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Supply Delivery Supplied Item</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Supply Delivery Supplied Item</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseSupplyDeliverySuppliedItem(SupplyDeliverySuppliedItem object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Supply Request</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Supply Request</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseSupplyRequest(SupplyRequest object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Supply Request Parameter</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Supply Request Parameter</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseSupplyRequestParameter(SupplyRequestParameter object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Supply Request Status</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Supply Request Status</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseSupplyRequestStatus(SupplyRequestStatus object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>System Restful Interaction</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>System Restful Interaction</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseSystemRestfulInteraction(SystemRestfulInteraction object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Task</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Task</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseTask(Task object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Task Input</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Task Input</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseTaskInput(TaskInput object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Task Intent</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Task Intent</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseTaskIntent(TaskIntent object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Task Output</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Task Output</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseTaskOutput(TaskOutput object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Task Performer</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Task Performer</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseTaskPerformer(TaskPerformer object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Task Restriction</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Task Restriction</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseTaskRestriction(TaskRestriction object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Task Status</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Task Status</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseTaskStatus(TaskStatus object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Terminology Capabilities</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Terminology Capabilities</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseTerminologyCapabilities(TerminologyCapabilities object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Terminology Capabilities Closure</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Terminology Capabilities Closure</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseTerminologyCapabilitiesClosure(TerminologyCapabilitiesClosure object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Terminology Capabilities Code System</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Terminology Capabilities Code System</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseTerminologyCapabilitiesCodeSystem(TerminologyCapabilitiesCodeSystem object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Terminology Capabilities Expansion</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Terminology Capabilities Expansion</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseTerminologyCapabilitiesExpansion(TerminologyCapabilitiesExpansion object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Terminology Capabilities Filter</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Terminology Capabilities Filter</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseTerminologyCapabilitiesFilter(TerminologyCapabilitiesFilter object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Terminology Capabilities Implementation</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Terminology Capabilities Implementation</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseTerminologyCapabilitiesImplementation(TerminologyCapabilitiesImplementation object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Terminology Capabilities Parameter</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Terminology Capabilities Parameter</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseTerminologyCapabilitiesParameter(TerminologyCapabilitiesParameter object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Terminology Capabilities Software</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Terminology Capabilities Software</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseTerminologyCapabilitiesSoftware(TerminologyCapabilitiesSoftware object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Terminology Capabilities Translation</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Terminology Capabilities Translation</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseTerminologyCapabilitiesTranslation(TerminologyCapabilitiesTranslation object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Terminology Capabilities Validate Code</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Terminology Capabilities Validate Code</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseTerminologyCapabilitiesValidateCode(TerminologyCapabilitiesValidateCode object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Terminology Capabilities Version</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Terminology Capabilities Version</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseTerminologyCapabilitiesVersion(TerminologyCapabilitiesVersion object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Test Plan</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Test Plan</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseTestPlan(TestPlan object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Test Plan Assertion</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Test Plan Assertion</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseTestPlanAssertion(TestPlanAssertion object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Test Plan Dependency</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Test Plan Dependency</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseTestPlanDependency(TestPlanDependency object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Test Plan Dependency1</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Test Plan Dependency1</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseTestPlanDependency1(TestPlanDependency1 object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Test Plan Script</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Test Plan Script</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseTestPlanScript(TestPlanScript object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Test Plan Test Case</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Test Plan Test Case</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseTestPlanTestCase(TestPlanTestCase object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Test Plan Test Data</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Test Plan Test Data</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseTestPlanTestData(TestPlanTestData object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Test Plan Test Run</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Test Plan Test Run</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseTestPlanTestRun(TestPlanTestRun object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Test Report</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Test Report</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseTestReport(TestReport object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Test Report Action</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Test Report Action</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseTestReportAction(TestReportAction object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Test Report Action1</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Test Report Action1</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseTestReportAction1(TestReportAction1 object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Test Report Action2</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Test Report Action2</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseTestReportAction2(TestReportAction2 object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Test Report Action Result</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Test Report Action Result</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseTestReportActionResult(TestReportActionResult object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Test Report Assert</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Test Report Assert</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseTestReportAssert(TestReportAssert object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Test Report Operation</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Test Report Operation</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseTestReportOperation(TestReportOperation object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Test Report Participant</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Test Report Participant</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseTestReportParticipant(TestReportParticipant object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Test Report Participant Type</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Test Report Participant Type</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseTestReportParticipantType(TestReportParticipantType object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Test Report Requirement</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Test Report Requirement</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseTestReportRequirement(TestReportRequirement object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Test Report Result</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Test Report Result</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseTestReportResult(TestReportResult object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Test Report Setup</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Test Report Setup</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseTestReportSetup(TestReportSetup object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Test Report Status</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Test Report Status</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseTestReportStatus(TestReportStatus object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Test Report Teardown</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Test Report Teardown</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseTestReportTeardown(TestReportTeardown object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Test Report Test</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Test Report Test</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseTestReportTest(TestReportTest object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Test Script</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Test Script</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseTestScript(TestScript object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Test Script Action</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Test Script Action</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseTestScriptAction(TestScriptAction object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Test Script Action1</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Test Script Action1</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseTestScriptAction1(TestScriptAction1 object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Test Script Action2</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Test Script Action2</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseTestScriptAction2(TestScriptAction2 object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Test Script Assert</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Test Script Assert</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseTestScriptAssert(TestScriptAssert object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Test Script Capability</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Test Script Capability</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseTestScriptCapability(TestScriptCapability object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Test Script Destination</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Test Script Destination</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseTestScriptDestination(TestScriptDestination object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Test Script Fixture</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Test Script Fixture</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseTestScriptFixture(TestScriptFixture object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Test Script Link</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Test Script Link</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseTestScriptLink(TestScriptLink object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Test Script Metadata</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Test Script Metadata</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseTestScriptMetadata(TestScriptMetadata object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Test Script Operation</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Test Script Operation</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseTestScriptOperation(TestScriptOperation object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Test Script Origin</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Test Script Origin</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseTestScriptOrigin(TestScriptOrigin object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Test Script Request Header</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Test Script Request Header</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseTestScriptRequestHeader(TestScriptRequestHeader object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Test Script Request Method Code</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Test Script Request Method Code</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseTestScriptRequestMethodCode(TestScriptRequestMethodCode object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Test Script Requirement</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Test Script Requirement</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseTestScriptRequirement(TestScriptRequirement object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Test Script Scope</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Test Script Scope</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseTestScriptScope(TestScriptScope object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Test Script Setup</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Test Script Setup</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseTestScriptSetup(TestScriptSetup object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Test Script Teardown</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Test Script Teardown</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseTestScriptTeardown(TestScriptTeardown object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Test Script Test</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Test Script Test</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseTestScriptTest(TestScriptTest object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Test Script Variable</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Test Script Variable</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseTestScriptVariable(TestScriptVariable object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Time</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Time</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseTime(Time object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Timing</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Timing</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseTiming(Timing object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Timing Repeat</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Timing Repeat</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseTimingRepeat(TimingRepeat object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Transport</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Transport</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseTransport(Transport object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Transport Input</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Transport Input</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseTransportInput(TransportInput object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Transport Intent</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Transport Intent</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseTransportIntent(TransportIntent object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Transport Output</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Transport Output</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseTransportOutput(TransportOutput object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Transport Restriction</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Transport Restriction</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseTransportRestriction(TransportRestriction object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Transport Status</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Transport Status</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseTransportStatus(TransportStatus object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Trigger Definition</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Trigger Definition</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseTriggerDefinition(TriggerDefinition object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Triggered Bytype</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Triggered Bytype</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseTriggeredBytype(TriggeredBytype object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Trigger Type</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Trigger Type</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseTriggerType(TriggerType object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Type Derivation Rule</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Type Derivation Rule</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseTypeDerivationRule(TypeDerivationRule object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Type Restful Interaction</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Type Restful Interaction</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseTypeRestfulInteraction(TypeRestfulInteraction object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>UDI Entry Type</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>UDI Entry Type</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseUDIEntryType(UDIEntryType object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Units Of Time</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Units Of Time</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseUnitsOfTime(UnitsOfTime object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Unsigned Int</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Unsigned Int</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseUnsignedInt(UnsignedInt object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Uri</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Uri</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseUri(Uri object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Url</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Url</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseUrl(Url object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Usage Context</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Usage Context</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseUsageContext(UsageContext object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Use</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Use</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseUse(Use object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Uuid</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Uuid</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseUuid(Uuid object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Value Set</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Value Set</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseValueSet(ValueSet object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Value Set Compose</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Value Set Compose</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseValueSetCompose(ValueSetCompose object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Value Set Concept</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Value Set Concept</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseValueSetConcept(ValueSetConcept object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Value Set Contains</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Value Set Contains</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseValueSetContains(ValueSetContains object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Value Set Designation</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Value Set Designation</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseValueSetDesignation(ValueSetDesignation object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Value Set Expansion</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Value Set Expansion</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseValueSetExpansion(ValueSetExpansion object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Value Set Filter</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Value Set Filter</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseValueSetFilter(ValueSetFilter object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Value Set Include</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Value Set Include</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseValueSetInclude(ValueSetInclude object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Value Set Parameter</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Value Set Parameter</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseValueSetParameter(ValueSetParameter object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Value Set Property</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Value Set Property</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseValueSetProperty(ValueSetProperty object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Value Set Property1</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Value Set Property1</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseValueSetProperty1(ValueSetProperty1 object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Value Set Scope</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Value Set Scope</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseValueSetScope(ValueSetScope object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Value Set Sub Property</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Value Set Sub Property</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseValueSetSubProperty(ValueSetSubProperty object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Verification Result</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Verification Result</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseVerificationResult(VerificationResult object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Verification Result Attestation</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Verification Result Attestation</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseVerificationResultAttestation(VerificationResultAttestation object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Verification Result Primary Source</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Verification Result Primary Source</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseVerificationResultPrimarySource(VerificationResultPrimarySource object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Verification Result Status</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Verification Result Status</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseVerificationResultStatus(VerificationResultStatus object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Verification Result Validator</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Verification Result Validator</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseVerificationResultValidator(VerificationResultValidator object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Version Independent Resource Types All</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Version Independent Resource Types All</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseVersionIndependentResourceTypesAll(VersionIndependentResourceTypesAll object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Virtual Service Detail</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Virtual Service Detail</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseVirtualServiceDetail(VirtualServiceDetail object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Vision Base</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Vision Base</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseVisionBase(VisionBase object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Vision Eyes</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Vision Eyes</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseVisionEyes(VisionEyes object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Vision Prescription</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Vision Prescription</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseVisionPrescription(VisionPrescription object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Vision Prescription Lens Specification</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Vision Prescription Lens Specification</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseVisionPrescriptionLensSpecification(VisionPrescriptionLensSpecification object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Vision Prescription Prism</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Vision Prescription Prism</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseVisionPrescriptionPrism(VisionPrescriptionPrism object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>EObject</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch, but this is the last case anyway.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>EObject</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject)
	 * @generated
	 */
	@Override
	public T defaultCase(EObject object) {
		return null;
	}

} //FhirSwitch
